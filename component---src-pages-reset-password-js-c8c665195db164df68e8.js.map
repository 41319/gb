{"version":3,"file":"component---src-pages-reset-password-js-c8c665195db164df68e8.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/InputGroup.js","webpack://gatsby-starter-default/./src/components/Logo.js","webpack://gatsby-starter-default/./src/pages/resetPassword.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});\n\nexport default InputGroupWithExtras;","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nconst Header = ({ siteTitle }) => (\n    <>\n        <a href=\"/\">\n            <StaticImage src=\"../assets/img/logo.png\" width={128} />\n        </a>\n    </>\n)\n\nexport default Header\n","\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Col, Row, Form, Card, Button, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { navigate } from 'gatsby';\nimport { useLocation } from '@reach/router';\nimport Logo from '../components/Logo'\nimport Parse from '../vendor/Parse'\nconst { useState } = React;\n\nexport default () => {\n\n  const location = useLocation();\n  const qs = new URLSearchParams(location.search)\n  const token = qs.get('o')\n  const _email = qs.get('e')\n  const [email, setEmail] = useState(_email || '')\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n\n  return (\n    <main>\n      <section className=\"bg-soft d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <Row className=\"justify-content-center\">\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <Logo />\n                  <h3 className=\"mb-0\">Reset password</h3>\n                </div>\n                <Form>\n                  {\n                    !token && <Form.Group id=\"email\" className=\"mb-4\">\n                      <Form.Label>Your Email</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faEnvelope} />\n                        </InputGroup.Text>\n                        <Form.Control autoFocus value={email} required type=\"email\" placeholder=\"example@company.com\"\n                          onChange={(e) => {\n                            setEmail(e.target.value)\n                          }}\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                  }\n\n                  {\n                    token && <><Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control\n                          value={newPassword}\n                          required\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          onChange={(e) => {\n                            setNewPassword(e.target.value)\n                          }}\n                        />\n                      </InputGroup>\n                    </Form.Group>\n                      <Form.Group id=\"confirmPassword\" className=\"mb-4\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <InputGroup>\n                          <InputGroup.Text>\n                            <FontAwesomeIcon icon={faUnlockAlt} />\n                          </InputGroup.Text>\n                          <Form.Control\n                            value={confirmPassword}\n                            required\n                            type=\"password\"\n                            placeholder=\"Confirm Password\"\n                            onChange={(e) => {\n                              setConfirmPassword(e.target.value)\n                            }}\n                          />\n                        </InputGroup>\n                      </Form.Group></>\n                  }\n                  <Button variant=\"primary\" onClick={async () => {\n                    if (token) {\n                      if (confirmPassword === newPassword) {\n                        await Parse.Cloud.run('updatePassword', {\n                          otp: token,\n                          password: newPassword,\n                          email\n                        })\n                        navigate('/')\n                      }\n                    } else {\n                      Parse.Cloud.run('requestPasswordLink', {\n                        email\n                      })\n                    }\n                  }} className=\"w-100\">\n                    Reset password\n                  </Button>\n                </Form>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n"],"names":["InputGroupText","Component","InputGroup","_ref","ref","bsPrefix","size","className","_ref$as","as","props","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","siteTitle","React","href","StaticImage","src","width","__imageData","require","useState","location","useLocation","qs","URLSearchParams","search","token","get","_email","email","setEmail","newPassword","setNewPassword","confirmPassword","setConfirmPassword","Container","Row","Col","xs","Logo","Form","Group","id","Label","FontAwesomeIcon","icon","faEnvelope","Control","autoFocus","value","required","placeholder","onChange","e","target","faUnlockAlt","Button","variant","onClick","async","Parse","Cloud","run","otp","password","navigate"],"sourceRoot":""}