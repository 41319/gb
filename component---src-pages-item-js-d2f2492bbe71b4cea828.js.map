{"version":3,"file":"component---src-pages-item-js-d2f2492bbe71b4cea828.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/item.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Form, Button, InputGroup } from '@themesberg/react-bootstrap';\nimport useAuth from \"../hooks/userAuth\";\nimport Parse from '../vendor/Parse'\nimport Table from '../components/NumberTable'\nimport ReactJson from 'react-json-view'\nimport { Modal } from '@themesberg/react-bootstrap';\nimport ItemTable from '../components/ItemTable'\nimport { setIn } from \"immutable\";\nimport DraggableDiv from \"../components/DraggableDiv\";\nconst { useEffect, useState } = React;\n\nconst IndexPage = () => {\n    const { isLogin } = useAuth()\n    const [users, setUsers] = useState([])\n    const [info, setInfo] = useState(null)\n    const [cols, setCols] = useState([])\n    const [filter, setFilters] = useState([])\n    const run = async () => {\n        const res = await Parse.Cloud.run('getItemsMeta')\n        setUsers(res)\n    }\n\n    useEffect(() => {\n        const _itemCol = convertToCol(users[0] || {})\n        const _addCol = [\n            {\n                key: 'data',\n                label: 'data',\n                onRender: i => <>\n                    {\n                        <Button onClick={async () => {\n\n                            const res = await Parse.Cloud.run('getItemData', {\n                                id: i.objectId,\n                                key: i.type\n                            })\n                            setInfo({\n                                obj: i,\n                                key: 'data',\n                                val: res\n                            })\n                        }}> View</Button >\n                    }\n                </>\n            },\n            {\n                key: 'delete',\n                label: 'delete',\n                onRender: i => <>\n                    {\n                        <Button onClick={async () => {\n\n                            const res = await Parse.Cloud.run('deleteItems', {\n                                ids: [i.objectId],\n\n                            })\n                            run()\n                        }}> Delete</Button >\n                    }\n                </>\n            }\n        ]\n        setCols([\n            ..._itemCol,\n            ..._addCol\n        ])\n    }, [users])\n    const handleClose = () => {\n        setInfo(null)\n    }\n    useEffect(() => {\n        run()\n    }, [])\n    const renderValue = (key, obj) => {\n        const val = obj[key]\n        if (typeof val === 'string') {\n            return val\n        }\n        if (val instanceof Object && val.constructor === Object) {\n            return <Button onClick={() => setInfo({\n                key,\n                obj,\n                val: val\n            })}> View</Button >\n        }\n    }\n\n    const convertToCol = (obj) => {\n        return Object.keys(obj).map(e => {\n            return {\n                key: e,\n                label: e,\n                onRender: i => <>\n                    {\n                        renderValue(e, i)\n                    }\n                </>\n            }\n        })\n    }\n\n    const filters = users.reduce((prev, next, i, arr) => {\n        prev[next.type] = true\n        return prev\n    }, {})\n\n\n    const handleEdit = async (info, newValue) => {\n\n        const res = await Parse.Cloud.run('updateItem', {\n            objectId: info?.obj?.objectId,\n            model: {\n                [info.key]: newValue?.updated_src\n            }\n        })\n    }\n    return <Layout afterSearch={<></>} >\n        <div>\n            {\n                Object.keys(filters)?.map(e => <Button> {e} </Button>)\n            }\n        </div>\n\n        <DraggableDiv>\n            <ItemTable\n                cols={cols}\n                data={users}\n            />\n        </DraggableDiv>\n        <Modal fullscreen={true} as={Modal.Dialog} centered show={info} onHide={handleClose}>\n            <Modal.Header>\n                <Modal.Title className=\"h6\">Information</Modal.Title>\n                <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\n            </Modal.Header>\n            <Modal.Body>\n                {\n                    JSON.stringify(info?.val)\n                }\n                <ReactJson onDelete={(e) => { handleEdit(info, e) }} onAdd={(e) => handleEdit(info, e)} src={info?.val} onEdit={(e) => { handleEdit(info, e) }} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    </Layout >\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport default IndexPage\n"],"names":["useEffect","useState","React","Head","Seo","title","IndexPage","_Object$keys","isLogin","useAuth","users","setUsers","info","setInfo","cols","setCols","filter","setFilters","run","async","res","Parse","Cloud","_itemCol","convertToCol","_addCol","key","label","onRender","i","Button","onClick","id","objectId","type","obj","val","ids","concat","_toConsumableArray","handleClose","Object","keys","map","e","renderValue","constructor","filters","reduce","prev","next","arr","handleEdit","newValue","_info$obj","model","updated_src","Layout","afterSearch","DraggableDiv","ItemTable","data","Modal","fullscreen","as","Dialog","centered","show","onHide","Header","Title","className","variant","Body","JSON","stringify","ReactJson","onDelete","onAdd","src","onEdit","Footer"],"sourceRoot":""}