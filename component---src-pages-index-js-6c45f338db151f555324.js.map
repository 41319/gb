{"version":3,"file":"component---src-pages-index-js-6c45f338db151f555324.js","mappings":"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","sources":["webpack://azino-gatsby/./node_modules/classnames/index.js","webpack://azino-gatsby/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/extends.js","webpack://azino-gatsby/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","webpack://azino-gatsby/./node_modules/react-bootstrap/esm/ThemeProvider.js","webpack://azino-gatsby/./node_modules/react-bootstrap/esm/Container.js","webpack://azino-gatsby/./node_modules/react-bootstrap/esm/Row.js","webpack://azino-gatsby/./node_modules/react-bootstrap/esm/Col.js","webpack://azino-gatsby/./src/assets/images/logo.jpg","webpack://azino-gatsby/./src/components/header/header-two.js","webpack://azino-gatsby/./src/assets/images/shapes/testimonials-map-1-1.png","webpack://azino-gatsby/./node_modules/gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://azino-gatsby/./node_modules/memoize-one/dist/memoize-one.esm.js","webpack://azino-gatsby/./node_modules/react-window/dist/index.esm.js","webpack://azino-gatsby/./node_modules/react-window-infinite-loader/dist/index.esm.js","webpack://azino-gatsby/./src/components/cardLoader/index.js","webpack://azino-gatsby/./src/template/Card.js","webpack://azino-gatsby/./src/helpers/filter.js","webpack://azino-gatsby/./src/components/NumberFinder.js","webpack://azino-gatsby/./src/pages/index.js"],"sourcesContent":["/*!\n  Copyright (c) 2017 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n  function classNames() {\n    var classes = [];\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg) && arg.length) {\n        var inner = classNames.apply(null, arg);\n        if (inner) {\n          classes.push(inner);\n        }\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n    return classes.join(' ');\n  }\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React, { useContext, useMemo } from 'react';\nvar ThemeContext = React.createContext({});\nvar Consumer = ThemeContext.Consumer,\n  Provider = ThemeContext.Provider;\nfunction ThemeProvider(_ref) {\n  var prefixes = _ref.prefixes,\n    children = _ref.children;\n  var copiedPrefixes = useMemo(function () {\n    return _extends({}, prefixes);\n  }, [prefixes]);\n  return /*#__PURE__*/React.createElement(Provider, {\n    value: copiedPrefixes\n  }, children);\n}\nexport function useBootstrapPrefix(prefix, defaultPrefix) {\n  var prefixes = useContext(ThemeContext);\n  return prefix || prefixes[defaultPrefix] || defaultPrefix;\n}\nfunction createBootstrapComponent(Component, opts) {\n  if (typeof opts === 'string') opts = {\n    prefix: opts\n  };\n  var isClassy = Component.prototype && Component.prototype.isReactComponent; // If it's a functional component make sure we don't break it with a ref\n\n  var _opts = opts,\n    prefix = _opts.prefix,\n    _opts$forwardRefAs = _opts.forwardRefAs,\n    forwardRefAs = _opts$forwardRefAs === void 0 ? isClassy ? 'ref' : 'innerRef' : _opts$forwardRefAs;\n  var Wrapped = React.forwardRef(function (_ref2, ref) {\n    var props = _extends({}, _ref2);\n    props[forwardRefAs] = ref;\n    var bsPrefix = useBootstrapPrefix(props.bsPrefix, prefix);\n    return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n      bsPrefix: bsPrefix\n    }));\n  });\n  Wrapped.displayName = \"Bootstrap(\" + (Component.displayName || Component.name) + \")\";\n  return Wrapped;\n}\nexport { createBootstrapComponent, Consumer as ThemeConsumer };\nexport default ThemeProvider;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  fluid: false\n};\nvar Container = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    fluid = _ref.fluid,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    className = _ref.className,\n    props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"fluid\", \"as\", \"className\"]);\n  var prefix = useBootstrapPrefix(bsPrefix, 'container');\n  var suffix = typeof fluid === 'string' ? \"-\" + fluid : '-fluid';\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, fluid ? \"\" + prefix + suffix : prefix)\n  }));\n});\nContainer.displayName = 'Container';\nContainer.defaultProps = defaultProps;\nexport default Container;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar defaultProps = {\n  noGutters: false\n};\nvar Row = React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    noGutters = _ref.noGutters,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"noGutters\", \"as\"]);\n  var decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  var sizePrefix = decoratedBsPrefix + \"-cols\";\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var cols;\n    if (propValue != null && typeof propValue === 'object') {\n      cols = propValue.cols;\n    } else {\n      cols = propValue;\n    }\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (cols != null) classes.push(\"\" + sizePrefix + infix + \"-\" + cols);\n  });\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames.apply(void 0, [className, decoratedBsPrefix, noGutters && 'no-gutters'].concat(classes))\n  }));\n});\nRow.displayName = 'Row';\nRow.defaultProps = defaultProps;\nexport default Row;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar DEVICE_SIZES = ['xl', 'lg', 'md', 'sm', 'xs'];\nvar Col = React.forwardRef(\n// Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n    className = _ref.className,\n    _ref$as = _ref.as,\n    Component = _ref$as === void 0 ? 'div' : _ref$as,\n    props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\"]);\n  var prefix = useBootstrapPrefix(bsPrefix, 'col');\n  var spans = [];\n  var classes = [];\n  DEVICE_SIZES.forEach(function (brkPoint) {\n    var propValue = props[brkPoint];\n    delete props[brkPoint];\n    var span;\n    var offset;\n    var order;\n    if (typeof propValue === 'object' && propValue != null) {\n      var _propValue$span = propValue.span;\n      span = _propValue$span === void 0 ? true : _propValue$span;\n      offset = propValue.offset;\n      order = propValue.order;\n    } else {\n      span = propValue;\n    }\n    var infix = brkPoint !== 'xs' ? \"-\" + brkPoint : '';\n    if (span) spans.push(span === true ? \"\" + prefix + infix : \"\" + prefix + infix + \"-\" + span);\n    if (order != null) classes.push(\"order\" + infix + \"-\" + order);\n    if (offset != null) classes.push(\"offset\" + infix + \"-\" + offset);\n  });\n  if (!spans.length) {\n    spans.push(prefix); // plain 'col'\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames.apply(void 0, [className].concat(spans, classes))\n  }));\n});\nCol.displayName = 'Col';\nexport default Col;","export default __webpack_public_path__ + \"static/logo-9ca2aef60847907946025e75f555b338.jpg\";","import React, { useState } from \"react\";\nimport { Link } from \"gatsby\";\n\nimport NavLinks from \"./nav-links\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport logoDark from \"../../assets/images/logo.jpg\";\n\nconst HeaderTwo = ({ onSearch, onCategory }) => {\n  const [showFilter, setShowFilter] = useState(false)\n  return (\n    <div className=\"main-header__two .position-absolute .w-100\">\n      <div className=\"main-header__top\">\n        <Container>\n          <p></p>\n          <div className=\"main-header__social\">\n            <a href=\"https://facebook.com/mobile413\" aria-label=\"facebook\">\n              <i className=\"fab fa-facebook-square\"></i>\n            </a>\n          </div>\n        </Container>\n      </div>\n      <div className=\"header-upper\">\n        <Container>\n          <div className=\"logo-box\">\n          <img src={logoDark} alt=\"\" height=\"80px\" />\n          </div>\n          <div className=\"header-info__box\">\n\n            <div className=\"header-info__box-content\">\n              <div className=\"container\">\n                <Row>\n\n                  <Col lg={12} className=\"text-center\">\n                    <input type=\"text\" id=\"\" onChange={e => { onSearch && onSearch(e.target.value) }} placeholder=\"Search Here...\" />\n               \n                  </Col>\n\n                </Row>\n\n              </div>\n            </div>\n          </div>\n          <div className=\"header-info__box\">\n            <i className=\"azino-icon-calling\"></i>\n            <div className=\"header-info__box-content\">\n              <h3>Phone</h3>\n              <p>\n                <a href=\"tel:87413159\">8741 3159</a>\n              </p>\n            </div>\n          </div>\n        </Container>\n      </div>\n      {\n        showFilter && <Container className=\"d-flex position-relative flex-row justify-content-between\" >\n            <Col className=\"position-absolute\"  style={{ zIndex: 10, backgroundColor:  'gray' }}>\n            {\n              [\n                \"All\",\n                'I Ching Number',\n                'Huat',\n                'ABAB',\n                'AAA'\n              ].map(b => <span style={{cursor: 'pointer', fontSize: '24px'}}><a onClick={() => onCategory && onCategory(b)} class=\"page-link badge badge-secondary\">{ b } </a></span>)\n            }\n            \n            </Col>\n        </Container>\n      }\n    </div>\n  );\n};\n\nexport default HeaderTwo;\n","export default __webpack_public_path__ + \"static/testimonials-map-1-1-330c0afb1eb047c0468a8fb59ffd3c08.png\";","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}","var safeIsNaN = Number.isNaN || function ponyfill(value) {\n  return typeof value === 'number' && value !== value;\n};\nfunction isEqual(first, second) {\n  if (first === second) {\n    return true;\n  }\n  if (safeIsNaN(first) && safeIsNaN(second)) {\n    return true;\n  }\n  return false;\n}\nfunction areInputsEqual(newInputs, lastInputs) {\n  if (newInputs.length !== lastInputs.length) {\n    return false;\n  }\n  for (var i = 0; i < newInputs.length; i++) {\n    if (!isEqual(newInputs[i], lastInputs[i])) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction memoizeOne(resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = areInputsEqual;\n  }\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n  function memoized() {\n    var newArgs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      newArgs[_i] = arguments[_i];\n    }\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  }\n  return memoized;\n}\nexport default memoizeOne;","import _extends from '@babel/runtime/helpers/esm/extends';\nimport _assertThisInitialized from '@babel/runtime/helpers/esm/assertThisInitialized';\nimport _inheritsLoose from '@babel/runtime/helpers/esm/inheritsLoose';\nimport memoizeOne from 'memoize-one';\nimport { createElement, PureComponent } from 'react';\nimport _objectWithoutPropertiesLoose from '@babel/runtime/helpers/esm/objectWithoutPropertiesLoose';\n\n// Animation frame based implementation of setTimeout.\n// Inspired by Joe Lambert, https://gist.github.com/joelambert/1002116#file-requesttimeout-js\nvar hasNativePerformanceNow = typeof performance === 'object' && typeof performance.now === 'function';\nvar now = hasNativePerformanceNow ? function () {\n  return performance.now();\n} : function () {\n  return Date.now();\n};\nfunction cancelTimeout(timeoutID) {\n  cancelAnimationFrame(timeoutID.id);\n}\nfunction requestTimeout(callback, delay) {\n  var start = now();\n  function tick() {\n    if (now() - start >= delay) {\n      callback.call(null);\n    } else {\n      timeoutID.id = requestAnimationFrame(tick);\n    }\n  }\n  var timeoutID = {\n    id: requestAnimationFrame(tick)\n  };\n  return timeoutID;\n}\nvar size = -1; // This utility copied from \"dom-helpers\" package.\n\nfunction getScrollbarSize(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n  if (size === -1 || recalculate) {\n    var div = document.createElement('div');\n    var style = div.style;\n    style.width = '50px';\n    style.height = '50px';\n    style.overflow = 'scroll';\n    document.body.appendChild(div);\n    size = div.offsetWidth - div.clientWidth;\n    document.body.removeChild(div);\n  }\n  return size;\n}\nvar cachedRTLResult = null; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n// Chrome does not seem to adhere; its scrollLeft values are positive (measured relative to the left).\n// Safari's elastic bounce makes detecting this even more complicated wrt potential false positives.\n// The safest way to check this is to intentionally set a negative offset,\n// and then verify that the subsequent \"scroll\" event matches the negative offset.\n// If it does not match, then we can assume a non-standard RTL scroll implementation.\n\nfunction getRTLOffsetType(recalculate) {\n  if (recalculate === void 0) {\n    recalculate = false;\n  }\n  if (cachedRTLResult === null || recalculate) {\n    var outerDiv = document.createElement('div');\n    var outerStyle = outerDiv.style;\n    outerStyle.width = '50px';\n    outerStyle.height = '50px';\n    outerStyle.overflow = 'scroll';\n    outerStyle.direction = 'rtl';\n    var innerDiv = document.createElement('div');\n    var innerStyle = innerDiv.style;\n    innerStyle.width = '100px';\n    innerStyle.height = '100px';\n    outerDiv.appendChild(innerDiv);\n    document.body.appendChild(outerDiv);\n    if (outerDiv.scrollLeft > 0) {\n      cachedRTLResult = 'positive-descending';\n    } else {\n      outerDiv.scrollLeft = 1;\n      if (outerDiv.scrollLeft === 0) {\n        cachedRTLResult = 'negative';\n      } else {\n        cachedRTLResult = 'positive-ascending';\n      }\n    }\n    document.body.removeChild(outerDiv);\n    return cachedRTLResult;\n  }\n  return cachedRTLResult;\n}\nvar IS_SCROLLING_DEBOUNCE_INTERVAL = 150;\nvar defaultItemKey = function defaultItemKey(_ref) {\n  var columnIndex = _ref.columnIndex,\n    data = _ref.data,\n    rowIndex = _ref.rowIndex;\n  return rowIndex + \":\" + columnIndex;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\nvar devWarningsOverscanCount = null;\nvar devWarningsOverscanRowsColumnsCount = null;\nvar devWarningsTagName = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsOverscanCount = /*#__PURE__*/new WeakSet();\n    devWarningsOverscanRowsColumnsCount = /*#__PURE__*/new WeakSet();\n    devWarningsTagName = /*#__PURE__*/new WeakSet();\n  }\n}\nfunction createGridComponent(_ref2) {\n  var _class;\n  var getColumnOffset = _ref2.getColumnOffset,\n    getColumnStartIndexForOffset = _ref2.getColumnStartIndexForOffset,\n    getColumnStopIndexForStartIndex = _ref2.getColumnStopIndexForStartIndex,\n    getColumnWidth = _ref2.getColumnWidth,\n    getEstimatedTotalHeight = _ref2.getEstimatedTotalHeight,\n    getEstimatedTotalWidth = _ref2.getEstimatedTotalWidth,\n    getOffsetForColumnAndAlignment = _ref2.getOffsetForColumnAndAlignment,\n    getOffsetForRowAndAlignment = _ref2.getOffsetForRowAndAlignment,\n    getRowHeight = _ref2.getRowHeight,\n    getRowOffset = _ref2.getRowOffset,\n    getRowStartIndexForOffset = _ref2.getRowStartIndexForOffset,\n    getRowStopIndexForStartIndex = _ref2.getRowStopIndexForStartIndex,\n    initInstanceProps = _ref2.initInstanceProps,\n    shouldResetStyleCacheOnItemSizeChange = _ref2.shouldResetStyleCacheOnItemSizeChange,\n    validateProps = _ref2.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(Grid, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function Grid(props) {\n      var _this;\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._resetIsScrollingTimeoutId = null;\n      _this._outerRef = void 0;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        horizontalScrollDirection: 'forward',\n        scrollLeft: typeof _this.props.initialScrollLeft === 'number' ? _this.props.initialScrollLeft : 0,\n        scrollTop: typeof _this.props.initialScrollTop === 'number' ? _this.props.initialScrollTop : 0,\n        scrollUpdateWasRequested: false,\n        verticalScrollDirection: 'forward'\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanColumnStartIndex, overscanColumnStopIndex, overscanRowStartIndex, overscanRowStopIndex, visibleColumnStartIndex, visibleColumnStopIndex, visibleRowStartIndex, visibleRowStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanColumnStartIndex: overscanColumnStartIndex,\n          overscanColumnStopIndex: overscanColumnStopIndex,\n          overscanRowStartIndex: overscanRowStartIndex,\n          overscanRowStopIndex: overscanRowStopIndex,\n          visibleColumnStartIndex: visibleColumnStartIndex,\n          visibleColumnStopIndex: visibleColumnStopIndex,\n          visibleRowStartIndex: visibleRowStartIndex,\n          visibleRowStopIndex: visibleRowStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollLeft, scrollTop, horizontalScrollDirection, verticalScrollDirection, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          horizontalScrollDirection: horizontalScrollDirection,\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          verticalScrollDirection: verticalScrollDirection,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n      _this._getItemStyle = function (rowIndex, columnIndex) {\n        var _this$props = _this.props,\n          columnWidth = _this$props.columnWidth,\n          direction = _this$props.direction,\n          rowHeight = _this$props.rowHeight;\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && columnWidth, shouldResetStyleCacheOnItemSizeChange && direction, shouldResetStyleCacheOnItemSizeChange && rowHeight);\n        var key = rowIndex + \":\" + columnIndex;\n        var style;\n        if (itemStyleCache.hasOwnProperty(key)) {\n          style = itemStyleCache[key];\n        } else {\n          var _offset = getColumnOffset(_this.props, columnIndex, _this._instanceProps);\n          var isRtl = direction === 'rtl';\n          itemStyleCache[key] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : _offset,\n            right: isRtl ? _offset : undefined,\n            top: getRowOffset(_this.props, rowIndex, _this._instanceProps),\n            height: getRowHeight(_this.props, rowIndex, _this._instanceProps),\n            width: getColumnWidth(_this.props, columnIndex, _this._instanceProps)\n          };\n        }\n        return style;\n      };\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n      _this._onScroll = function (event) {\n        var _event$currentTarget = event.currentTarget,\n          clientHeight = _event$currentTarget.clientHeight,\n          clientWidth = _event$currentTarget.clientWidth,\n          scrollLeft = _event$currentTarget.scrollLeft,\n          scrollTop = _event$currentTarget.scrollTop,\n          scrollHeight = _event$currentTarget.scrollHeight,\n          scrollWidth = _event$currentTarget.scrollWidth;\n        _this.setState(function (prevState) {\n          if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n          var direction = _this.props.direction; // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n          // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n          // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n          // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n\n          var calculatedScrollLeft = scrollLeft;\n          if (direction === 'rtl') {\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                calculatedScrollLeft = -scrollLeft;\n                break;\n              case 'positive-descending':\n                calculatedScrollLeft = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n          calculatedScrollLeft = Math.max(0, Math.min(calculatedScrollLeft, scrollWidth - clientWidth));\n          var calculatedScrollTop = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n            scrollLeft: calculatedScrollLeft,\n            scrollTop: calculatedScrollTop,\n            verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward',\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL);\n      };\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1);\n        });\n      };\n      return _this;\n    }\n    Grid.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n    var _proto = Grid.prototype;\n    _proto.scrollTo = function scrollTo(_ref3) {\n      var scrollLeft = _ref3.scrollLeft,\n        scrollTop = _ref3.scrollTop;\n      if (scrollLeft !== undefined) {\n        scrollLeft = Math.max(0, scrollLeft);\n      }\n      if (scrollTop !== undefined) {\n        scrollTop = Math.max(0, scrollTop);\n      }\n      this.setState(function (prevState) {\n        if (scrollLeft === undefined) {\n          scrollLeft = prevState.scrollLeft;\n        }\n        if (scrollTop === undefined) {\n          scrollTop = prevState.scrollTop;\n        }\n        if (prevState.scrollLeft === scrollLeft && prevState.scrollTop === scrollTop) {\n          return null;\n        }\n        return {\n          horizontalScrollDirection: prevState.scrollLeft < scrollLeft ? 'forward' : 'backward',\n          scrollLeft: scrollLeft,\n          scrollTop: scrollTop,\n          scrollUpdateWasRequested: true,\n          verticalScrollDirection: prevState.scrollTop < scrollTop ? 'forward' : 'backward'\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n    _proto.scrollToItem = function scrollToItem(_ref4) {\n      var _ref4$align = _ref4.align,\n        align = _ref4$align === void 0 ? 'auto' : _ref4$align,\n        columnIndex = _ref4.columnIndex,\n        rowIndex = _ref4.rowIndex;\n      var _this$props2 = this.props,\n        columnCount = _this$props2.columnCount,\n        height = _this$props2.height,\n        rowCount = _this$props2.rowCount,\n        width = _this$props2.width;\n      var _this$state = this.state,\n        scrollLeft = _this$state.scrollLeft,\n        scrollTop = _this$state.scrollTop;\n      var scrollbarSize = getScrollbarSize();\n      if (columnIndex !== undefined) {\n        columnIndex = Math.max(0, Math.min(columnIndex, columnCount - 1));\n      }\n      if (rowIndex !== undefined) {\n        rowIndex = Math.max(0, Math.min(rowIndex, rowCount - 1));\n      }\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps); // The scrollbar size should be considered when scrolling an item into view,\n      // to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n\n      var horizontalScrollbarSize = estimatedTotalWidth > width ? scrollbarSize : 0;\n      var verticalScrollbarSize = estimatedTotalHeight > height ? scrollbarSize : 0;\n      this.scrollTo({\n        scrollLeft: columnIndex !== undefined ? getOffsetForColumnAndAlignment(this.props, columnIndex, align, scrollLeft, this._instanceProps, verticalScrollbarSize) : scrollLeft,\n        scrollTop: rowIndex !== undefined ? getOffsetForRowAndAlignment(this.props, rowIndex, align, scrollTop, this._instanceProps, horizontalScrollbarSize) : scrollTop\n      });\n    };\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n        initialScrollLeft = _this$props3.initialScrollLeft,\n        initialScrollTop = _this$props3.initialScrollTop;\n      if (this._outerRef != null) {\n        var outerRef = this._outerRef;\n        if (typeof initialScrollLeft === 'number') {\n          outerRef.scrollLeft = initialScrollLeft;\n        }\n        if (typeof initialScrollTop === 'number') {\n          outerRef.scrollTop = initialScrollTop;\n        }\n      }\n      this._callPropsCallbacks();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var direction = this.props.direction;\n      var _this$state2 = this.state,\n        scrollLeft = _this$state2.scrollLeft,\n        scrollTop = _this$state2.scrollTop,\n        scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n        // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n        // So we need to determine which browser behavior we're dealing with, and mimic it.\n        var outerRef = this._outerRef;\n        if (direction === 'rtl') {\n          switch (getRTLOffsetType()) {\n            case 'negative':\n              outerRef.scrollLeft = -scrollLeft;\n              break;\n            case 'positive-ascending':\n              outerRef.scrollLeft = scrollLeft;\n              break;\n            default:\n              var clientWidth = outerRef.clientWidth,\n                scrollWidth = outerRef.scrollWidth;\n              outerRef.scrollLeft = scrollWidth - clientWidth - scrollLeft;\n              break;\n          }\n        } else {\n          outerRef.scrollLeft = Math.max(0, scrollLeft);\n        }\n        outerRef.scrollTop = Math.max(0, scrollTop);\n      }\n      this._callPropsCallbacks();\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n    _proto.render = function render() {\n      var _this$props4 = this.props,\n        children = _this$props4.children,\n        className = _this$props4.className,\n        columnCount = _this$props4.columnCount,\n        direction = _this$props4.direction,\n        height = _this$props4.height,\n        innerRef = _this$props4.innerRef,\n        innerElementType = _this$props4.innerElementType,\n        innerTagName = _this$props4.innerTagName,\n        itemData = _this$props4.itemData,\n        _this$props4$itemKey = _this$props4.itemKey,\n        itemKey = _this$props4$itemKey === void 0 ? defaultItemKey : _this$props4$itemKey,\n        outerElementType = _this$props4.outerElementType,\n        outerTagName = _this$props4.outerTagName,\n        rowCount = _this$props4.rowCount,\n        style = _this$props4.style,\n        useIsScrolling = _this$props4.useIsScrolling,\n        width = _this$props4.width;\n      var isScrolling = this.state.isScrolling;\n      var _this$_getHorizontalR = this._getHorizontalRangeToRender(),\n        columnStartIndex = _this$_getHorizontalR[0],\n        columnStopIndex = _this$_getHorizontalR[1];\n      var _this$_getVerticalRan = this._getVerticalRangeToRender(),\n        rowStartIndex = _this$_getVerticalRan[0],\n        rowStopIndex = _this$_getVerticalRan[1];\n      var items = [];\n      if (columnCount > 0 && rowCount) {\n        for (var _rowIndex = rowStartIndex; _rowIndex <= rowStopIndex; _rowIndex++) {\n          for (var _columnIndex = columnStartIndex; _columnIndex <= columnStopIndex; _columnIndex++) {\n            items.push(createElement(children, {\n              columnIndex: _columnIndex,\n              data: itemData,\n              isScrolling: useIsScrolling ? isScrolling : undefined,\n              key: itemKey({\n                columnIndex: _columnIndex,\n                data: itemData,\n                rowIndex: _rowIndex\n              }),\n              rowIndex: _rowIndex,\n              style: this._getItemStyle(_rowIndex, _columnIndex)\n            }));\n          }\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n      var estimatedTotalHeight = getEstimatedTotalHeight(this.props, this._instanceProps);\n      var estimatedTotalWidth = getEstimatedTotalWidth(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: this._onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: estimatedTotalHeight,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: estimatedTotalWidth\n        }\n      }));\n    };\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      var _this$props5 = this.props,\n        columnCount = _this$props5.columnCount,\n        onItemsRendered = _this$props5.onItemsRendered,\n        onScroll = _this$props5.onScroll,\n        rowCount = _this$props5.rowCount;\n      if (typeof onItemsRendered === 'function') {\n        if (columnCount > 0 && rowCount > 0) {\n          var _this$_getHorizontalR2 = this._getHorizontalRangeToRender(),\n            _overscanColumnStartIndex = _this$_getHorizontalR2[0],\n            _overscanColumnStopIndex = _this$_getHorizontalR2[1],\n            _visibleColumnStartIndex = _this$_getHorizontalR2[2],\n            _visibleColumnStopIndex = _this$_getHorizontalR2[3];\n          var _this$_getVerticalRan2 = this._getVerticalRangeToRender(),\n            _overscanRowStartIndex = _this$_getVerticalRan2[0],\n            _overscanRowStopIndex = _this$_getVerticalRan2[1],\n            _visibleRowStartIndex = _this$_getVerticalRan2[2],\n            _visibleRowStopIndex = _this$_getVerticalRan2[3];\n          this._callOnItemsRendered(_overscanColumnStartIndex, _overscanColumnStopIndex, _overscanRowStartIndex, _overscanRowStopIndex, _visibleColumnStartIndex, _visibleColumnStopIndex, _visibleRowStartIndex, _visibleRowStopIndex);\n        }\n      }\n      if (typeof onScroll === 'function') {\n        var _this$state3 = this.state,\n          _horizontalScrollDirection = _this$state3.horizontalScrollDirection,\n          _scrollLeft = _this$state3.scrollLeft,\n          _scrollTop = _this$state3.scrollTop,\n          _scrollUpdateWasRequested = _this$state3.scrollUpdateWasRequested,\n          _verticalScrollDirection = _this$state3.verticalScrollDirection;\n        this._callOnScroll(_scrollLeft, _scrollTop, _horizontalScrollDirection, _verticalScrollDirection, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getHorizontalRangeToRender = function _getHorizontalRangeToRender() {\n      var _this$props6 = this.props,\n        columnCount = _this$props6.columnCount,\n        overscanColumnCount = _this$props6.overscanColumnCount,\n        overscanColumnsCount = _this$props6.overscanColumnsCount,\n        overscanCount = _this$props6.overscanCount,\n        rowCount = _this$props6.rowCount;\n      var _this$state4 = this.state,\n        horizontalScrollDirection = _this$state4.horizontalScrollDirection,\n        isScrolling = _this$state4.isScrolling,\n        scrollLeft = _this$state4.scrollLeft;\n      var overscanCountResolved = overscanColumnCount || overscanColumnsCount || overscanCount || 1;\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n      var startIndex = getColumnStartIndexForOffset(this.props, scrollLeft, this._instanceProps);\n      var stopIndex = getColumnStopIndexForStartIndex(this.props, startIndex, scrollLeft, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || horizontalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || horizontalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(columnCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n    _proto._getVerticalRangeToRender = function _getVerticalRangeToRender() {\n      var _this$props7 = this.props,\n        columnCount = _this$props7.columnCount,\n        overscanCount = _this$props7.overscanCount,\n        overscanRowCount = _this$props7.overscanRowCount,\n        overscanRowsCount = _this$props7.overscanRowsCount,\n        rowCount = _this$props7.rowCount;\n      var _this$state5 = this.state,\n        isScrolling = _this$state5.isScrolling,\n        verticalScrollDirection = _this$state5.verticalScrollDirection,\n        scrollTop = _this$state5.scrollTop;\n      var overscanCountResolved = overscanRowCount || overscanRowsCount || overscanCount || 1;\n      if (columnCount === 0 || rowCount === 0) {\n        return [0, 0, 0, 0];\n      }\n      var startIndex = getRowStartIndexForOffset(this.props, scrollTop, this._instanceProps);\n      var stopIndex = getRowStopIndexForStartIndex(this.props, startIndex, scrollTop, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || verticalScrollDirection === 'backward' ? Math.max(1, overscanCountResolved) : 1;\n      var overscanForward = !isScrolling || verticalScrollDirection === 'forward' ? Math.max(1, overscanCountResolved) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(rowCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n    return Grid;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    useIsScrolling: false\n  }, _class;\n}\nvar validateSharedProps = function validateSharedProps(_ref5, _ref6) {\n  var children = _ref5.children,\n    direction = _ref5.direction,\n    height = _ref5.height,\n    innerTagName = _ref5.innerTagName,\n    outerTagName = _ref5.outerTagName,\n    overscanColumnsCount = _ref5.overscanColumnsCount,\n    overscanCount = _ref5.overscanCount,\n    overscanRowsCount = _ref5.overscanRowsCount,\n    width = _ref5.width;\n  var instance = _ref6.instance;\n  if (process.env.NODE_ENV !== 'production') {\n    if (typeof overscanCount === 'number') {\n      if (devWarningsOverscanCount && !devWarningsOverscanCount.has(instance)) {\n        devWarningsOverscanCount.add(instance);\n        console.warn('The overscanCount prop has been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n    if (typeof overscanColumnsCount === 'number' || typeof overscanRowsCount === 'number') {\n      if (devWarningsOverscanRowsColumnsCount && !devWarningsOverscanRowsColumnsCount.has(instance)) {\n        devWarningsOverscanRowsColumnsCount.add(instance);\n        console.warn('The overscanColumnsCount and overscanRowsCount props have been deprecated. ' + 'Please use the overscanColumnCount and overscanRowCount props instead.');\n      }\n    }\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName && !devWarningsTagName.has(instance)) {\n        devWarningsTagName.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    }\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n    switch (direction) {\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n    if (typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Grids must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    }\n    if (typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Grids must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\nvar DEFAULT_ESTIMATED_ITEM_SIZE = 50;\nvar getEstimatedTotalHeight = function getEstimatedTotalHeight(_ref, _ref2) {\n  var rowCount = _ref.rowCount;\n  var rowMetadataMap = _ref2.rowMetadataMap,\n    estimatedRowHeight = _ref2.estimatedRowHeight,\n    lastMeasuredRowIndex = _ref2.lastMeasuredRowIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredRowIndex >= rowCount) {\n    lastMeasuredRowIndex = rowCount - 1;\n  }\n  if (lastMeasuredRowIndex >= 0) {\n    var itemMetadata = rowMetadataMap[lastMeasuredRowIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n  var numUnmeasuredItems = rowCount - lastMeasuredRowIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedRowHeight;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\nvar getEstimatedTotalWidth = function getEstimatedTotalWidth(_ref3, _ref4) {\n  var columnCount = _ref3.columnCount;\n  var columnMetadataMap = _ref4.columnMetadataMap,\n    estimatedColumnWidth = _ref4.estimatedColumnWidth,\n    lastMeasuredColumnIndex = _ref4.lastMeasuredColumnIndex;\n  var totalSizeOfMeasuredRows = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredColumnIndex >= columnCount) {\n    lastMeasuredColumnIndex = columnCount - 1;\n  }\n  if (lastMeasuredColumnIndex >= 0) {\n    var itemMetadata = columnMetadataMap[lastMeasuredColumnIndex];\n    totalSizeOfMeasuredRows = itemMetadata.offset + itemMetadata.size;\n  }\n  var numUnmeasuredItems = columnCount - lastMeasuredColumnIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedColumnWidth;\n  return totalSizeOfMeasuredRows + totalSizeOfUnmeasuredItems;\n};\nvar getItemMetadata = function getItemMetadata(itemType, props, index, instanceProps) {\n  var itemMetadataMap, itemSize, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    itemSize = props.columnWidth;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    itemSize = props.rowHeight;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n    if (itemType === 'column') {\n      instanceProps.lastMeasuredColumnIndex = index;\n    } else {\n      instanceProps.lastMeasuredRowIndex = index;\n    }\n  }\n  return itemMetadataMap[index];\n};\nvar findNearestItem = function findNearestItem(itemType, props, instanceProps, offset) {\n  var itemMetadataMap, lastMeasuredIndex;\n  if (itemType === 'column') {\n    itemMetadataMap = instanceProps.columnMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredColumnIndex;\n  } else {\n    itemMetadataMap = instanceProps.rowMetadataMap;\n    lastMeasuredIndex = instanceProps.lastMeasuredRowIndex;\n  }\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch(itemType, props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch(itemType, props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\nvar findNearestItemBinarySearch = function findNearestItemBinarySearch(itemType, props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata(itemType, props, middle, instanceProps).offset;\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\nvar findNearestItemExponentialSearch = function findNearestItemExponentialSearch(itemType, props, instanceProps, index, offset) {\n  var itemCount = itemType === 'column' ? props.columnCount : props.rowCount;\n  var interval = 1;\n  while (index < itemCount && getItemMetadata(itemType, props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return findNearestItemBinarySearch(itemType, props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\nvar getOffsetForIndexAndAlignment = function getOffsetForIndexAndAlignment(itemType, props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n  var size = itemType === 'column' ? props.width : props.height;\n  var itemMetadata = getItemMetadata(itemType, props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n  // To ensure it reflects actual measurements instead of just estimates.\n\n  var estimatedTotalSize = itemType === 'column' ? getEstimatedTotalWidth(props, instanceProps) : getEstimatedTotalHeight(props, instanceProps);\n  var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n  var minOffset = Math.max(0, itemMetadata.offset - size + scrollbarSize + itemMetadata.size);\n  if (align === 'smart') {\n    if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n      align = 'auto';\n    } else {\n      align = 'center';\n    }\n  }\n  switch (align) {\n    case 'start':\n      return maxOffset;\n    case 'end':\n      return minOffset;\n    case 'center':\n      return Math.round(minOffset + (maxOffset - minOffset) / 2);\n    case 'auto':\n    default:\n      if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n        return scrollOffset;\n      } else if (minOffset > maxOffset) {\n        // Because we only take into account the scrollbar size when calculating minOffset\n        // this value can be larger than maxOffset when at the end of the list\n        return minOffset;\n      } else if (scrollOffset < minOffset) {\n        return minOffset;\n      } else {\n        return maxOffset;\n      }\n  }\n};\nvar VariableSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(props, index, instanceProps) {\n    return getItemMetadata('column', props, index, instanceProps).offset;\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(props, scrollLeft, instanceProps) {\n    return findNearestItem('column', props, instanceProps, scrollLeft);\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(props, startIndex, scrollLeft, instanceProps) {\n    var columnCount = props.columnCount,\n      width = props.width;\n    var itemMetadata = getItemMetadata('column', props, startIndex, instanceProps);\n    var maxOffset = scrollLeft + width;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n    while (stopIndex < columnCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('column', props, stopIndex, instanceProps).size;\n    }\n    return stopIndex;\n  },\n  getColumnWidth: function getColumnWidth(props, index, instanceProps) {\n    return instanceProps.columnMetadataMap[index].size;\n  },\n  getEstimatedTotalHeight: getEstimatedTotalHeight,\n  getEstimatedTotalWidth: getEstimatedTotalWidth,\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('column', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    return getOffsetForIndexAndAlignment('row', props, index, align, scrollOffset, instanceProps, scrollbarSize);\n  },\n  getRowOffset: function getRowOffset(props, index, instanceProps) {\n    return getItemMetadata('row', props, index, instanceProps).offset;\n  },\n  getRowHeight: function getRowHeight(props, index, instanceProps) {\n    return instanceProps.rowMetadataMap[index].size;\n  },\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(props, scrollTop, instanceProps) {\n    return findNearestItem('row', props, instanceProps, scrollTop);\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(props, startIndex, scrollTop, instanceProps) {\n    var rowCount = props.rowCount,\n      height = props.height;\n    var itemMetadata = getItemMetadata('row', props, startIndex, instanceProps);\n    var maxOffset = scrollTop + height;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n    while (stopIndex < rowCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata('row', props, stopIndex, instanceProps).size;\n    }\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref5 = props,\n      estimatedColumnWidth = _ref5.estimatedColumnWidth,\n      estimatedRowHeight = _ref5.estimatedRowHeight;\n    var instanceProps = {\n      columnMetadataMap: {},\n      estimatedColumnWidth: estimatedColumnWidth || DEFAULT_ESTIMATED_ITEM_SIZE,\n      estimatedRowHeight: estimatedRowHeight || DEFAULT_ESTIMATED_ITEM_SIZE,\n      lastMeasuredColumnIndex: -1,\n      lastMeasuredRowIndex: -1,\n      rowMetadataMap: {}\n    };\n    instance.resetAfterColumnIndex = function (columnIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n      instance.resetAfterIndices({\n        columnIndex: columnIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n    instance.resetAfterRowIndex = function (rowIndex, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n      instance.resetAfterIndices({\n        rowIndex: rowIndex,\n        shouldForceUpdate: shouldForceUpdate\n      });\n    };\n    instance.resetAfterIndices = function (_ref6) {\n      var columnIndex = _ref6.columnIndex,\n        rowIndex = _ref6.rowIndex,\n        _ref6$shouldForceUpda = _ref6.shouldForceUpdate,\n        shouldForceUpdate = _ref6$shouldForceUpda === void 0 ? true : _ref6$shouldForceUpda;\n      if (typeof columnIndex === 'number') {\n        instanceProps.lastMeasuredColumnIndex = Math.min(instanceProps.lastMeasuredColumnIndex, columnIndex - 1);\n      }\n      if (typeof rowIndex === 'number') {\n        instanceProps.lastMeasuredRowIndex = Math.min(instanceProps.lastMeasuredRowIndex, rowIndex - 1);\n      } // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref7) {\n    var columnWidth = _ref7.columnWidth,\n      rowHeight = _ref7.rowHeight;\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'function') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      } else if (typeof rowHeight !== 'function') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar IS_SCROLLING_DEBOUNCE_INTERVAL$1 = 150;\nvar defaultItemKey$1 = function defaultItemKey(index, data) {\n  return index;\n}; // In DEV mode, this Set helps us only log a warning once per component instance.\n// This avoids spamming the console every time a render happens.\n\nvar devWarningsDirection = null;\nvar devWarningsTagName$1 = null;\nif (process.env.NODE_ENV !== 'production') {\n  if (typeof window !== 'undefined' && typeof window.WeakSet !== 'undefined') {\n    devWarningsDirection = /*#__PURE__*/new WeakSet();\n    devWarningsTagName$1 = /*#__PURE__*/new WeakSet();\n  }\n}\nfunction createListComponent(_ref) {\n  var _class;\n  var getItemOffset = _ref.getItemOffset,\n    getEstimatedTotalSize = _ref.getEstimatedTotalSize,\n    getItemSize = _ref.getItemSize,\n    getOffsetForIndexAndAlignment = _ref.getOffsetForIndexAndAlignment,\n    getStartIndexForOffset = _ref.getStartIndexForOffset,\n    getStopIndexForStartIndex = _ref.getStopIndexForStartIndex,\n    initInstanceProps = _ref.initInstanceProps,\n    shouldResetStyleCacheOnItemSizeChange = _ref.shouldResetStyleCacheOnItemSizeChange,\n    validateProps = _ref.validateProps;\n  return _class = /*#__PURE__*/function (_PureComponent) {\n    _inheritsLoose(List, _PureComponent);\n\n    // Always use explicit constructor for React components.\n    // It produces less code after transpilation. (#26)\n    // eslint-disable-next-line no-useless-constructor\n    function List(props) {\n      var _this;\n      _this = _PureComponent.call(this, props) || this;\n      _this._instanceProps = initInstanceProps(_this.props, _assertThisInitialized(_this));\n      _this._outerRef = void 0;\n      _this._resetIsScrollingTimeoutId = null;\n      _this.state = {\n        instance: _assertThisInitialized(_this),\n        isScrolling: false,\n        scrollDirection: 'forward',\n        scrollOffset: typeof _this.props.initialScrollOffset === 'number' ? _this.props.initialScrollOffset : 0,\n        scrollUpdateWasRequested: false\n      };\n      _this._callOnItemsRendered = void 0;\n      _this._callOnItemsRendered = memoizeOne(function (overscanStartIndex, overscanStopIndex, visibleStartIndex, visibleStopIndex) {\n        return _this.props.onItemsRendered({\n          overscanStartIndex: overscanStartIndex,\n          overscanStopIndex: overscanStopIndex,\n          visibleStartIndex: visibleStartIndex,\n          visibleStopIndex: visibleStopIndex\n        });\n      });\n      _this._callOnScroll = void 0;\n      _this._callOnScroll = memoizeOne(function (scrollDirection, scrollOffset, scrollUpdateWasRequested) {\n        return _this.props.onScroll({\n          scrollDirection: scrollDirection,\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: scrollUpdateWasRequested\n        });\n      });\n      _this._getItemStyle = void 0;\n      _this._getItemStyle = function (index) {\n        var _this$props = _this.props,\n          direction = _this$props.direction,\n          itemSize = _this$props.itemSize,\n          layout = _this$props.layout;\n        var itemStyleCache = _this._getItemStyleCache(shouldResetStyleCacheOnItemSizeChange && itemSize, shouldResetStyleCacheOnItemSizeChange && layout, shouldResetStyleCacheOnItemSizeChange && direction);\n        var style;\n        if (itemStyleCache.hasOwnProperty(index)) {\n          style = itemStyleCache[index];\n        } else {\n          var _offset = getItemOffset(_this.props, index, _this._instanceProps);\n          var size = getItemSize(_this.props, index, _this._instanceProps); // TODO Deprecate direction \"horizontal\"\n\n          var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n          var isRtl = direction === 'rtl';\n          var offsetHorizontal = isHorizontal ? _offset : 0;\n          itemStyleCache[index] = style = {\n            position: 'absolute',\n            left: isRtl ? undefined : offsetHorizontal,\n            right: isRtl ? offsetHorizontal : undefined,\n            top: !isHorizontal ? _offset : 0,\n            height: !isHorizontal ? size : '100%',\n            width: isHorizontal ? size : '100%'\n          };\n        }\n        return style;\n      };\n      _this._getItemStyleCache = void 0;\n      _this._getItemStyleCache = memoizeOne(function (_, __, ___) {\n        return {};\n      });\n      _this._onScrollHorizontal = function (event) {\n        var _event$currentTarget = event.currentTarget,\n          clientWidth = _event$currentTarget.clientWidth,\n          scrollLeft = _event$currentTarget.scrollLeft,\n          scrollWidth = _event$currentTarget.scrollWidth;\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollLeft) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          }\n          var direction = _this.props.direction;\n          var scrollOffset = scrollLeft;\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // It's also easier for this component if we convert offsets to the same format as they would be in for ltr.\n            // So the simplest solution is to determine which browser behavior we're dealing with, and convert based on it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                scrollOffset = -scrollLeft;\n                break;\n              case 'positive-descending':\n                scrollOffset = scrollWidth - clientWidth - scrollLeft;\n                break;\n            }\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n          scrollOffset = Math.max(0, Math.min(scrollOffset, scrollWidth - clientWidth));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollLeft ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n      _this._onScrollVertical = function (event) {\n        var _event$currentTarget2 = event.currentTarget,\n          clientHeight = _event$currentTarget2.clientHeight,\n          scrollHeight = _event$currentTarget2.scrollHeight,\n          scrollTop = _event$currentTarget2.scrollTop;\n        _this.setState(function (prevState) {\n          if (prevState.scrollOffset === scrollTop) {\n            // Scroll position may have been updated by cDM/cDU,\n            // In which case we don't need to trigger another render,\n            // And we don't want to update state.isScrolling.\n            return null;\n          } // Prevent Safari's elastic scrolling from causing visual shaking when scrolling past bounds.\n\n          var scrollOffset = Math.max(0, Math.min(scrollTop, scrollHeight - clientHeight));\n          return {\n            isScrolling: true,\n            scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n            scrollOffset: scrollOffset,\n            scrollUpdateWasRequested: false\n          };\n        }, _this._resetIsScrollingDebounced);\n      };\n      _this._outerRefSetter = function (ref) {\n        var outerRef = _this.props.outerRef;\n        _this._outerRef = ref;\n        if (typeof outerRef === 'function') {\n          outerRef(ref);\n        } else if (outerRef != null && typeof outerRef === 'object' && outerRef.hasOwnProperty('current')) {\n          outerRef.current = ref;\n        }\n      };\n      _this._resetIsScrollingDebounced = function () {\n        if (_this._resetIsScrollingTimeoutId !== null) {\n          cancelTimeout(_this._resetIsScrollingTimeoutId);\n        }\n        _this._resetIsScrollingTimeoutId = requestTimeout(_this._resetIsScrolling, IS_SCROLLING_DEBOUNCE_INTERVAL$1);\n      };\n      _this._resetIsScrolling = function () {\n        _this._resetIsScrollingTimeoutId = null;\n        _this.setState({\n          isScrolling: false\n        }, function () {\n          // Clear style cache after state update has been committed.\n          // This way we don't break pure sCU for items that don't use isScrolling param.\n          _this._getItemStyleCache(-1, null);\n        });\n      };\n      return _this;\n    }\n    List.getDerivedStateFromProps = function getDerivedStateFromProps(nextProps, prevState) {\n      validateSharedProps$1(nextProps, prevState);\n      validateProps(nextProps);\n      return null;\n    };\n    var _proto = List.prototype;\n    _proto.scrollTo = function scrollTo(scrollOffset) {\n      scrollOffset = Math.max(0, scrollOffset);\n      this.setState(function (prevState) {\n        if (prevState.scrollOffset === scrollOffset) {\n          return null;\n        }\n        return {\n          scrollDirection: prevState.scrollOffset < scrollOffset ? 'forward' : 'backward',\n          scrollOffset: scrollOffset,\n          scrollUpdateWasRequested: true\n        };\n      }, this._resetIsScrollingDebounced);\n    };\n    _proto.scrollToItem = function scrollToItem(index, align) {\n      if (align === void 0) {\n        align = 'auto';\n      }\n      var _this$props2 = this.props,\n        itemCount = _this$props2.itemCount,\n        layout = _this$props2.layout;\n      var scrollOffset = this.state.scrollOffset;\n      index = Math.max(0, Math.min(index, itemCount - 1)); // The scrollbar size should be considered when scrolling an item into view, to ensure it's fully visible.\n      // But we only need to account for its size when it's actually visible.\n      // This is an edge case for lists; normally they only scroll in the dominant direction.\n\n      var scrollbarSize = 0;\n      if (this._outerRef) {\n        var outerRef = this._outerRef;\n        if (layout === 'vertical') {\n          scrollbarSize = outerRef.scrollWidth > outerRef.clientWidth ? getScrollbarSize() : 0;\n        } else {\n          scrollbarSize = outerRef.scrollHeight > outerRef.clientHeight ? getScrollbarSize() : 0;\n        }\n      }\n      this.scrollTo(getOffsetForIndexAndAlignment(this.props, index, align, scrollOffset, this._instanceProps, scrollbarSize));\n    };\n    _proto.componentDidMount = function componentDidMount() {\n      var _this$props3 = this.props,\n        direction = _this$props3.direction,\n        initialScrollOffset = _this$props3.initialScrollOffset,\n        layout = _this$props3.layout;\n      if (typeof initialScrollOffset === 'number' && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          outerRef.scrollLeft = initialScrollOffset;\n        } else {\n          outerRef.scrollTop = initialScrollOffset;\n        }\n      }\n      this._callPropsCallbacks();\n    };\n    _proto.componentDidUpdate = function componentDidUpdate() {\n      var _this$props4 = this.props,\n        direction = _this$props4.direction,\n        layout = _this$props4.layout;\n      var _this$state = this.state,\n        scrollOffset = _this$state.scrollOffset,\n        scrollUpdateWasRequested = _this$state.scrollUpdateWasRequested;\n      if (scrollUpdateWasRequested && this._outerRef != null) {\n        var outerRef = this._outerRef; // TODO Deprecate direction \"horizontal\"\n\n        if (direction === 'horizontal' || layout === 'horizontal') {\n          if (direction === 'rtl') {\n            // TRICKY According to the spec, scrollLeft should be negative for RTL aligned elements.\n            // This is not the case for all browsers though (e.g. Chrome reports values as positive, measured relative to the left).\n            // So we need to determine which browser behavior we're dealing with, and mimic it.\n            switch (getRTLOffsetType()) {\n              case 'negative':\n                outerRef.scrollLeft = -scrollOffset;\n                break;\n              case 'positive-ascending':\n                outerRef.scrollLeft = scrollOffset;\n                break;\n              default:\n                var clientWidth = outerRef.clientWidth,\n                  scrollWidth = outerRef.scrollWidth;\n                outerRef.scrollLeft = scrollWidth - clientWidth - scrollOffset;\n                break;\n            }\n          } else {\n            outerRef.scrollLeft = scrollOffset;\n          }\n        } else {\n          outerRef.scrollTop = scrollOffset;\n        }\n      }\n      this._callPropsCallbacks();\n    };\n    _proto.componentWillUnmount = function componentWillUnmount() {\n      if (this._resetIsScrollingTimeoutId !== null) {\n        cancelTimeout(this._resetIsScrollingTimeoutId);\n      }\n    };\n    _proto.render = function render() {\n      var _this$props5 = this.props,\n        children = _this$props5.children,\n        className = _this$props5.className,\n        direction = _this$props5.direction,\n        height = _this$props5.height,\n        innerRef = _this$props5.innerRef,\n        innerElementType = _this$props5.innerElementType,\n        innerTagName = _this$props5.innerTagName,\n        itemCount = _this$props5.itemCount,\n        itemData = _this$props5.itemData,\n        _this$props5$itemKey = _this$props5.itemKey,\n        itemKey = _this$props5$itemKey === void 0 ? defaultItemKey$1 : _this$props5$itemKey,\n        layout = _this$props5.layout,\n        outerElementType = _this$props5.outerElementType,\n        outerTagName = _this$props5.outerTagName,\n        style = _this$props5.style,\n        useIsScrolling = _this$props5.useIsScrolling,\n        width = _this$props5.width;\n      var isScrolling = this.state.isScrolling; // TODO Deprecate direction \"horizontal\"\n\n      var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n      var onScroll = isHorizontal ? this._onScrollHorizontal : this._onScrollVertical;\n      var _this$_getRangeToRend = this._getRangeToRender(),\n        startIndex = _this$_getRangeToRend[0],\n        stopIndex = _this$_getRangeToRend[1];\n      var items = [];\n      if (itemCount > 0) {\n        for (var _index = startIndex; _index <= stopIndex; _index++) {\n          items.push(createElement(children, {\n            data: itemData,\n            key: itemKey(_index, itemData),\n            index: _index,\n            isScrolling: useIsScrolling ? isScrolling : undefined,\n            style: this._getItemStyle(_index)\n          }));\n        }\n      } // Read this value AFTER items have been created,\n      // So their actual sizes (if variable) are taken into consideration.\n\n      var estimatedTotalSize = getEstimatedTotalSize(this.props, this._instanceProps);\n      return createElement(outerElementType || outerTagName || 'div', {\n        className: className,\n        onScroll: onScroll,\n        ref: this._outerRefSetter,\n        style: _extends({\n          position: 'relative',\n          height: height,\n          width: width,\n          overflow: 'auto',\n          WebkitOverflowScrolling: 'touch',\n          willChange: 'transform',\n          direction: direction\n        }, style)\n      }, createElement(innerElementType || innerTagName || 'div', {\n        children: items,\n        ref: innerRef,\n        style: {\n          height: isHorizontal ? '100%' : estimatedTotalSize,\n          pointerEvents: isScrolling ? 'none' : undefined,\n          width: isHorizontal ? estimatedTotalSize : '100%'\n        }\n      }));\n    };\n    _proto._callPropsCallbacks = function _callPropsCallbacks() {\n      if (typeof this.props.onItemsRendered === 'function') {\n        var itemCount = this.props.itemCount;\n        if (itemCount > 0) {\n          var _this$_getRangeToRend2 = this._getRangeToRender(),\n            _overscanStartIndex = _this$_getRangeToRend2[0],\n            _overscanStopIndex = _this$_getRangeToRend2[1],\n            _visibleStartIndex = _this$_getRangeToRend2[2],\n            _visibleStopIndex = _this$_getRangeToRend2[3];\n          this._callOnItemsRendered(_overscanStartIndex, _overscanStopIndex, _visibleStartIndex, _visibleStopIndex);\n        }\n      }\n      if (typeof this.props.onScroll === 'function') {\n        var _this$state2 = this.state,\n          _scrollDirection = _this$state2.scrollDirection,\n          _scrollOffset = _this$state2.scrollOffset,\n          _scrollUpdateWasRequested = _this$state2.scrollUpdateWasRequested;\n        this._callOnScroll(_scrollDirection, _scrollOffset, _scrollUpdateWasRequested);\n      }\n    } // Lazily create and cache item styles while scrolling,\n    // So that pure component sCU will prevent re-renders.\n    // We maintain this cache, and pass a style prop rather than index,\n    // So that List can clear cached styles and force item re-render if necessary.\n    ;\n\n    _proto._getRangeToRender = function _getRangeToRender() {\n      var _this$props6 = this.props,\n        itemCount = _this$props6.itemCount,\n        overscanCount = _this$props6.overscanCount;\n      var _this$state3 = this.state,\n        isScrolling = _this$state3.isScrolling,\n        scrollDirection = _this$state3.scrollDirection,\n        scrollOffset = _this$state3.scrollOffset;\n      if (itemCount === 0) {\n        return [0, 0, 0, 0];\n      }\n      var startIndex = getStartIndexForOffset(this.props, scrollOffset, this._instanceProps);\n      var stopIndex = getStopIndexForStartIndex(this.props, startIndex, scrollOffset, this._instanceProps); // Overscan by one item in each direction so that tab/focus works.\n      // If there isn't at least one extra item, tab loops back around.\n\n      var overscanBackward = !isScrolling || scrollDirection === 'backward' ? Math.max(1, overscanCount) : 1;\n      var overscanForward = !isScrolling || scrollDirection === 'forward' ? Math.max(1, overscanCount) : 1;\n      return [Math.max(0, startIndex - overscanBackward), Math.max(0, Math.min(itemCount - 1, stopIndex + overscanForward)), startIndex, stopIndex];\n    };\n    return List;\n  }(PureComponent), _class.defaultProps = {\n    direction: 'ltr',\n    itemData: undefined,\n    layout: 'vertical',\n    overscanCount: 2,\n    useIsScrolling: false\n  }, _class;\n} // NOTE: I considered further wrapping individual items with a pure ListItem component.\n// This would avoid ever calling the render function for the same index more than once,\n// But it would also add the overhead of a lot of components/fibers.\n// I assume people already do this (render function returning a class component),\n// So my doing it would just unnecessarily double the wrappers.\n\nvar validateSharedProps$1 = function validateSharedProps(_ref2, _ref3) {\n  var children = _ref2.children,\n    direction = _ref2.direction,\n    height = _ref2.height,\n    layout = _ref2.layout,\n    innerTagName = _ref2.innerTagName,\n    outerTagName = _ref2.outerTagName,\n    width = _ref2.width;\n  var instance = _ref3.instance;\n  if (process.env.NODE_ENV !== 'production') {\n    if (innerTagName != null || outerTagName != null) {\n      if (devWarningsTagName$1 && !devWarningsTagName$1.has(instance)) {\n        devWarningsTagName$1.add(instance);\n        console.warn('The innerTagName and outerTagName props have been deprecated. ' + 'Please use the innerElementType and outerElementType props instead.');\n      }\n    } // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    switch (direction) {\n      case 'horizontal':\n      case 'vertical':\n        if (devWarningsDirection && !devWarningsDirection.has(instance)) {\n          devWarningsDirection.add(instance);\n          console.warn('The direction prop should be either \"ltr\" (default) or \"rtl\". ' + 'Please use the layout prop to specify \"vertical\" (default) or \"horizontal\" orientation.');\n        }\n        break;\n      case 'ltr':\n      case 'rtl':\n        // Valid values\n        break;\n      default:\n        throw Error('An invalid \"direction\" prop has been specified. ' + 'Value should be either \"ltr\" or \"rtl\". ' + (\"\\\"\" + direction + \"\\\" was specified.\"));\n    }\n    switch (layout) {\n      case 'horizontal':\n      case 'vertical':\n        // Valid values\n        break;\n      default:\n        throw Error('An invalid \"layout\" prop has been specified. ' + 'Value should be either \"horizontal\" or \"vertical\". ' + (\"\\\"\" + layout + \"\\\" was specified.\"));\n    }\n    if (children == null) {\n      throw Error('An invalid \"children\" prop has been specified. ' + 'Value should be a React component. ' + (\"\\\"\" + (children === null ? 'null' : typeof children) + \"\\\" was specified.\"));\n    }\n    if (isHorizontal && typeof width !== 'number') {\n      throw Error('An invalid \"width\" prop has been specified. ' + 'Horizontal lists must specify a number for width. ' + (\"\\\"\" + (width === null ? 'null' : typeof width) + \"\\\" was specified.\"));\n    } else if (!isHorizontal && typeof height !== 'number') {\n      throw Error('An invalid \"height\" prop has been specified. ' + 'Vertical lists must specify a number for height. ' + (\"\\\"\" + (height === null ? 'null' : typeof height) + \"\\\" was specified.\"));\n    }\n  }\n};\nvar DEFAULT_ESTIMATED_ITEM_SIZE$1 = 50;\nvar getItemMetadata$1 = function getItemMetadata(props, index, instanceProps) {\n  var _ref = props,\n    itemSize = _ref.itemSize;\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n    lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  if (index > lastMeasuredIndex) {\n    var offset = 0;\n    if (lastMeasuredIndex >= 0) {\n      var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n      offset = itemMetadata.offset + itemMetadata.size;\n    }\n    for (var i = lastMeasuredIndex + 1; i <= index; i++) {\n      var size = itemSize(i);\n      itemMetadataMap[i] = {\n        offset: offset,\n        size: size\n      };\n      offset += size;\n    }\n    instanceProps.lastMeasuredIndex = index;\n  }\n  return itemMetadataMap[index];\n};\nvar findNearestItem$1 = function findNearestItem(props, instanceProps, offset) {\n  var itemMetadataMap = instanceProps.itemMetadataMap,\n    lastMeasuredIndex = instanceProps.lastMeasuredIndex;\n  var lastMeasuredItemOffset = lastMeasuredIndex > 0 ? itemMetadataMap[lastMeasuredIndex].offset : 0;\n  if (lastMeasuredItemOffset >= offset) {\n    // If we've already measured items within this range just use a binary search as it's faster.\n    return findNearestItemBinarySearch$1(props, instanceProps, lastMeasuredIndex, 0, offset);\n  } else {\n    // If we haven't yet measured this high, fallback to an exponential search with an inner binary search.\n    // The exponential search avoids pre-computing sizes for the full set of items as a binary search would.\n    // The overall complexity for this approach is O(log n).\n    return findNearestItemExponentialSearch$1(props, instanceProps, Math.max(0, lastMeasuredIndex), offset);\n  }\n};\nvar findNearestItemBinarySearch$1 = function findNearestItemBinarySearch(props, instanceProps, high, low, offset) {\n  while (low <= high) {\n    var middle = low + Math.floor((high - low) / 2);\n    var currentOffset = getItemMetadata$1(props, middle, instanceProps).offset;\n    if (currentOffset === offset) {\n      return middle;\n    } else if (currentOffset < offset) {\n      low = middle + 1;\n    } else if (currentOffset > offset) {\n      high = middle - 1;\n    }\n  }\n  if (low > 0) {\n    return low - 1;\n  } else {\n    return 0;\n  }\n};\nvar findNearestItemExponentialSearch$1 = function findNearestItemExponentialSearch(props, instanceProps, index, offset) {\n  var itemCount = props.itemCount;\n  var interval = 1;\n  while (index < itemCount && getItemMetadata$1(props, index, instanceProps).offset < offset) {\n    index += interval;\n    interval *= 2;\n  }\n  return findNearestItemBinarySearch$1(props, instanceProps, Math.min(index, itemCount - 1), Math.floor(index / 2), offset);\n};\nvar getEstimatedTotalSize = function getEstimatedTotalSize(_ref2, _ref3) {\n  var itemCount = _ref2.itemCount;\n  var itemMetadataMap = _ref3.itemMetadataMap,\n    estimatedItemSize = _ref3.estimatedItemSize,\n    lastMeasuredIndex = _ref3.lastMeasuredIndex;\n  var totalSizeOfMeasuredItems = 0; // Edge case check for when the number of items decreases while a scroll is in progress.\n  // https://github.com/bvaughn/react-window/pull/138\n\n  if (lastMeasuredIndex >= itemCount) {\n    lastMeasuredIndex = itemCount - 1;\n  }\n  if (lastMeasuredIndex >= 0) {\n    var itemMetadata = itemMetadataMap[lastMeasuredIndex];\n    totalSizeOfMeasuredItems = itemMetadata.offset + itemMetadata.size;\n  }\n  var numUnmeasuredItems = itemCount - lastMeasuredIndex - 1;\n  var totalSizeOfUnmeasuredItems = numUnmeasuredItems * estimatedItemSize;\n  return totalSizeOfMeasuredItems + totalSizeOfUnmeasuredItems;\n};\nvar VariableSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(props, index, instanceProps) {\n    return getItemMetadata$1(props, index, instanceProps).offset;\n  },\n  getItemSize: function getItemSize(props, index, instanceProps) {\n    return instanceProps.itemMetadataMap[index].size;\n  },\n  getEstimatedTotalSize: getEstimatedTotalSize,\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(props, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = props.direction,\n      height = props.height,\n      layout = props.layout,\n      width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, index, instanceProps); // Get estimated total size after ItemMetadata is computed,\n    // To ensure it reflects actual measurements instead of just estimates.\n\n    var estimatedTotalSize = getEstimatedTotalSize(props, instanceProps);\n    var maxOffset = Math.max(0, Math.min(estimatedTotalSize - size, itemMetadata.offset));\n    var minOffset = Math.max(0, itemMetadata.offset - size + itemMetadata.size + scrollbarSize);\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        return Math.round(minOffset + (maxOffset - minOffset) / 2);\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(props, offset, instanceProps) {\n    return findNearestItem$1(props, instanceProps, offset);\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(props, startIndex, scrollOffset, instanceProps) {\n    var direction = props.direction,\n      height = props.height,\n      itemCount = props.itemCount,\n      layout = props.layout,\n      width = props.width; // TODO Deprecate direction \"horizontal\"\n\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var itemMetadata = getItemMetadata$1(props, startIndex, instanceProps);\n    var maxOffset = scrollOffset + size;\n    var offset = itemMetadata.offset + itemMetadata.size;\n    var stopIndex = startIndex;\n    while (stopIndex < itemCount - 1 && offset < maxOffset) {\n      stopIndex++;\n      offset += getItemMetadata$1(props, stopIndex, instanceProps).size;\n    }\n    return stopIndex;\n  },\n  initInstanceProps: function initInstanceProps(props, instance) {\n    var _ref4 = props,\n      estimatedItemSize = _ref4.estimatedItemSize;\n    var instanceProps = {\n      itemMetadataMap: {},\n      estimatedItemSize: estimatedItemSize || DEFAULT_ESTIMATED_ITEM_SIZE$1,\n      lastMeasuredIndex: -1\n    };\n    instance.resetAfterIndex = function (index, shouldForceUpdate) {\n      if (shouldForceUpdate === void 0) {\n        shouldForceUpdate = true;\n      }\n      instanceProps.lastMeasuredIndex = Math.min(instanceProps.lastMeasuredIndex, index - 1); // We could potentially optimize further by only evicting styles after this index,\n      // But since styles are only cached while scrolling is in progress-\n      // It seems an unnecessary optimization.\n      // It's unlikely that resetAfterIndex() will be called while a user is scrolling.\n\n      instance._getItemStyleCache(-1);\n      if (shouldForceUpdate) {\n        instance.forceUpdate();\n      }\n    };\n    return instanceProps;\n  },\n  shouldResetStyleCacheOnItemSizeChange: false,\n  validateProps: function validateProps(_ref5) {\n    var itemSize = _ref5.itemSize;\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'function') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a function. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar FixedSizeGrid = /*#__PURE__*/createGridComponent({\n  getColumnOffset: function getColumnOffset(_ref, index) {\n    var columnWidth = _ref.columnWidth;\n    return index * columnWidth;\n  },\n  getColumnWidth: function getColumnWidth(_ref2, index) {\n    var columnWidth = _ref2.columnWidth;\n    return columnWidth;\n  },\n  getRowOffset: function getRowOffset(_ref3, index) {\n    var rowHeight = _ref3.rowHeight;\n    return index * rowHeight;\n  },\n  getRowHeight: function getRowHeight(_ref4, index) {\n    var rowHeight = _ref4.rowHeight;\n    return rowHeight;\n  },\n  getEstimatedTotalHeight: function getEstimatedTotalHeight(_ref5) {\n    var rowCount = _ref5.rowCount,\n      rowHeight = _ref5.rowHeight;\n    return rowHeight * rowCount;\n  },\n  getEstimatedTotalWidth: function getEstimatedTotalWidth(_ref6) {\n    var columnCount = _ref6.columnCount,\n      columnWidth = _ref6.columnWidth;\n    return columnWidth * columnCount;\n  },\n  getOffsetForColumnAndAlignment: function getOffsetForColumnAndAlignment(_ref7, columnIndex, align, scrollLeft, instanceProps, scrollbarSize) {\n    var columnCount = _ref7.columnCount,\n      columnWidth = _ref7.columnWidth,\n      width = _ref7.width;\n    var lastColumnOffset = Math.max(0, columnCount * columnWidth - width);\n    var maxOffset = Math.min(lastColumnOffset, columnIndex * columnWidth);\n    var minOffset = Math.max(0, columnIndex * columnWidth - width + scrollbarSize + columnWidth);\n    if (align === 'smart') {\n      if (scrollLeft >= minOffset - width && scrollLeft <= maxOffset + width) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n        if (middleOffset < Math.ceil(width / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastColumnOffset + Math.floor(width / 2)) {\n          return lastColumnOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollLeft >= minOffset && scrollLeft <= maxOffset) {\n          return scrollLeft;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollLeft < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n  getOffsetForRowAndAlignment: function getOffsetForRowAndAlignment(_ref8, rowIndex, align, scrollTop, instanceProps, scrollbarSize) {\n    var rowHeight = _ref8.rowHeight,\n      height = _ref8.height,\n      rowCount = _ref8.rowCount;\n    var lastRowOffset = Math.max(0, rowCount * rowHeight - height);\n    var maxOffset = Math.min(lastRowOffset, rowIndex * rowHeight);\n    var minOffset = Math.max(0, rowIndex * rowHeight - height + scrollbarSize + rowHeight);\n    if (align === 'smart') {\n      if (scrollTop >= minOffset - height && scrollTop <= maxOffset + height) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        // \"Centered\" offset is usually the average of the min and max.\n        // But near the edges of the list, this doesn't hold true.\n        var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n        if (middleOffset < Math.ceil(height / 2)) {\n          return 0; // near the beginning\n        } else if (middleOffset > lastRowOffset + Math.floor(height / 2)) {\n          return lastRowOffset; // near the end\n        } else {\n          return middleOffset;\n        }\n      case 'auto':\n      default:\n        if (scrollTop >= minOffset && scrollTop <= maxOffset) {\n          return scrollTop;\n        } else if (minOffset > maxOffset) {\n          // Because we only take into account the scrollbar size when calculating minOffset\n          // this value can be larger than maxOffset when at the end of the list\n          return minOffset;\n        } else if (scrollTop < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n  getColumnStartIndexForOffset: function getColumnStartIndexForOffset(_ref9, scrollLeft) {\n    var columnWidth = _ref9.columnWidth,\n      columnCount = _ref9.columnCount;\n    return Math.max(0, Math.min(columnCount - 1, Math.floor(scrollLeft / columnWidth)));\n  },\n  getColumnStopIndexForStartIndex: function getColumnStopIndexForStartIndex(_ref10, startIndex, scrollLeft) {\n    var columnWidth = _ref10.columnWidth,\n      columnCount = _ref10.columnCount,\n      width = _ref10.width;\n    var left = startIndex * columnWidth;\n    var numVisibleColumns = Math.ceil((width + scrollLeft - left) / columnWidth);\n    return Math.max(0, Math.min(columnCount - 1, startIndex + numVisibleColumns - 1 // -1 is because stop index is inclusive\n    ));\n  },\n\n  getRowStartIndexForOffset: function getRowStartIndexForOffset(_ref11, scrollTop) {\n    var rowHeight = _ref11.rowHeight,\n      rowCount = _ref11.rowCount;\n    return Math.max(0, Math.min(rowCount - 1, Math.floor(scrollTop / rowHeight)));\n  },\n  getRowStopIndexForStartIndex: function getRowStopIndexForStartIndex(_ref12, startIndex, scrollTop) {\n    var rowHeight = _ref12.rowHeight,\n      rowCount = _ref12.rowCount,\n      height = _ref12.height;\n    var top = startIndex * rowHeight;\n    var numVisibleRows = Math.ceil((height + scrollTop - top) / rowHeight);\n    return Math.max(0, Math.min(rowCount - 1, startIndex + numVisibleRows - 1 // -1 is because stop index is inclusive\n    ));\n  },\n\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref13) {\n    var columnWidth = _ref13.columnWidth,\n      rowHeight = _ref13.rowHeight;\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof columnWidth !== 'number') {\n        throw Error('An invalid \"columnWidth\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (columnWidth === null ? 'null' : typeof columnWidth) + \"\\\" was specified.\"));\n      }\n      if (typeof rowHeight !== 'number') {\n        throw Error('An invalid \"rowHeight\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (rowHeight === null ? 'null' : typeof rowHeight) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\nvar FixedSizeList = /*#__PURE__*/createListComponent({\n  getItemOffset: function getItemOffset(_ref, index) {\n    var itemSize = _ref.itemSize;\n    return index * itemSize;\n  },\n  getItemSize: function getItemSize(_ref2, index) {\n    var itemSize = _ref2.itemSize;\n    return itemSize;\n  },\n  getEstimatedTotalSize: function getEstimatedTotalSize(_ref3) {\n    var itemCount = _ref3.itemCount,\n      itemSize = _ref3.itemSize;\n    return itemSize * itemCount;\n  },\n  getOffsetForIndexAndAlignment: function getOffsetForIndexAndAlignment(_ref4, index, align, scrollOffset, instanceProps, scrollbarSize) {\n    var direction = _ref4.direction,\n      height = _ref4.height,\n      itemCount = _ref4.itemCount,\n      itemSize = _ref4.itemSize,\n      layout = _ref4.layout,\n      width = _ref4.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var size = isHorizontal ? width : height;\n    var lastItemOffset = Math.max(0, itemCount * itemSize - size);\n    var maxOffset = Math.min(lastItemOffset, index * itemSize);\n    var minOffset = Math.max(0, index * itemSize - size + itemSize + scrollbarSize);\n    if (align === 'smart') {\n      if (scrollOffset >= minOffset - size && scrollOffset <= maxOffset + size) {\n        align = 'auto';\n      } else {\n        align = 'center';\n      }\n    }\n    switch (align) {\n      case 'start':\n        return maxOffset;\n      case 'end':\n        return minOffset;\n      case 'center':\n        {\n          // \"Centered\" offset is usually the average of the min and max.\n          // But near the edges of the list, this doesn't hold true.\n          var middleOffset = Math.round(minOffset + (maxOffset - minOffset) / 2);\n          if (middleOffset < Math.ceil(size / 2)) {\n            return 0; // near the beginning\n          } else if (middleOffset > lastItemOffset + Math.floor(size / 2)) {\n            return lastItemOffset; // near the end\n          } else {\n            return middleOffset;\n          }\n        }\n      case 'auto':\n      default:\n        if (scrollOffset >= minOffset && scrollOffset <= maxOffset) {\n          return scrollOffset;\n        } else if (scrollOffset < minOffset) {\n          return minOffset;\n        } else {\n          return maxOffset;\n        }\n    }\n  },\n  getStartIndexForOffset: function getStartIndexForOffset(_ref5, offset) {\n    var itemCount = _ref5.itemCount,\n      itemSize = _ref5.itemSize;\n    return Math.max(0, Math.min(itemCount - 1, Math.floor(offset / itemSize)));\n  },\n  getStopIndexForStartIndex: function getStopIndexForStartIndex(_ref6, startIndex, scrollOffset) {\n    var direction = _ref6.direction,\n      height = _ref6.height,\n      itemCount = _ref6.itemCount,\n      itemSize = _ref6.itemSize,\n      layout = _ref6.layout,\n      width = _ref6.width;\n    // TODO Deprecate direction \"horizontal\"\n    var isHorizontal = direction === 'horizontal' || layout === 'horizontal';\n    var offset = startIndex * itemSize;\n    var size = isHorizontal ? width : height;\n    var numVisibleItems = Math.ceil((size + scrollOffset - offset) / itemSize);\n    return Math.max(0, Math.min(itemCount - 1, startIndex + numVisibleItems - 1 // -1 is because stop index is inclusive\n    ));\n  },\n\n  initInstanceProps: function initInstanceProps(props) {// Noop\n  },\n  shouldResetStyleCacheOnItemSizeChange: true,\n  validateProps: function validateProps(_ref7) {\n    var itemSize = _ref7.itemSize;\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof itemSize !== 'number') {\n        throw Error('An invalid \"itemSize\" prop has been specified. ' + 'Value should be a number. ' + (\"\\\"\" + (itemSize === null ? 'null' : typeof itemSize) + \"\\\" was specified.\"));\n      }\n    }\n  }\n});\n\n// Pulled from react-compat\n// https://github.com/developit/preact-compat/blob/7c5de00e7c85e2ffd011bf3af02899b63f699d3a/src/index.js#L349\nfunction shallowDiffers(prev, next) {\n  for (var attribute in prev) {\n    if (!(attribute in next)) {\n      return true;\n    }\n  }\n  for (var _attribute in next) {\n    if (prev[_attribute] !== next[_attribute]) {\n      return true;\n    }\n  }\n  return false;\n}\nvar _excluded = [\"style\"],\n  _excluded2 = [\"style\"];\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-api.html#reactmemo\n\nfunction areEqual(prevProps, nextProps) {\n  var prevStyle = prevProps.style,\n    prevRest = _objectWithoutPropertiesLoose(prevProps, _excluded);\n  var nextStyle = nextProps.style,\n    nextRest = _objectWithoutPropertiesLoose(nextProps, _excluded2);\n  return !shallowDiffers(prevStyle, nextStyle) && !shallowDiffers(prevRest, nextRest);\n}\n\n// It knows to compare individual style props and ignore the wrapper object.\n// See https://reactjs.org/docs/react-component.html#shouldcomponentupdate\n\nfunction shouldComponentUpdate(nextProps, nextState) {\n  return !areEqual(this.props, nextProps) || shallowDiffers(this.state, nextState);\n}\nexport { FixedSizeGrid, FixedSizeList, VariableSizeGrid, VariableSizeList, areEqual, shouldComponentUpdate };","import { PureComponent } from 'react';\nfunction isInteger(value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n}\nfunction isRangeVisible(_ref) {\n  var lastRenderedStartIndex = _ref.lastRenderedStartIndex,\n    lastRenderedStopIndex = _ref.lastRenderedStopIndex,\n    startIndex = _ref.startIndex,\n    stopIndex = _ref.stopIndex;\n  return !(startIndex > lastRenderedStopIndex || stopIndex < lastRenderedStartIndex);\n}\nfunction scanForUnloadedRanges(_ref) {\n  var isItemLoaded = _ref.isItemLoaded,\n    itemCount = _ref.itemCount,\n    minimumBatchSize = _ref.minimumBatchSize,\n    startIndex = _ref.startIndex,\n    stopIndex = _ref.stopIndex;\n  var unloadedRanges = [];\n  var rangeStartIndex = null;\n  var rangeStopIndex = null;\n  for (var _index = startIndex; _index <= stopIndex; _index++) {\n    var loaded = isItemLoaded(_index);\n    if (!loaded) {\n      rangeStopIndex = _index;\n      if (rangeStartIndex === null) {\n        rangeStartIndex = _index;\n      }\n    } else if (rangeStopIndex !== null) {\n      unloadedRanges.push(rangeStartIndex, rangeStopIndex);\n      rangeStartIndex = rangeStopIndex = null;\n    }\n  }\n\n  // If :rangeStopIndex is not null it means we haven't ran out of unloaded rows.\n  // Scan forward to try filling our :minimumBatchSize.\n  if (rangeStopIndex !== null) {\n    var potentialStopIndex = Math.min(Math.max(rangeStopIndex, rangeStartIndex + minimumBatchSize - 1), itemCount - 1);\n    for (var _index2 = rangeStopIndex + 1; _index2 <= potentialStopIndex; _index2++) {\n      if (!isItemLoaded(_index2)) {\n        rangeStopIndex = _index2;\n      } else {\n        break;\n      }\n    }\n    unloadedRanges.push(rangeStartIndex, rangeStopIndex);\n  }\n\n  // Check to see if our first range ended prematurely.\n  // In this case we should scan backwards to try filling our :minimumBatchSize.\n  if (unloadedRanges.length) {\n    while (unloadedRanges[1] - unloadedRanges[0] + 1 < minimumBatchSize && unloadedRanges[0] > 0) {\n      var _index3 = unloadedRanges[0] - 1;\n      if (!isItemLoaded(_index3)) {\n        unloadedRanges[0] = _index3;\n      } else {\n        break;\n      }\n    }\n  }\n  return unloadedRanges;\n}\nvar classCallCheck = function classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar inherits = function inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\nvar possibleConstructorReturn = function possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\nvar InfiniteLoader = function (_PureComponent) {\n  inherits(InfiniteLoader, _PureComponent);\n  function InfiniteLoader() {\n    var _ref;\n    var _temp, _this, _ret;\n    classCallCheck(this, InfiniteLoader);\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    return _ret = (_temp = (_this = possibleConstructorReturn(this, (_ref = InfiniteLoader.__proto__ || Object.getPrototypeOf(InfiniteLoader)).call.apply(_ref, [this].concat(args))), _this), _this._lastRenderedStartIndex = -1, _this._lastRenderedStopIndex = -1, _this._memoizedUnloadedRanges = [], _this._onItemsRendered = function (_ref2) {\n      var visibleStartIndex = _ref2.visibleStartIndex,\n        visibleStopIndex = _ref2.visibleStopIndex;\n      if (process.env.NODE_ENV !== 'production') {\n        if (!isInteger(visibleStartIndex) || !isInteger(visibleStopIndex)) {\n          console.warn('Invalid onItemsRendered signature; please refer to InfiniteLoader documentation.');\n        }\n        if (typeof _this.props.loadMoreRows === 'function') {\n          console.warn('InfiniteLoader \"loadMoreRows\" prop has been renamed to \"loadMoreItems\".');\n        }\n      }\n      _this._lastRenderedStartIndex = visibleStartIndex;\n      _this._lastRenderedStopIndex = visibleStopIndex;\n      _this._ensureRowsLoaded(visibleStartIndex, visibleStopIndex);\n    }, _this._setRef = function (listRef) {\n      _this._listRef = listRef;\n    }, _temp), possibleConstructorReturn(_this, _ret);\n  }\n  createClass(InfiniteLoader, [{\n    key: 'resetloadMoreItemsCache',\n    value: function resetloadMoreItemsCache() {\n      var autoReload = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      this._memoizedUnloadedRanges = [];\n      if (autoReload) {\n        this._ensureRowsLoaded(this._lastRenderedStartIndex, this._lastRenderedStopIndex);\n      }\n    }\n  }, {\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      if (process.env.NODE_ENV !== 'production') {\n        if (this._listRef == null) {\n          console.warn('Invalid list ref; please refer to InfiniteLoader documentation.');\n        }\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var children = this.props.children;\n      return children({\n        onItemsRendered: this._onItemsRendered,\n        ref: this._setRef\n      });\n    }\n  }, {\n    key: '_ensureRowsLoaded',\n    value: function _ensureRowsLoaded(startIndex, stopIndex) {\n      var _props = this.props,\n        isItemLoaded = _props.isItemLoaded,\n        itemCount = _props.itemCount,\n        _props$minimumBatchSi = _props.minimumBatchSize,\n        minimumBatchSize = _props$minimumBatchSi === undefined ? 10 : _props$minimumBatchSi,\n        _props$threshold = _props.threshold,\n        threshold = _props$threshold === undefined ? 15 : _props$threshold;\n      var unloadedRanges = scanForUnloadedRanges({\n        isItemLoaded: isItemLoaded,\n        itemCount: itemCount,\n        minimumBatchSize: minimumBatchSize,\n        startIndex: Math.max(0, startIndex - threshold),\n        stopIndex: Math.min(itemCount - 1, stopIndex + threshold)\n      });\n\n      // Avoid calling load-rows unless range has changed.\n      // This shouldn't be strictly necessary, but is maybe nice to do.\n      if (this._memoizedUnloadedRanges.length !== unloadedRanges.length || this._memoizedUnloadedRanges.some(function (startOrStop, index) {\n        return unloadedRanges[index] !== startOrStop;\n      })) {\n        this._memoizedUnloadedRanges = unloadedRanges;\n        this._loadUnloadedRanges(unloadedRanges);\n      }\n    }\n  }, {\n    key: '_loadUnloadedRanges',\n    value: function _loadUnloadedRanges(unloadedRanges) {\n      var _this2 = this;\n\n      // loadMoreRows was renamed to loadMoreItems in v1.0.3; will be removed in v2.0\n      var loadMoreItems = this.props.loadMoreItems || this.props.loadMoreRows;\n      var _loop = function _loop(i) {\n        var startIndex = unloadedRanges[i];\n        var stopIndex = unloadedRanges[i + 1];\n        var promise = loadMoreItems(startIndex, stopIndex);\n        if (promise != null) {\n          promise.then(function () {\n            // Refresh the visible rows if any of them have just been loaded.\n            // Otherwise they will remain in their unloaded visual state.\n            if (isRangeVisible({\n              lastRenderedStartIndex: _this2._lastRenderedStartIndex,\n              lastRenderedStopIndex: _this2._lastRenderedStopIndex,\n              startIndex: startIndex,\n              stopIndex: stopIndex\n            })) {\n              // Handle an unmount while promises are still in flight.\n              if (_this2._listRef == null) {\n                return;\n              }\n\n              // Resize cached row sizes for VariableSizeList,\n              // otherwise just re-render the list.\n              if (typeof _this2._listRef.resetAfterIndex === 'function') {\n                _this2._listRef.resetAfterIndex(startIndex, true);\n              } else {\n                // HACK reset temporarily cached item styles to force PureComponent to re-render.\n                // This is pretty gross, but I'm okay with it for now.\n                // Don't judge me.\n                if (typeof _this2._listRef._getItemStyleCache === 'function') {\n                  _this2._listRef._getItemStyleCache(-1);\n                }\n                _this2._listRef.forceUpdate();\n              }\n            }\n          });\n        }\n      };\n      for (var i = 0; i < unloadedRanges.length; i += 2) {\n        _loop(i);\n      }\n    }\n  }]);\n  return InfiniteLoader;\n}(PureComponent);\nexport default InfiniteLoader;","import React, { useRef, useEffect } from \"react\";\nimport { FixedSizeList as List } from \"react-window\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\n\nexport default function ExampleWrapper({\n  // Are there more items to load?\n  // (This information comes from the most recent API request.)\n  hasNextPage,\n\n  // Are we currently loading a page of items?\n  // (This may be an in-flight flag in your Redux store for example.)\n  isNextPageLoading,\n\n  // Array of items loaded so far.\n  items,\n\n  // Callback function responsible for loading the next page of items.\n  loadNextPage,\n\n  sortOrder\n}) {\n  // We create a reference for the InfiniteLoader\n  const listRef = useRef(null);\n  const hasMountedRef = useRef(false);\n\n  // Each time the sort prop changed we called the method resetloadMoreItemsCache to clear the cache\n  useEffect(() => {\n    if (listRef.current && hasMountedRef.current) {\n      listRef.current.resetloadMoreItemsCache();\n    }\n    hasMountedRef.current = true;\n  }, [sortOrder]);\n\n  // If there are more items to be loaded then add an extra row to hold a loading indicator.\n  const itemCount = hasNextPage ? items.length + 1 : items.length;\n\n  // Only load 1 page of items at a time.\n  // Pass an empty callback to InfiniteLoader in case it asks us to load more than once.\n  const loadMoreItems = isNextPageLoading ? () => {} : loadNextPage;\n\n  // Every row is loaded except for our loading indicator row.\n  const isItemLoaded = index => !hasNextPage || index < items.length;\n\n  // Render an item or a loading indicator.\n  const Item = ({ index, style }) => {\n    let content;\n    if (!isItemLoaded(index)) {\n      content = \"Loading...\";\n    } else {\n      content = <>\n      {items[index]} \n      </>\n    }\n\n    return <div style={style}>\n        {content} \n    </div>;\n  };\n\n  useEffect(() => {\n\n    if(hasMountedRef.current) {\n      return listRef?.current?.resetloadMoreItemsCache();\n    }\n    \n  }, [items])\n  // We passed down the ref to the InfiniteLoader component\n  return (\n    <InfiniteLoader\n      ref={listRef}\n      isItemLoaded={isItemLoaded}\n      itemCount={itemCount}\n      loadMoreItems={loadMoreItems}\n    >\n      {({ onItemsRendered, ref }) => (\n        <List\n          className=\"List\"\n          height={window.innerHeight-152 -  41}\n          itemCount={itemCount}\n          itemSize={290}\n          onItemsRendered={onItemsRendered}\n          ref={ref}\n          width=\"100%\"\n        >\n          {Item}\n        </List>\n      )}\n    </InfiniteLoader>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport bgImage from \"../assets/images/shapes/testimonials-map-1-1.png\";\nimport Loader from \"../components/cardLoader\";\nimport Layout from '../components/layout'\nimport { Link } from 'gatsby'\nimport { useMediaQuery } from 'react-responsive'\n\n\nconst TestimonialsOne = ({ items, title: cardTitle }) => {\n\n\n\n  const handleItem = (_items) => {\n    return _items.map(\n      ({ image, progressCount, raised, goal, title, text, link, number }, index) => {\n        return <Container className=\"m-10\"><Row>\n          <Col lg={2}></Col>\n\n          <Col lg={8}>\n            <div className=\"cause-card\" key={`cause-card-key-${index}`}>\n              <div className=\"cause-card__inner\" style={{ height: '260px' }}>\n                <div className=\"cause-card__image\">\n                  <img src={image} alt=\"\" />\n                </div>\n                <div className=\"p-4\">\n                  <h2> { cardTitle }</h2>\n                  <h3>\n                    {number}\n                  </h3>\n                  <div className=\"cause-card__top\">\n\n\n                  </div>\n                  <h3>\n                    <Link to={link}>{title}</Link>\n                  </h3>\n                  <p>{text}</p>\n                  <div className=\"cause-card__bottom\">\n                    <Link className=\"thm-btn ml-auto\" to={`https://wa.me/6587413159?text=I'm%20interested%20in%20${number}`}>\n                      I want this!\n                    </Link>\n                    {\n                      \"\" && <Link className=\"cause-card__share\" to=\"#\">\n                        <i className=\"azino-icon-share\"></i>\n                      </Link>\n                    }\n\n                  </div>\n                </div>\n              </div>\n            </div>\n          </Col>\n\n        </Row>\n        </Container>\n      }\n    )\n  }\n\n\n  const [isNextPageLoading, setIsNextPageLoading] = useState(false)\n  return (<Layout>\n    <section\n      className=\"testimonials-one pt-90\"\n      style={{\n        backgroundImage: `url(${bgImage})`\n\n      }}\n    >\n      <Container >\n      <Loader\n        hasNextPage={false}\n        isNextPageLoading={isNextPageLoading}\n        items={handleItem(items)}\n        sortOrder={'asc'}\n        loadNextPage={() => {\n\n        }}\n      />\n      </Container>\n    </section>\n  </Layout>\n  );\n};\n\nexport default TestimonialsOne;\n","const ichingNumber = ({ group }) => {\n    if(['A', 'B', 'CC', 'C'].includes(group)) {\n        return true;\n    }\n    return false;\n}\n\nconst abab = ({ number }) => {\n    \n    if(number[7] === number[5] && number[4] === number[6]) {\n        return true;\n    }\n    return false\n}\n\nconst aaa = ({ number }) => {\n    const search = [...Array(9).keys()].map(e => `${e}${e}${e}`)\n    return !!search.find(e => number.includes(e))\n}\n\n\nconst huat = ({ number }) => {\n    if(number.includes('888')) {\n        return true;\n    }\n\n    return false\n}\n\nexport const filters = {\n    All: () => true,\n    ['I Ching']: ichingNumber,\n    'ABAB': abab,\n    'AAA': aaa,\n    'Huat': huat\n}","import React, { useEffect, useState } from \"react\";\nimport Layout from \"./layout\";\nimport HeaderTwo from \"./header/header-two\";\nimport { graphql } from 'gatsby'\nimport Loader from '../template/Card'\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { filters } from '../helpers/filter'\nconst HomeTwo = ({ data, location, list: masterList, mask, query, title }) => {\n\n  const [filterList, setFilterList] = useState([])\n  const [category, setCategory] = useState(\"All\");\n  useEffect(() => {\n    setFilterList(masterList\n      .filter(e => filters[category] ? filters[category](e) : false)\n      .filter(e => e.number.includes(query)))\n  }, [query, category])\n\n  return (\n    <div className=\"container\">\n      <Row>\n        <Col lg={12} className=\"mb-10 text-center\">\n\n          {\n            [\n              \"All\",\n              /*\n              'I Ching',\n              'Huat',\n              'ABAB',\n              'AAA'\n              */\n            ].map(b => <span style={{ cursor: 'pointer', fontSize: '24px' }}><a onClick={() => setCategory(b)} class=\"page-link badge badge-secondary\">{b} </a></span>)\n          }\n        </Col>\n\n      </Row>\n\n      <Loader\n        title={title}\n        items={mask ? filterList.map(e => ({ number: 'xxxx' + e.number.slice(4) })) : filterList}\n      />\n    </div>\n  );\n};\n\nexport default HomeTwo;\n\n\n\n","import React, { useEffect, useState } from \"react\";\nimport Layout from \"../components/layout\";\nimport HeaderTwo from \"../components/header/header-two\";\nimport { graphql } from 'gatsby'\nimport Loader from '../template/Card'\nimport { Container, Row, Col } from \"react-bootstrap\";\nimport { filters } from '../helpers/filter'\nimport NumberFinder from '../components/NumberFinder'\n\nconst HomeTwo = ({ data, location }) => {\n\n  const [filterList, setFilterList] = useState([])\n  const masterList = data.products.edges.map(({ node }, i) => ({ ...node })).map(e => ({\n    number: e.num,\n    group: e.group\n  }))\n\n  const [query, setQuery] = useState(\"\");\n  const [category, setCategory] = useState(\"All\");\n  useEffect(() => {\n    setFilterList(masterList\n      .filter(e => filters[category] ? filters[category](e) : false)\n      .filter(e => e.number.includes(query)))\n  }, [query, category])\n  const params = new URLSearchParams(location.search);\n  const mask = !!params.get(\"mask\");\n\n  return (\n    <>\n      <HeaderTwo onSearch={setQuery} onCategory={setCategory} />\n\n      <NumberFinder \n        list={masterList}\n        mask={mask}\n        query={query}\n        title=\"Singapore Number\"\n      />\n\n    </>\n  );\n};\n\nexport default HomeTwo;\n\n\nexport const query = graphql`\n    {\n      products: allNumbersJson {\n        edges {\n          node {\n            id,\n            num\n          }\n        }\n      }\n    }\n  `\n"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","key","call","join","module","exports","default","Object","assign","bind","target","source","prototype","this","excluded","sourceKeys","keys","indexOf","ThemeContext","Consumer","Provider","useBootstrapPrefix","prefix","defaultPrefix","prefixes","useContext","Container","_ref","ref","bsPrefix","fluid","_ref$as","as","Component","className","props","suffix","displayName","defaultProps","DEVICE_SIZES","Row","noGutters","decoratedBsPrefix","sizePrefix","forEach","brkPoint","cols","propValue","infix","concat","Col","spans","span","offset","order","_propValue$span","onSearch","onCategory","_useState","useState","showFilter","React","href","src","logoDark","alt","height","lg","type","id","onChange","e","value","placeholder","style","zIndex","backgroundColor","map","b","cursor","fontSize","onClick","class","_assertThisInitialized","self","ReferenceError","safeIsNaN","Number","isNaN","areInputsEqual","newInputs","lastInputs","first","second","resultFn","isEqual","lastThis","lastResult","lastArgs","calledOnce","newArgs","_i","now","performance","Date","cancelTimeout","timeoutID","cancelAnimationFrame","requestTimeout","callback","delay","start","requestAnimationFrame","tick","size","getScrollbarSize","recalculate","div","document","createElement","width","overflow","body","appendChild","offsetWidth","clientWidth","removeChild","cachedRTLResult","getRTLOffsetType","outerDiv","outerStyle","direction","innerDiv","innerStyle","scrollLeft","IS_SCROLLING_DEBOUNCE_INTERVAL$1","defaultItemKey$1","index","data","createListComponent","_class","getItemOffset","getEstimatedTotalSize","getItemSize","getOffsetForIndexAndAlignment","getStartIndexForOffset","getStopIndexForStartIndex","initInstanceProps","shouldResetStyleCacheOnItemSizeChange","validateProps","_PureComponent","List","_this","_instanceProps","_outerRef","_resetIsScrollingTimeoutId","state","instance","isScrolling","scrollDirection","scrollOffset","initialScrollOffset","scrollUpdateWasRequested","_callOnItemsRendered","overscanStartIndex","overscanStopIndex","visibleStartIndex","visibleStopIndex","onItemsRendered","_callOnScroll","onScroll","_getItemStyle","_this$props","itemSize","layout","itemStyleCache","_getItemStyleCache","_offset","isHorizontal","isRtl","offsetHorizontal","position","left","undefined","right","top","_","__","___","_onScrollHorizontal","event","_event$currentTarget","currentTarget","scrollWidth","setState","prevState","Math","max","min","_resetIsScrollingDebounced","_onScrollVertical","_event$currentTarget2","clientHeight","scrollHeight","scrollTop","_outerRefSetter","outerRef","current","_resetIsScrolling","getDerivedStateFromProps","nextProps","validateSharedProps$1","_proto","scrollTo","scrollToItem","align","_this$props2","itemCount","scrollbarSize","componentDidMount","_this$props3","_callPropsCallbacks","componentDidUpdate","_this$props4","_this$state","componentWillUnmount","render","_this$props5","children","innerRef","innerElementType","innerTagName","itemData","_this$props5$itemKey","itemKey","outerElementType","outerTagName","useIsScrolling","_this$_getRangeToRend","_getRangeToRender","startIndex","stopIndex","items","_index","estimatedTotalSize","WebkitOverflowScrolling","willChange","pointerEvents","_this$_getRangeToRend2","_overscanStartIndex","_overscanStopIndex","_visibleStartIndex","_visibleStopIndex","_this$state2","_scrollDirection","_scrollOffset","_scrollUpdateWasRequested","_this$props6","overscanCount","_this$state3","overscanBackward","overscanForward","PureComponent","_ref2","_ref3","FixedSizeList","_ref4","instanceProps","lastItemOffset","maxOffset","minOffset","middleOffset","round","ceil","floor","_ref5","_ref6","numVisibleItems","_ref7","createClass","defineProperties","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","possibleConstructorReturn","InfiniteLoader","_temp","TypeError","classCallCheck","_len","args","_key","__proto__","getPrototypeOf","_lastRenderedStartIndex","_lastRenderedStopIndex","_memoizedUnloadedRanges","_onItemsRendered","_ensureRowsLoaded","_setRef","listRef","_listRef","subClass","superClass","create","constructor","setPrototypeOf","inherits","autoReload","_props","isItemLoaded","_props$minimumBatchSi","minimumBatchSize","_props$threshold","threshold","unloadedRanges","rangeStartIndex","rangeStopIndex","potentialStopIndex","_index2","_index3","scanForUnloadedRanges","some","startOrStop","_loadUnloadedRanges","_this2","loadMoreItems","loadMoreRows","_loop","promise","then","lastRenderedStartIndex","lastRenderedStopIndex","isRangeVisible","resetAfterIndex","forceUpdate","ExampleWrapper","hasNextPage","isNextPageLoading","loadNextPage","sortOrder","useRef","hasMountedRef","useEffect","resetloadMoreItemsCache","Item","content","_listRef$current","window","innerHeight","_items","cardTitle","title","Layout","backgroundImage","bgImage","Loader","image","progressCount","raised","goal","text","link","number","Link","to","filters","_filters","All","group","includes","_toConsumableArray","find","location","masterList","list","mask","query","filterList","setFilterList","_useState2","category","setCategory","filter","slice","products","edges","node","num","setQuery","_useState3","URLSearchParams","search","get","HeaderTwo","NumberFinder"],"sourceRoot":""}