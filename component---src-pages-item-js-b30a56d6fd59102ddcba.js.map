{"version":3,"file":"component---src-pages-item-js-b30a56d6fd59102ddcba.js","mappings":"6SAWA,MAAM,UAAEA,EAAS,SAAEC,GAAaC,IAAAA,EAAAA,EAAAA,EAAAA,EAAAA,IAsGnBC,EAAOA,IAAMD,EAAAA,cAACE,EAAAA,EAAG,CAACC,MAAM,SAErC,UAtGkBC,KAAO,IAADC,EACpB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,MACbC,EAAOC,GAAYV,EAAS,KAC5BW,EAAMC,GAAWZ,EAAS,OAC1Ba,EAAMC,GAAWd,EAAS,KAC1Be,EAAQC,GAAchB,EAAS,IAMtCD,GAAU,KACN,MAAMkB,EAAWC,EAAaT,EAAM,IAAM,CAAC,GACrCU,EAAU,CACZ,CACIC,IAAK,OACLC,MAAO,OACPC,SAAUC,GAAKtB,EAAAA,cAAAA,EAAAA,SAAA,KAEPA,EAAAA,cAACuB,EAAAA,EAAM,CAACC,QAASC,UACb,MAAMC,QAAYC,EAAAA,EAAMC,MAAMC,IAAI,WAAY,CAC1CC,GAAIR,EAAEQ,GACNX,IAAKG,EAAES,OAEXpB,EAAQe,EAAI,GACb,YAKnBb,EAAQ,GAADmB,QAAAC,EAAAA,EAAAA,GACAjB,GACAE,GACL,GACH,CAACV,IACJ,MAAM0B,EAAcA,KAChBvB,EAAQ,KAAK,EAEjBb,GAAU,KAhCE2B,WACR,MAAMC,QAAYC,EAAAA,EAAMC,MAAMC,IAAI,gBAClCpB,EAASiB,EAAI,EA+BbG,EAAK,GACN,IACH,MASMZ,EAAgBkB,GACXC,OAAOC,KAAKF,GAAKG,KAAIC,IACjB,CACHpB,IAAKoB,EACLnB,MAAOmB,EACPlB,SAAUC,IAAKtB,SAAAA,cAAAA,EAAAA,SAAA,KAbJ,iBADFwC,EAgBWlB,EAAEiB,IAdnBC,EAEPA,aAAeJ,QAAUI,EAAIC,cAAgBL,OACtCpC,EAAAA,cAACuB,EAAAA,EAAM,CAACC,QAASA,IAAMb,EAAQ6B,IAAM,cADhD,GAJiBA,KAmBb,MAIFE,EAAUlC,EAAMmC,QAAO,CAACC,EAAMC,EAAMvB,EAAGwB,KACzCF,EAAKC,EAAKE,OAAQ,EACXH,IACR,CAAC,GACJ,OAAO5C,EAAAA,cAACgD,EAAAA,EAAM,CAACC,YAAajD,EAAAA,cAAAA,EAAAA,SAAA,OACxBA,EAAAA,cAAA,WAE4B,QAF5BK,EAEQ+B,OAAOC,KAAKK,UAAQ,IAAArC,OAAA,EAApBA,EAAsBiC,KAAIC,GAAKvC,EAAAA,cAACuB,EAAAA,EAAM,KAAC,IAAEgB,EAAE,QAGnDvC,EAAAA,cAACkD,EAAAA,EAAS,CACNtC,KAAMA,EACNuC,KAAM3C,IAEVR,EAAAA,cAACoD,EAAAA,EAAK,CAACC,YAAY,EAAMC,GAAIF,EAAAA,EAAMG,OAAQC,UAAQ,EAACC,KAAM/C,EAAMgD,OAAQxB,GACpElC,EAAAA,cAACoD,EAAAA,EAAMO,OAAM,KACT3D,EAAAA,cAACoD,EAAAA,EAAMQ,MAAK,CAACC,UAAU,MAAK,eAC5B7D,EAAAA,cAACuB,EAAAA,EAAM,CAACuC,QAAQ,QAAQ,aAAW,QAAQtC,QAASU,KAExDlC,EAAAA,cAACoD,EAAAA,EAAMW,KAAI,KACP/D,EAAAA,cAACgE,IAAS,CAACC,IAAKvD,KAEpBV,EAAAA,cAACoD,EAAAA,EAAMc,OAAM,KACTlE,EAAAA,cAACuB,EAAAA,EAAM,CAACuC,QAAQ,OAAOD,UAAU,oBAAoBrC,QAASU,GAAa,WAK7E,C","sources":["webpack://gatsby-starter-default/./src/pages/item.js"],"sourcesContent":["import * as React from \"react\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Form, Button, InputGroup } from '@themesberg/react-bootstrap';\nimport useAuth from \"../hooks/userAuth\";\nimport Parse from '../vendor/Parse'\nimport Table from '../components/NumberTable'\nimport ReactJson from 'react-json-view'\nimport { Modal } from '@themesberg/react-bootstrap';\nimport ItemTable from '../components/ItemTable'\nimport { setIn } from \"immutable\";\nconst { useEffect, useState } = React;\n\nconst IndexPage = () => {\n    const { isLogin } = useAuth()\n    const [users, setUsers] = useState([])\n    const [info, setInfo] = useState(null)\n    const [cols, setCols] = useState([])\n    const [filter, setFilters] = useState([])\n    const run = async () => {\n        const res = await Parse.Cloud.run('getItemsMeta')\n        setUsers(res)\n    }\n\n    useEffect(() => {\n        const _itemCol = convertToCol(users[0] || {})\n        const _addCol = [\n            {\n                key: 'data',\n                label: 'data',\n                onRender: i => <>\n                    {\n                        <Button onClick={async () => {\n                            const res = await Parse.Cloud.run('getItems', {\n                                id: i.id,\n                                key: i.name\n                            })\n                            setInfo(res)\n                        }}> View</Button >\n                    }\n                </>\n            }\n        ]\n        setCols([\n            ..._itemCol,\n            ..._addCol\n        ])\n    }, [users])\n    const handleClose = () => {\n        setInfo(null)\n    }\n    useEffect(() => {\n        run()\n    }, [])\n    const renderValue = (val) => {\n        if (typeof val === 'string') {\n            return val\n        }\n        if (val instanceof Object && val.constructor === Object) {\n            return <Button onClick={() => setInfo(val)}> View</Button >\n        }\n    }\n\n    const convertToCol = (obj) => {\n        return Object.keys(obj).map(e => {\n            return {\n                key: e,\n                label: e,\n                onRender: i => <>\n                    {\n                        renderValue(i[e])\n                    }\n                </>\n            }\n        })\n    }\n\n    const filters = users.reduce((prev, next, i, arr) => {\n        prev[next.type] = true\n        return prev\n    }, {})\n    return <Layout afterSearch={<></>} >\n        <div>\n            {\n                Object.keys(filters)?.map(e => <Button> {e} </Button>)\n            }\n        </div>\n        <ItemTable\n            cols={cols}\n            data={users}\n        />\n        <Modal fullscreen={true} as={Modal.Dialog} centered show={info} onHide={handleClose}>\n            <Modal.Header>\n                <Modal.Title className=\"h6\">Information</Modal.Title>\n                <Button variant=\"close\" aria-label=\"Close\" onClick={handleClose} />\n            </Modal.Header>\n            <Modal.Body>\n                <ReactJson src={info} />\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"link\" className=\"text-gray ms-auto\" onClick={handleClose}>\n                    Close\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    </Layout >\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport default IndexPage\n"],"names":["useEffect","useState","React","Head","Seo","title","IndexPage","_Object$keys","isLogin","useAuth","users","setUsers","info","setInfo","cols","setCols","filter","setFilters","_itemCol","convertToCol","_addCol","key","label","onRender","i","Button","onClick","async","res","Parse","Cloud","run","id","name","concat","_toConsumableArray","handleClose","obj","Object","keys","map","e","val","constructor","filters","reduce","prev","next","arr","type","Layout","afterSearch","ItemTable","data","Modal","fullscreen","as","Dialog","centered","show","onHide","Header","Title","className","variant","Body","ReactJson","src","Footer"],"sourceRoot":""}