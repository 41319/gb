{"version":3,"file":"component---src-pages-create-js-f8d74dd0909d7bc96bf7.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/CardImg.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Card.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Feedback.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheckLabel.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheck.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormControl.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormGroup.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormLabel.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormRange.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormSelect.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormText.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Switch.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/Form.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormCheckInput.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/FormContext.js","webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/divWithClassName.js","webpack://gatsby-starter-default/./src/components/Card.js","webpack://gatsby-starter-default/./src/components/Grid.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/dataview.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/utils.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/constants.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-utils.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/byte-order.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-tiff.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-jpeg.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-png.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-iso-bmff-iloc.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-iso-bmff-utils.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-iso-bmff.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-heic.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-avif.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-webp.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header-gif.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/xml.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/image-header.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-common.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-0th-ifd.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-gps-ifd.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-interoperability-ifd.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-mpf-ifd.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-names-exif-ifd.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/types.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tags-helpers.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/mpf-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/file-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/jfif-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/iptc-tag-names.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/text-decoder.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/tag-decoder.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/iptc-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/xmp-tag-names.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/dom-parser.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/xmp-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/photoshop-tag-names.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/photoshop-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/icc-tag-names.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/icc-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/png-file-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/png-text-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/png-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/vp8x-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/gif-file-tags.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/thumbnail.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/errors.js","webpack://gatsby-starter-default/./node_modules/exifreader/src/exif-reader.js","webpack://gatsby-starter-default/./src/pages/create.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  variant: null\n};\nvar CardImg = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      variant = _ref.variant,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'img' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"variant\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card-img');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: classNames(variant ? prefix + \"-\" + variant : prefix, className)\n  }, props));\n});\nCardImg.displayName = 'CardImg';\nCardImg.defaultProps = defaultProps;\nexport default CardImg;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useMemo } from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport divWithClassName from './divWithClassName';\nimport CardContext from './CardContext';\nimport CardImg from './CardImg';\nvar DivStyledAsH5 = divWithClassName('h5');\nvar DivStyledAsH6 = divWithClassName('h6');\nvar CardBody = createWithBsPrefix('card-body');\nvar CardTitle = createWithBsPrefix('card-title', {\n  Component: DivStyledAsH5\n});\nvar CardSubtitle = createWithBsPrefix('card-subtitle', {\n  Component: DivStyledAsH6\n});\nvar CardLink = createWithBsPrefix('card-link', {\n  Component: 'a'\n});\nvar CardText = createWithBsPrefix('card-text', {\n  Component: 'p'\n});\nvar CardHeader = createWithBsPrefix('card-header');\nvar CardFooter = createWithBsPrefix('card-footer');\nvar CardImgOverlay = createWithBsPrefix('card-img-overlay');\nvar defaultProps = {\n  body: false\n};\nvar Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      bg = _ref.bg,\n      text = _ref.text,\n      border = _ref.border,\n      body = _ref.body,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"bg\", \"text\", \"border\", \"body\", \"children\", \"as\"]);\n\n  var prefix = useBootstrapPrefix(bsPrefix, 'card');\n  var cardContext = useMemo(function () {\n    return {\n      cardHeaderBsPrefix: prefix + \"-header\"\n    };\n  }, [prefix]);\n  return /*#__PURE__*/React.createElement(CardContext.Provider, {\n    value: cardContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, prefix, bg && \"bg-\" + bg, text && \"text-\" + text, border && \"border-\" + border)\n  }), body ?\n  /*#__PURE__*/\n  // @ts-ignore\n  React.createElement(CardBody, null, children) : children));\n});\nCard.displayName = 'Card';\nCard.defaultProps = defaultProps;\nCard.Img = CardImg;\nCard.Title = CardTitle;\nCard.Subtitle = CardSubtitle;\nCard.Body = CardBody;\nCard.Link = CardLink;\nCard.Text = CardText;\nCard.Header = CardHeader;\nCard.Footer = CardFooter;\nCard.ImgOverlay = CardImgOverlay;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar propTypes = {\n  /**\n   * Specify whether the feedback is for valid or invalid fields\n   *\n   * @type {('valid'|'invalid')}\n   */\n  type: PropTypes.string,\n\n  /** Display feedback as a tooltip. */\n  tooltip: PropTypes.bool,\n  as: PropTypes.elementType\n};\nvar Feedback = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'valid' : _ref$type,\n      _ref$tooltip = _ref.tooltip,\n      tooltip = _ref$tooltip === void 0 ? false : _ref$tooltip,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"className\", \"type\", \"tooltip\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, type + \"-\" + (tooltip ? 'tooltip' : 'feedback'))\n  }));\n});\nFeedback.displayName = 'Feedback';\nFeedback.propTypes = propTypes;\nexport default Feedback;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-label');\n  return /*#__PURE__*/React.createElement(\"label\", _extends({}, props, {\n    ref: ref,\n    htmlFor: htmlFor || controlId,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormCheckLabel.displayName = 'FormCheckLabel';\nexport default FormCheckLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport Feedback from './Feedback';\nimport FormCheckInput from './FormCheckInput';\nimport FormCheckLabel from './FormCheckLabel';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheck = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      bsSwitchPrefix = _ref.bsSwitchPrefix,\n      _ref$inline = _ref.inline,\n      inline = _ref$inline === void 0 ? false : _ref$inline,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$feedbackTooltip = _ref.feedbackTooltip,\n      feedbackTooltip = _ref$feedbackTooltip === void 0 ? false : _ref$feedbackTooltip,\n      feedback = _ref.feedback,\n      className = _ref.className,\n      style = _ref.style,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? '' : _ref$title,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      label = _ref.label,\n      children = _ref.children,\n      _ref$as = _ref.as,\n      as = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"bsSwitchPrefix\", \"inline\", \"disabled\", \"isValid\", \"isInvalid\", \"feedbackTooltip\", \"feedback\", \"className\", \"style\", \"title\", \"type\", \"label\", \"children\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check');\n  bsSwitchPrefix = useBootstrapPrefix(bsSwitchPrefix, 'form-switch');\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  var innerFormContext = useMemo(function () {\n    return {\n      controlId: id || controlId\n    };\n  }, [controlId, id]);\n  var hasLabel = label != null && label !== false && !children;\n  var input = /*#__PURE__*/React.createElement(FormCheckInput, _extends({}, props, {\n    type: type === 'switch' ? 'checkbox' : type,\n    ref: ref,\n    isValid: isValid,\n    isInvalid: isInvalid,\n    disabled: disabled,\n    as: as\n  }));\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: innerFormContext\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    className: classNames(className, label && bsPrefix, inline && bsPrefix + \"-inline\", type === 'switch' && bsSwitchPrefix)\n  }, children || /*#__PURE__*/React.createElement(React.Fragment, null, input, hasLabel && /*#__PURE__*/React.createElement(FormCheckLabel, {\n    title: title\n  }, label), (isValid || isInvalid) && /*#__PURE__*/React.createElement(Feedback, {\n    type: isValid ? 'valid' : 'invalid',\n    tooltip: feedbackTooltip\n  }, feedback))));\n});\nFormCheck.displayName = 'FormCheck';\nFormCheck.Input = FormCheckInput;\nFormCheck.Label = FormCheckLabel;\nexport default FormCheck;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Feedback from './Feedback';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormControl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      type = _ref.type,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      id = _ref.id,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      plaintext = _ref.plaintext,\n      readOnly = _ref.readOnly,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"type\", \"size\", \"htmlSize\", \"id\", \"className\", \"isValid\", \"isInvalid\", \"plaintext\", \"readOnly\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-control');\n  var classes;\n\n  if (plaintext) {\n    var _classes;\n\n    classes = (_classes = {}, _classes[bsPrefix + \"-plaintext\"] = true, _classes);\n  } else {\n    var _classes2;\n\n    classes = (_classes2 = {}, _classes2[bsPrefix] = true, _classes2[bsPrefix + \"-\" + size] = size, _classes2);\n  }\n\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !id, '`controlId` is ignored on `<FormControl>` when `id` is specified.') : void 0;\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    type: type,\n    size: htmlSize,\n    ref: ref,\n    readOnly: readOnly,\n    id: id || controlId,\n    className: classNames(className, classes, isValid && \"is-valid\", isInvalid && \"is-invalid\", type === 'color' && bsPrefix + \"-color\")\n  }));\n});\nFormControl.displayName = 'FormControl';\nexport default Object.assign(FormControl, {\n  Feedback: Feedback\n});","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React, { useMemo } from 'react';\nimport FormContext from './FormContext';\nvar FormGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var children = _ref.children,\n      controlId = _ref.controlId,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"children\", \"controlId\", \"as\"]);\n\n  var context = useMemo(function () {\n    return {\n      controlId: controlId\n    };\n  }, [controlId]);\n  return /*#__PURE__*/React.createElement(FormContext.Provider, {\n    value: context\n  }, /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref\n  }), children));\n});\nFormGroup.displayName = 'FormGroup';\nexport default FormGroup;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport warning from 'warning';\nimport Col from './Col';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar defaultProps = {\n  column: false,\n  srOnly: false\n};\nvar FormLabel = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'label' : _ref$as,\n      bsPrefix = _ref.bsPrefix,\n      column = _ref.column,\n      srOnly = _ref.srOnly,\n      className = _ref.className,\n      htmlFor = _ref.htmlFor,\n      props = _objectWithoutPropertiesLoose(_ref, [\"as\", \"bsPrefix\", \"column\", \"srOnly\", \"className\", \"htmlFor\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-label');\n  var columnClass = 'col-form-label';\n  if (typeof column === 'string') columnClass = columnClass + \" \" + columnClass + \"-\" + column;\n  var classes = classNames(className, bsPrefix, srOnly && 'sr-only', column && columnClass);\n  process.env.NODE_ENV !== \"production\" ? warning(controlId == null || !htmlFor, '`controlId` is ignored on `<FormLabel>` when `htmlFor` is specified.') : void 0;\n  htmlFor = htmlFor || controlId;\n  if (column) return /*#__PURE__*/React.createElement(Col, _extends({\n    as: \"label\",\n    className: classes,\n    htmlFor: htmlFor\n  }, props));\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line jsx-a11y/label-has-for, jsx-a11y/label-has-associated-control\n    React.createElement(Component, _extends({\n      ref: ref,\n      className: classes,\n      htmlFor: htmlFor\n    }, props))\n  );\n});\nFormLabel.displayName = 'FormLabel';\nFormLabel.defaultProps = defaultProps;\nexport default FormLabel;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormRange = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-range');\n  return /*#__PURE__*/React.createElement(\"input\", _extends({}, props, {\n    type: \"range\",\n    ref: ref,\n    className: classNames(className, bsPrefix)\n  }));\n});\nFormRange.displayName = 'FormRange';\nexport default FormRange;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormSelect = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      htmlSize = _ref.htmlSize,\n      className = _ref.className,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"htmlSize\", \"className\", \"isValid\", \"isInvalid\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-select');\n  return /*#__PURE__*/React.createElement(\"select\", _extends({}, props, {\n    size: htmlSize,\n    ref: ref,\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size, isValid && \"is-valid\", isInvalid && \"is-invalid\")\n  }));\n});\nFormSelect.displayName = 'FormSelect';\nexport default FormSelect;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormText = /*#__PURE__*/React.forwardRef( // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\nfunction (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'small' : _ref$as,\n      muted = _ref.muted,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"className\", \"as\", \"muted\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-text');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, bsPrefix, muted && 'text-muted')\n  }));\n});\nFormText.displayName = 'FormText';\nexport default FormText;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport FormCheck from './FormCheck';\nvar Switch = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(FormCheck, _extends({}, props, {\n    ref: ref,\n    type: \"switch\"\n  }));\n});\nSwitch.displayName = 'Switch';\nSwitch.Input = FormCheck.Input;\nSwitch.Label = FormCheck.Label;\nexport default Switch;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport FormCheck from './FormCheck';\nimport FormControl from './FormControl';\nimport FormGroup from './FormGroup';\nimport FormLabel from './FormLabel';\nimport FormRange from './FormRange';\nimport FormSelect from './FormSelect';\nimport FormText from './FormText';\nimport Switch from './Switch';\nvar FormImpl = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var className = _ref.className,\n      validated = _ref.validated,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'form' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"className\", \"validated\", \"as\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    className: classNames(className, validated && 'was-validated')\n  }));\n});\nFormImpl.displayName = 'Form';\nFormImpl.Group = FormGroup;\nFormImpl.Control = FormControl;\nFormImpl.Check = FormCheck;\nFormImpl.Switch = Switch;\nFormImpl.Label = FormLabel;\nFormImpl.Text = FormText;\nFormImpl.Range = FormRange;\nFormImpl.Select = FormSelect;\nexport default FormImpl;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport classNames from 'classnames';\nimport React, { useContext } from 'react';\nimport FormContext from './FormContext';\nimport { useBootstrapPrefix } from './ThemeProvider';\nvar FormCheckInput = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      bsPrefix = _ref.bsPrefix,\n      className = _ref.className,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? 'checkbox' : _ref$type,\n      _ref$isValid = _ref.isValid,\n      isValid = _ref$isValid === void 0 ? false : _ref$isValid,\n      _ref$isInvalid = _ref.isInvalid,\n      isInvalid = _ref$isInvalid === void 0 ? false : _ref$isInvalid,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'input' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"id\", \"bsPrefix\", \"className\", \"type\", \"isValid\", \"isInvalid\", \"as\"]);\n\n  var _useContext = useContext(FormContext),\n      controlId = _useContext.controlId;\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'form-check-input');\n  return /*#__PURE__*/React.createElement(Component, _extends({}, props, {\n    ref: ref,\n    type: type,\n    id: id || controlId,\n    className: classNames(className, bsPrefix, isValid && 'is-valid', isInvalid && 'is-invalid')\n  }));\n});\nFormCheckInput.displayName = 'FormCheckInput';\nexport default FormCheckInput;","import React from 'react'; // TODO\n\nvar FormContext = /*#__PURE__*/React.createContext({\n  controlId: undefined\n});\nexport default FormContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport classNames from 'classnames';\nexport default (function (className) {\n  return /*#__PURE__*/React.forwardRef(function (p, ref) {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, p, {\n      ref: ref,\n      className: classNames(p.className, className)\n    }));\n  });\n});","import * as React from \"react\"\nimport { Col, Row, Card, Image, Button, ListGroup, ProgressBar } from '@themesberg/react-bootstrap';\nimport { faAngleDown, faAngleUp, faChartArea, faChartBar, faChartLine, faFlagUsa, faFolderOpen, faGlobeEurope, faPaperclip, faUserPlus } from '@fortawesome/free-solid-svg-icons';\nimport { faAngular, faBootstrap, faReact, faVuejs } from \"@fortawesome/free-brands-svg-icons\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\n\n\nexport default ({ cover, avatar, title, text, subtitle  }) => {\n    return     <Card border=\"light\" className=\"text-center p-0 mb-4\">\n    <div style={{ backgroundImage: `url(${cover})` }} className=\"profile-cover rounded-top\" />\n    <Card.Body className=\"pb-5\">\n      <Card.Img src={avatar} alt=\"Neil Portrait\" className=\"user-avatar large-avatar rounded-circle mx-auto mt-n7 mb-4\" />\n      <Card.Title>{ title }</Card.Title>\n      <Card.Subtitle className=\"fw-normal\"> { subtitle }</Card.Subtitle>\n      <Card.Text className=\"text-gray mb-4\">{ text }</Card.Text>\n\n      <Button variant=\"primary\" size=\"sm\" className=\"me-2\">\n        <FontAwesomeIcon icon={faUserPlus} className=\"me-1\" /> Connect\n      </Button>\n      <Button variant=\"secondary\" size=\"sm\">Send Message</Button>\n    </Card.Body>\n  </Card>\n}","import * as React from \"react\"\n\nexport default ({ children, classes = \"col-12\"}) => {\n    return <div className={`${classes}`}>\n        {\n            children\n        }\n    </div>\n}","export default class DataView {\n    constructor(buffer) {\n        if (bufferTypeIsUnsupported(buffer)) {\n            throw new Error('DataView: Passed buffer type is unsupported.');\n        }\n\n        this.buffer = buffer;\n        this.byteLength = this.buffer.length;\n    }\n\n    getUint8(offset) {\n        return this.buffer.readUInt8(offset);\n    }\n\n    getUint16(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt16LE(offset);\n        }\n        return this.buffer.readUInt16BE(offset);\n    }\n\n    getUint32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readUInt32LE(offset);\n        }\n        return this.buffer.readUInt32BE(offset);\n    }\n\n    getInt32(offset, littleEndian) {\n        if (littleEndian) {\n            return this.buffer.readInt32LE(offset);\n        }\n        return this.buffer.readInt32BE(offset);\n    }\n}\n\nfunction bufferTypeIsUnsupported(buffer) {\n    return typeof buffer !== 'object'\n        || buffer.length === undefined\n        || buffer.readUInt8 === undefined\n        || buffer.readUInt16LE === undefined\n        || buffer.readUInt16BE === undefined\n        || buffer.readUInt32LE === undefined\n        || buffer.readUInt32BE === undefined\n        || buffer.readInt32LE === undefined\n        || buffer.readInt32BE === undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport DataViewWrapper from './dataview.js';\n\nexport function getDataView(data, byteOffset, byteLength) {\n    try {\n        return new DataView(data, byteOffset, byteLength);\n    } catch (error) {\n        return new DataViewWrapper(data, byteOffset, byteLength);\n    }\n}\n\nexport function getStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        chars.push(dataView.getUint8(offset + i));\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getNullTerminatedStringFromDataView(dataView, offset) {\n    const chars = [];\n    let i = 0;\n    while (offset + i < dataView.byteLength) {\n        const char = dataView.getUint8(offset + i);\n        if (char === 0) {\n            break;\n        }\n        chars.push(char);\n        i++;\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getUnicodeStringFromDataView(dataView, offset, length) {\n    const chars = [];\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i += 2) {\n        chars.push(dataView.getUint16(offset + i));\n    }\n    if (chars[chars.length - 1] === 0) {\n        chars.pop();\n    }\n    return getStringValueFromArray(chars);\n}\n\nexport function getPascalStringFromDataView(dataView, offset) {\n    const size = dataView.getUint8(offset);\n    const string = getStringFromDataView(dataView, offset + 1, size);\n    return [size, string];\n}\n\nexport function getStringValueFromArray(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getCharacterArray(string) {\n    return string.split('').map((character) => character.charCodeAt(0));\n}\n\nexport function objectAssign() {\n    for (let i = 1; i < arguments.length; i++) {\n        for (const property in arguments[i]) {\n            arguments[0][property] = arguments[i][property];\n        }\n    }\n\n    return arguments[0];\n}\n\nexport function deferInit(object, key, initializer) {\n    let initialized = false;\n    Object.defineProperty(object, key, {\n        get() {\n            if (!initialized) {\n                initialized = true;\n                Object.defineProperty(object, key, {\n                    configurable: true,\n                    enumerable: true,\n                    value: initializer.apply(object),\n                    writable: true\n                });\n            }\n            return object[key];\n        },\n        configurable: true,\n        enumerable: true\n    });\n}\n\nexport function getBase64Image(image) {\n    if (typeof btoa !== 'undefined') {\n        if (typeof image === 'string') {\n            // This only happens during the build tests using Node 16+ (npm run test:build).\n            return btoa(image);\n        }\n        // IE11- does not implement reduce on the Uint8Array prototype.\n        return btoa(Array.prototype.reduce.call(new Uint8Array(image), (data, byte) => data + String.fromCharCode(byte), ''));\n    }\n    if (typeof Buffer === 'undefined') {\n        return undefined;\n    }\n    if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n        return Buffer.from(image).toString('base64'); // eslint-disable-line no-undef\n    }\n    return (new Buffer(image)).toString('base64'); // eslint-disable-line no-undef\n}\n\nexport function dataUriToBuffer(dataUri) {\n    const data = dataUri.substring(dataUri.indexOf(',') + 1);\n\n    if (dataUri.indexOf(';base64') !== -1) {\n        if (typeof atob !== 'undefined') {\n            return Uint8Array.from(atob(data), (char) => char.charCodeAt(0)).buffer;\n        }\n        if (typeof Buffer === 'undefined') {\n            return undefined;\n        }\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(data, 'base64'); // eslint-disable-line no-undef\n        }\n        return new Buffer(data, 'base64'); // eslint-disable-line no-undef\n    }\n\n    const decodedData = decodeURIComponent(data);\n    if (typeof Buffer !== 'undefined') {\n        if (typeof Buffer.from !== 'undefined') { // eslint-disable-line no-undef\n            return Buffer.from(decodedData); // eslint-disable-line no-undef\n        }\n        return new Buffer(decodedData); // eslint-disable-line no-undef\n    }\n    return Uint8Array.from(decodedData, (char) => char.charCodeAt(0)).buffer;\n}\n\nexport function padStart(string, length, character) {\n    const padding = strRepeat(character, length - string.length);\n    return padding + string;\n}\n\nexport function parseFloatRadix(string, radix) {\n    return parseInt(string.replace('.', ''), radix)\n        / Math.pow(radix, (string.split('.')[1] || '').length);\n}\n\nexport function strRepeat(string, num) {\n    return new Array(num + 1).join(string);\n}\n\nexport const COMPRESSION_METHOD_NONE = undefined;\nexport const COMPRESSION_METHOD_DEFLATE = 0;\n\nexport function decompress(dataView, compressionMethod, encoding, returnType = 'string') {\n    if (compressionMethod === COMPRESSION_METHOD_DEFLATE) {\n        if (typeof DecompressionStream === 'function') {\n            const decompressionStream = new DecompressionStream('deflate');\n            const decompressedStream = new Blob([dataView]).stream().pipeThrough(decompressionStream);\n            if (returnType === 'dataview') {\n                return new Response(decompressedStream).arrayBuffer().then((arrayBuffer) => new DataView(arrayBuffer));\n            }\n            return new Response(decompressedStream).arrayBuffer()\n                .then((buffer) => new TextDecoder(encoding).decode(buffer));\n        }\n    }\n    if (compressionMethod !== undefined) {\n        return Promise.reject(`Unknown compression method ${compressionMethod}.`);\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    USE_FILE: true,\n    USE_JFIF: true,\n    USE_PNG_FILE: true,\n    USE_EXIF: true,\n    USE_IPTC: true,\n    USE_XMP: true,\n    USE_ICC: true,\n    USE_MPF: true,\n    USE_PHOTOSHOP: true,\n    USE_THUMBNAIL: true,\n    USE_TIFF: true,\n    USE_JPEG: true,\n    USE_PNG: true,\n    USE_HEIC: true,\n    USE_AVIF: true,\n    USE_WEBP: true,\n    USE_GIF: true\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport function getStringValue(value) {\n    return value.map((charCode) => String.fromCharCode(charCode)).join('');\n}\n\nexport function getEncodedString(value) {\n    if (value.length >= 8) {\n        const encoding = getStringValue(value.slice(0, 8));\n\n        if (encoding === 'ASCII\\x00\\x00\\x00') {\n            return getStringValue(value.slice(8));\n        } else if (encoding === 'JIS\\x00\\x00\\x00\\x00\\x00') {\n            return '[JIS encoded text]';\n        } else if (encoding === 'UNICODE\\x00') {\n            return '[Unicode encoded text]';\n        } else if (encoding === '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00') {\n            return '[Undefined encoding]';\n        }\n    }\n\n    return 'Undefined';\n}\n\nexport function getCalculatedGpsValue(value) {\n    return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nconst LITTLE_ENDIAN = 0x4949;\nconst BIG_ENDIAN = 0x4d4d;\n\nexport default {\n    BIG_ENDIAN,\n    LITTLE_ENDIAN,\n    getByteOrder\n};\n\nfunction getByteOrder(dataView, tiffHeaderOffset) {\n    if (dataView.getUint16(tiffHeaderOffset) === LITTLE_ENDIAN) {\n        return LITTLE_ENDIAN;\n    } else if (dataView.getUint16(tiffHeaderOffset) === BIG_ENDIAN) {\n        return BIG_ENDIAN;\n    }\n    throw new Error('Illegal byte order value. Faulty image.');\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Constants from './constants.js';\n\nexport default {\n    isTiffFile,\n    findTiffOffsets\n};\n\nfunction isTiffFile(dataView) {\n    const MIN_TIFF_DATA_BUFFER_LENGTH = 4;\n\n    return !!dataView && (dataView.byteLength >= MIN_TIFF_DATA_BUFFER_LENGTH) && hasTiffMarker(dataView);\n}\n\nfunction hasTiffMarker(dataView) {\n    const TIFF_ID = 0x2a;\n    const TIFF_ID_OFFSET = 2;\n\n    const littleEndian = dataView.getUint16(0) === ByteOrder.LITTLE_ENDIAN;\n    return dataView.getUint16(TIFF_ID_OFFSET, littleEndian) === TIFF_ID;\n}\n\nfunction findTiffOffsets() {\n    const TIFF_FILE_HEADER_OFFSET = 0;\n\n    if (Constants.USE_EXIF) {\n        return {\n            hasAppMarkers: true,\n            tiffHeaderOffset: TIFF_FILE_HEADER_OFFSET\n        };\n    }\n    return {};\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isJpegFile,\n    findJpegOffsets\n};\n\nconst MIN_JPEG_DATA_BUFFER_LENGTH = 2;\nconst JPEG_ID = 0xffd8;\nconst JPEG_ID_SIZE = 2;\nconst APP_ID_OFFSET = 4;\nconst APP_MARKER_SIZE = 2;\nconst JFIF_DATA_OFFSET = 2; // From start of APP0 marker.\nconst TIFF_HEADER_OFFSET = 10; // From start of APP1 marker.\nconst IPTC_DATA_OFFSET = 18; // From start of APP13 marker.\nconst XMP_DATA_OFFSET = 33; // From start of APP1 marker.\nconst XMP_EXTENDED_DATA_OFFSET = 79; // From start of APP1 marker including GUID, total length, and offset.\nconst APP2_ICC_DATA_OFFSET = 18; // From start of APP2 marker including marker and chunk/chunk total numbers.\nconst MPF_DATA_OFFSET = 8;\n\nconst APP2_ICC_IDENTIFIER = 'ICC_PROFILE\\0';\nconst ICC_CHUNK_NUMBER_OFFSET = APP_ID_OFFSET + APP2_ICC_IDENTIFIER.length;\nconst ICC_TOTAL_CHUNKS_OFFSET = ICC_CHUNK_NUMBER_OFFSET + 1;\n\nconst APP2_MPF_IDENTIFIER = 'MPF\\0';\n\nconst SOF0_MARKER = 0xffc0;\nconst SOF2_MARKER = 0xffc2;\nconst DHT_MARKER = 0xffc4;\nconst DQT_MARKER = 0xffdb;\nconst DRI_MARKER = 0xffdd;\nconst SOS_MARKER = 0xffda;\n\nconst APP0_MARKER = 0xffe0;\nconst APP1_MARKER = 0xffe1;\nconst APP2_MARKER = 0xffe2;\nconst APP13_MARKER = 0xffed;\nconst APP15_MARKER = 0xffef;\nconst COMMENT_MARKER = 0xfffe;\n\n// Any number of fill bytes can be placed before an app marker. It's actually the first 0xff that is the\n// fill byte and the next 0xff is either another fill byte or the first half of the next app marker.\nconst FILL_BYTE = 0xffff;\n\nconst APP0_JFIF_IDENTIFIER = 'JFIF';\nconst APP1_EXIF_IDENTIFIER = 'Exif';\nconst APP1_XMP_IDENTIFIER = 'http://ns.adobe.com/xap/1.0/\\x00';\nconst APP1_XMP_EXTENDED_IDENTIFIER = 'http://ns.adobe.com/xmp/extension/\\x00';\nconst APP13_IPTC_IDENTIFIER = 'Photoshop 3.0';\n\nfunction isJpegFile(dataView) {\n    return !!dataView && (dataView.byteLength >= MIN_JPEG_DATA_BUFFER_LENGTH) && (dataView.getUint16(0) === JPEG_ID);\n}\n\nfunction findJpegOffsets(dataView) {\n    let appMarkerPosition = JPEG_ID_SIZE;\n    let fieldLength;\n    let sof0DataOffset;\n    let sof2DataOffset;\n    let jfifDataOffset;\n    let tiffHeaderOffset;\n    let iptcDataOffset;\n    let xmpChunks;\n    let iccChunks;\n    let mpfDataOffset;\n\n    while (appMarkerPosition + APP_ID_OFFSET + 5 <= dataView.byteLength) {\n        if (Constants.USE_FILE && isSOF0Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof0DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_FILE && isSOF2Marker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            sof2DataOffset = appMarkerPosition + APP_MARKER_SIZE;\n        } else if (Constants.USE_JFIF && isApp0JfifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            jfifDataOffset = appMarkerPosition + JFIF_DATA_OFFSET;\n        } else if (Constants.USE_EXIF && isApp1ExifMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            tiffHeaderOffset = appMarkerPosition + TIFF_HEADER_OFFSET;\n        } else if (Constants.USE_XMP && isApp1XmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_XMP && isApp1ExtendedXmpMarker(dataView, appMarkerPosition)) {\n            if (!xmpChunks) {\n                xmpChunks = [];\n            }\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            xmpChunks.push(getExtendedXmpChunkDetails(appMarkerPosition, fieldLength));\n        } else if (Constants.USE_IPTC && isApp13PhotoshopMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            iptcDataOffset = appMarkerPosition + IPTC_DATA_OFFSET;\n        } else if (Constants.USE_ICC && isApp2ICCMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            const iccDataOffset = appMarkerPosition + APP2_ICC_DATA_OFFSET;\n            const iccDataLength = fieldLength - (APP2_ICC_DATA_OFFSET - APP_MARKER_SIZE);\n\n            const iccChunkNumber = dataView.getUint8(appMarkerPosition + ICC_CHUNK_NUMBER_OFFSET);\n            const iccChunksTotal = dataView.getUint8(appMarkerPosition + ICC_TOTAL_CHUNKS_OFFSET);\n            if (!iccChunks) {\n                iccChunks = [];\n            }\n            iccChunks.push({offset: iccDataOffset, length: iccDataLength, chunkNumber: iccChunkNumber, chunksTotal: iccChunksTotal});\n        } else if (Constants.USE_MPF && isApp2MPFMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n            mpfDataOffset = appMarkerPosition + MPF_DATA_OFFSET;\n        } else if (isAppMarker(dataView, appMarkerPosition)) {\n            fieldLength = dataView.getUint16(appMarkerPosition + APP_MARKER_SIZE);\n        } else if (isFillByte(dataView, appMarkerPosition)) {\n            appMarkerPosition++;\n            continue;\n        } else {\n            break;\n        }\n        appMarkerPosition += APP_MARKER_SIZE + fieldLength;\n    }\n\n    return {\n        hasAppMarkers: appMarkerPosition > JPEG_ID_SIZE,\n        fileDataOffset: sof0DataOffset || sof2DataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset\n    };\n}\n\nfunction isSOF0Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF0_MARKER);\n}\n\nfunction isSOF2Marker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === SOF2_MARKER);\n}\n\nfunction isApp2ICCMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_ICC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_ICC_IDENTIFIER);\n}\n\nfunction isApp2MPFMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP2_MPF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP2_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP2_MPF_IDENTIFIER);\n}\n\nfunction isApp0JfifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP0_JFIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP0_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP0_JFIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1ExifMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_EXIF_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_EXIF_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isApp1XmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_IDENTIFIER;\n}\n\nfunction isApp1ExtendedXmpMarker(dataView, appMarkerPosition) {\n    return (dataView.getUint16(appMarkerPosition) === APP1_MARKER)\n        && isExtendedXmpIdentifier(dataView, appMarkerPosition);\n}\n\nfunction isExtendedXmpIdentifier(dataView, appMarkerPosition) {\n    const markerIdLength = APP1_XMP_EXTENDED_IDENTIFIER.length;\n    return getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP1_XMP_EXTENDED_IDENTIFIER;\n}\n\nfunction getXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_DATA_OFFSET,\n        length: fieldLength - (XMP_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction getExtendedXmpChunkDetails(appMarkerPosition, fieldLength) {\n    return {\n        dataOffset: appMarkerPosition + XMP_EXTENDED_DATA_OFFSET,\n        length: fieldLength - (XMP_EXTENDED_DATA_OFFSET - APP_MARKER_SIZE)\n    };\n}\n\nfunction isApp13PhotoshopMarker(dataView, appMarkerPosition) {\n    const markerIdLength = APP13_IPTC_IDENTIFIER.length;\n\n    return (dataView.getUint16(appMarkerPosition) === APP13_MARKER)\n        && (getStringFromDataView(dataView, appMarkerPosition + APP_ID_OFFSET, markerIdLength) === APP13_IPTC_IDENTIFIER)\n        && (dataView.getUint8(appMarkerPosition + APP_ID_OFFSET + markerIdLength) === 0x00);\n}\n\nfunction isAppMarker(dataView, appMarkerPosition) {\n    const appMarker = dataView.getUint16(appMarkerPosition);\n    return ((appMarker >= APP0_MARKER) && (appMarker <= APP15_MARKER))\n        || (appMarker === COMMENT_MARKER)\n        || (appMarker === SOF0_MARKER)\n        || (appMarker === SOF2_MARKER)\n        || (appMarker === DHT_MARKER)\n        || (appMarker === DQT_MARKER)\n        || (appMarker === DRI_MARKER)\n        || (appMarker === SOS_MARKER);\n}\n\nfunction isFillByte(dataView, appMarkerPosition) {\n    return dataView.getUint16(appMarkerPosition) === FILL_BYTE;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringFromDataView, getNullTerminatedStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isPngFile,\n    findPngOffsets\n};\n\nconst PNG_ID = '\\x89\\x50\\x4e\\x47\\x0d\\x0a\\x1a\\x0a';\nconst PNG_CHUNK_LENGTH_SIZE = 4;\nexport const PNG_CHUNK_TYPE_SIZE = 4;\nexport const PNG_CHUNK_LENGTH_OFFSET = 0;\nexport const PNG_CHUNK_TYPE_OFFSET = PNG_CHUNK_LENGTH_SIZE;\nexport const PNG_CHUNK_DATA_OFFSET = PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE;\nconst PNG_XMP_PREFIX = 'XML:com.adobe.xmp\\x00';\nexport const TYPE_TEXT = 'tEXt';\nexport const TYPE_ITXT = 'iTXt';\nexport const TYPE_ZTXT = 'zTXt';\nexport const TYPE_PHYS = 'pHYs';\nexport const TYPE_TIME = 'tIME';\nexport const TYPE_EXIF = 'eXIf';\nexport const TYPE_ICCP = 'iCCP';\n\nfunction isPngFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, 0, PNG_ID.length) === PNG_ID;\n}\n\nfunction findPngOffsets(dataView, async) {\n    const PNG_CRC_SIZE = 4;\n\n    const offsets = {\n        hasAppMarkers: false\n    };\n\n    let offset = PNG_ID.length;\n\n    while (offset + PNG_CHUNK_LENGTH_SIZE + PNG_CHUNK_TYPE_SIZE <= dataView.byteLength) {\n        if (Constants.USE_PNG_FILE && isPngImageHeaderChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.pngHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_XMP && isPngXmpChunk(dataView, offset)) {\n            const dataOffset = getPngXmpDataOffset(dataView, offset);\n            if (dataOffset !== undefined) {\n                offsets.hasAppMarkers = true;\n                offsets.xmpChunks = [{\n                    dataOffset,\n                    length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET) - (dataOffset - (offset + PNG_CHUNK_DATA_OFFSET))\n                }];\n            }\n        } else if (isPngTextChunk(dataView, offset, async)) {\n            offsets.hasAppMarkers = true;\n            const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n            if (!offsets.pngTextChunks) {\n                offsets.pngTextChunks = [];\n            }\n            offsets.pngTextChunks.push({\n                length: dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET),\n                type: chunkType,\n                offset: offset + PNG_CHUNK_DATA_OFFSET\n            });\n        } else if (isPngExifChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            offsets.tiffHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n        } else if (Constants.USE_ICC && async && isPngIccpChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            const chunkDataLength = dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET);\n            const iccHeaderOffset = offset + PNG_CHUNK_DATA_OFFSET;\n            const {profileName, compressionMethod, compressedProfileOffset} = parseIccHeader(dataView, iccHeaderOffset);\n            if (!offsets.iccChunks) {\n                offsets.iccChunks = [];\n            }\n            offsets.iccChunks.push({\n                offset: compressedProfileOffset,\n                length: chunkDataLength - (compressedProfileOffset - iccHeaderOffset),\n                chunkNumber: 1,\n                chunksTotal: 1,\n                profileName,\n                compressionMethod\n            });\n        } else if (isPngChunk(dataView, offset)) {\n            offsets.hasAppMarkers = true;\n            if (!offsets.pngChunkOffsets) {\n                offsets.pngChunkOffsets = [];\n            }\n            offsets.pngChunkOffsets.push(offset + PNG_CHUNK_LENGTH_OFFSET);\n        }\n\n        offset += dataView.getUint32(offset + PNG_CHUNK_LENGTH_OFFSET)\n            + PNG_CHUNK_LENGTH_SIZE\n            + PNG_CHUNK_TYPE_SIZE\n            + PNG_CRC_SIZE;\n    }\n\n    return offsets;\n}\n\nfunction isPngImageHeaderChunk(dataView, offset) {\n    const PNG_CHUNK_TYPE_IMAGE_HEADER = 'IHDR';\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === PNG_CHUNK_TYPE_IMAGE_HEADER;\n}\n\nfunction isPngXmpChunk(dataView, offset) {\n    return (getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ITXT)\n        && (getStringFromDataView(dataView, offset + PNG_CHUNK_DATA_OFFSET, PNG_XMP_PREFIX.length) === PNG_XMP_PREFIX);\n}\n\nfunction isPngTextChunk(dataView, offset, async) {\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return chunkType === TYPE_TEXT || chunkType === TYPE_ITXT || (chunkType === TYPE_ZTXT && async);\n}\n\nfunction isPngExifChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_EXIF;\n}\n\nfunction isPngIccpChunk(dataView, offset) {\n    return getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE) === TYPE_ICCP;\n}\n\nfunction isPngChunk(dataView, offset) {\n    const SUPPORTED_PNG_CHUNK_TYPES = [TYPE_PHYS, TYPE_TIME];\n    const chunkType = getStringFromDataView(dataView, offset + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n    return SUPPORTED_PNG_CHUNK_TYPES.includes(chunkType);\n}\n\nfunction getPngXmpDataOffset(dataView, offset) {\n    const COMPRESSION_FLAG_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    offset += PNG_CHUNK_DATA_OFFSET + PNG_XMP_PREFIX.length + COMPRESSION_FLAG_SIZE + COMPRESSION_METHOD_SIZE;\n\n    let numberOfNullSeparators = 0;\n    while (numberOfNullSeparators < 2 && offset < dataView.byteLength) {\n        if (dataView.getUint8(offset) === 0x00) {\n            numberOfNullSeparators++;\n        }\n        offset++;\n    }\n    if (numberOfNullSeparators < 2) {\n        return undefined;\n    }\n    return offset;\n}\n\nfunction parseIccHeader(dataView, offset) {\n    const NULL_SEPARATOR_SIZE = 1;\n    const COMPRESSION_METHOD_SIZE = 1;\n\n    const profileName = getNullTerminatedStringFromDataView(dataView, offset);\n    offset += profileName.length + NULL_SEPARATOR_SIZE;\n\n    const compressionMethod = dataView.getUint8(offset);\n    offset += COMPRESSION_METHOD_SIZE;\n\n    return {\n        profileName,\n        compressionMethod,\n        compressedProfileOffset: offset\n    };\n}\n","import {get64BitValue} from './image-header-iso-bmff-utils.js';\n\nexport function parseItemLocationBox(dataView, version, contentOffset, boxLength) {\n    const FLAGS_SIZE = 3;\n\n    const {offsets, sizes} = getItemLocationBoxOffsetsAndSizes(version, contentOffset + FLAGS_SIZE);\n\n    const offsetSize = dataView.getUint8(offsets.offsetSize) >> 4;\n    sizes.item.extent.extentOffset = offsetSize;\n    const lengthSize = dataView.getUint8(offsets.lengthSize) & 0x0f;\n    sizes.item.extent.extentLength = lengthSize;\n    const baseOffsetSize = dataView.getUint8(offsets.baseOffsetSize) >> 4;\n    sizes.item.baseOffset = baseOffsetSize;\n    const indexSize = getIndexSize(dataView, offsets.indexSize, version);\n    sizes.item.extent.extentIndex = indexSize !== undefined ? indexSize : 0;\n    const itemCount = getItemCount(dataView, offsets.itemCount, version);\n\n    return {\n        type: 'iloc',\n        items: getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount),\n        length: boxLength\n    };\n}\n\nfunction getItemLocationBoxOffsetsAndSizes(version, contentOffset) {\n    const sizes = {\n        item: {\n            dataReferenceIndex: 2,\n            extentCount: 2,\n            extent: {}\n        }\n    };\n    if (version < 2) {\n        sizes.itemCount = 2;\n        sizes.item.itemId = 2;\n    } else if (version === 2) {\n        sizes.itemCount = 4;\n        sizes.item.itemId = 4;\n    }\n    if (version === 1 || version === 2) {\n        sizes.item.constructionMethod = 2;\n    } else {\n        sizes.item.constructionMethod = 0;\n    }\n\n    const offsets = {\n        offsetSize: contentOffset,\n        lengthSize: contentOffset,\n        baseOffsetSize: contentOffset + 1,\n        indexSize: contentOffset + 1\n    };\n    offsets.itemCount = contentOffset + 2;\n    offsets.items = offsets.itemCount + sizes.itemCount;\n    offsets.item = {\n        itemId: 0\n    };\n    offsets.item.constructionMethod = offsets.item.itemId + sizes.item.itemId;\n    offsets.item.dataReferenceIndex = offsets.item.constructionMethod + sizes.item.constructionMethod;\n\n    return {offsets, sizes};\n}\n\nfunction getIndexSize(dataView, offset, version) {\n    if (version === 1 || version === 2) {\n        return dataView.getUint8(offset) & 0x0f;\n    }\n    return undefined;\n}\n\nfunction getItemCount(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getItems(dataView, version, offsets, sizes, offsetSize, lengthSize, indexSize, itemCount) {\n    if (itemCount === undefined) {\n        return [];\n    }\n\n    const items = [];\n    let offset = offsets.items;\n\n    for (let i = 0; i < itemCount; i++) {\n        const item = {extents: []};\n        item.itemId = getItemId(dataView, offset, version);\n        offset += sizes.item.itemId;\n        item.constructionMethod = (version === 1) || (version === 2) ? dataView.getUint16(offset) & 0x0f : undefined;\n        offset += sizes.item.constructionMethod;\n        item.dataReferenceIndex = dataView.getUint16(offset);\n        offset += sizes.item.dataReferenceIndex;\n        item.baseOffset = getVariableSizedValue(dataView, offset, sizes.item.baseOffset);\n        offset += sizes.item.baseOffset;\n        item.extentCount = dataView.getUint16(offset);\n        offset += sizes.item.extentCount;\n        for (let j = 0; j < item.extentCount; j++) {\n            const extent = {};\n\n            extent.extentIndex = getExtentIndex(dataView, version, offset, indexSize);\n            offset += sizes.item.extent.extentIndex;\n            extent.extentOffset = getVariableSizedValue(dataView, offset, offsetSize);\n            offset += sizes.item.extent.extentOffset;\n            extent.extentLength = getVariableSizedValue(dataView, offset, lengthSize);\n            offset += sizes.item.extent.extentLength;\n\n            item.extents.push(extent);\n        }\n\n        items.push(item);\n    }\n\n    return items;\n}\n\nfunction getItemId(dataView, offset, version) {\n    if (version < 2) {\n        return dataView.getUint16(offset);\n    } else if (version === 2) {\n        return dataView.getUint32(offset);\n    }\n    return undefined;\n}\n\nfunction getExtentIndex(dataView, version, offset, indexSize) {\n    if ((version === 1 || version === 2) && indexSize > 0) {\n        return getVariableSizedValue(dataView, offset, indexSize);\n    }\n    return undefined;\n}\n\nfunction getVariableSizedValue(dataView, offset, size) {\n    if (size === 4) {\n        return dataView.getUint32(offset);\n    }\n    if (size === 8) {\n        // eslint-disable-next-line no-console\n        console.warn('This file uses an 8-bit offset which is currently not supported by ExifReader. Contact the maintainer to get it fixed.');\n        return get64BitValue(dataView, offset);\n    }\n    return 0;\n}\n","export function get64BitValue(dataView, offset) {\n    // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n    // wait until there are real-world examples where it is necessary.\n    return dataView.getUint32(offset + 4);\n}\n","import Constants from './constants.js';\nimport {getNullTerminatedStringFromDataView, getStringFromDataView} from './utils.js';\n// import {get64BitValue} from './image-header-iso-bmff-utils.js';\nimport {parseItemLocationBox} from './image-header-iso-bmff-iloc.js';\n\n// HEIC and AVIF files are based on the ISO-BMFF format. This file format is\n// built up by boxes. There are boxes and full boxes. All box types have a\n// length (4 or 8 bytes) and a type (4 bytes). Full boxes also have a version\n// (1 byte) and flags (3 bytes). The boxes can be nested. Each box type has its\n// own structure that can be seen in the specification.\n//\n// For metadata we are interested in the meta box. The meta box contains sub\n// boxes. The sub box type iinf has info about which types of metadata are\n// present in the file. The item ID we get from there we then look up in the\n// iloc sub box to get the offset to the real location of the metadata.\n//\n// The ICC profiles is a bit more nested. We have to look in\n// meta > iprp > ipco > colr, and then the whole profile is stored there.\n\n// These are actually 32-bit strings, not random IDs, e.g. \"ftyp\" and \"meta\".\nconst TYPE_FTYP = 0x66747970;\nconst TYPE_IPRP = 0x69707270;\nconst TYPE_META = 0x6d657461;\nconst TYPE_ILOC = 0x696c6f63;\nconst TYPE_IINF = 0x69696e66;\nconst TYPE_INFE = 0x696e6665;\nconst TYPE_IPCO = 0x6970636f;\nconst TYPE_COLR = 0x636f6c72;\n\n// const EXTENSION_TYPE_FDEL = 0x6664656c;\n\nexport const ITEM_INFO_TYPE_EXIF = 0x45786966;\nexport const ITEM_INFO_TYPE_MIME = 0x6d696d65;\nconst ITEM_INFO_TYPE_URI = 0x75726920;\n\n/**\n * Parses a ISO-BMFF box from the provided data view starting at the given offset.\n *\n * @param {DataView} dataView - The DataView to parse.\n * @param {number} offset - The offset at which to start parsing.\n * @returns {Object} The parsed box.\n */\nexport function parseBox(dataView, offset) {\n    const BOX_TYPE_OFFSET = 4;\n    const BOX_MIN_LENGTH = 8;\n    const VERSION_SIZE = 1;\n\n    const {length, contentOffset} = getBoxLength(dataView, offset);\n    if (length < BOX_MIN_LENGTH) {\n        return undefined;\n    }\n\n    const type = dataView.getUint32(offset + BOX_TYPE_OFFSET);\n\n    if (type === TYPE_FTYP) {\n        return parseFileTypeBox(dataView, contentOffset, length);\n    }\n    if (type === TYPE_IPRP) {\n        return parseItemPropertiesBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_IPCO) {\n        return parseItemPropertyContainerBox(dataView, offset, contentOffset, length);\n    }\n    if (type === TYPE_COLR) {\n        return parseColorInformationBox(dataView, contentOffset, length);\n    }\n\n    // The following are full boxes, also containing version and flags.\n    const version = dataView.getUint8(contentOffset);\n\n    if (type === TYPE_META) {\n        return parseMetadataBox(dataView, offset, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_ILOC) {\n        return parseItemLocationBox(dataView, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_IINF) {\n        return parseItemInformationBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n    if (type === TYPE_INFE) {\n        return parseItemInformationEntryBox(dataView, offset, version, contentOffset + VERSION_SIZE, length);\n    }\n\n    return {\n        // type: getStringFromDataView(dataView, offset + BOX_TYPE_OFFSET, 4),\n        type: undefined,\n        length\n    };\n}\n\n/**\n * @typedef {Object} BoxLength\n * @property {number} length The length of the box including length and type.\n * @property {number} contentOffset\n */\n\n/**\n * @param {DataView} dataView\n * @param {number} offset\n * @returns {BoxLength}\n */\nfunction getBoxLength(dataView, offset) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n    const BOX_EXTENDED_SIZE = 8;\n    const BOX_EXTENDED_SIZE_LOW_OFFSET = 12;\n\n    const boxLength = dataView.getUint32(offset);\n    if (extendsToEndOfFile(boxLength)) {\n        return {\n            length: dataView.byteLength - offset,\n            contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n        };\n    }\n    if (hasExtendedSize(boxLength)) {\n        if (hasEmptyHighBits(dataView, offset)) {\n            // It's a bit tricky to handle 64 bit numbers in JavaScript. Let's\n            // wait until there are real-world examples where it is necessary.\n            return {\n                length: dataView.getUint32(offset + BOX_EXTENDED_SIZE_LOW_OFFSET),\n                contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE + BOX_EXTENDED_SIZE,\n            };\n        }\n    }\n\n    return {\n        length: boxLength,\n        contentOffset: offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE,\n    };\n}\n\nfunction extendsToEndOfFile(boxLength) {\n    return boxLength === 0;\n}\n\nfunction hasExtendedSize(boxLength) {\n    return boxLength === 1;\n}\n\nfunction hasEmptyHighBits(dataView, offset) {\n    const BOX_EXTENDED_SIZE_OFFSET = 8;\n    return dataView.getUint32(offset + BOX_EXTENDED_SIZE_OFFSET) === 0;\n}\n\n/**\n * @typedef {Object} Offsets\n * @property {number} tiffHeaderOffset\n * @property {Array<Object>} xmpChunks\n * @property {Array<Object>} iccChunks\n * @property {boolean} hasAppMarkers\n */\n\n/**\n * Finds the offsets of ISO-BMFF-structued data in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Offsets} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nexport function findOffsets(dataView) {\n    if (Constants.USE_EXIF || Constants.USE_XMP || Constants.USE_ICC) {\n        const offsets = {};\n        const metaBox = findMetaBox(dataView);\n\n        if (!metaBox) {\n            return {hasAppMarkers: false};\n        }\n\n        if (Constants.USE_EXIF) {\n            offsets.tiffHeaderOffset = findExifOffset(dataView, metaBox);\n        }\n        if (Constants.USE_XMP) {\n            offsets.xmpChunks = findXmpChunks(metaBox);\n        }\n        if (Constants.USE_ICC) {\n            offsets.iccChunks = findIccChunks(metaBox);\n        }\n        offsets.hasAppMarkers = (offsets.tiffHeaderOffset !== undefined) || (offsets.xmpChunks !== undefined) || (offsets.iccChunks !== undefined);\n        return offsets;\n    }\n\n    return {};\n}\n\nfunction findMetaBox(dataView) {\n    const BOX_LENGTH_SIZE = 4;\n    const BOX_TYPE_SIZE = 4;\n\n    let offset = 0;\n\n    while (offset + BOX_LENGTH_SIZE + BOX_TYPE_SIZE <= dataView.byteLength) {\n        const box = parseBox(dataView, offset);\n\n        if (box === undefined) {\n            break;\n        }\n\n        if (box.type === 'meta') {\n            return box;\n        }\n\n        offset += box.length;\n    }\n\n    return undefined;\n}\n\nfunction findExifOffset(dataView, metaBox) {\n    try {\n        const exifItemId = findIinfExifItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, exifItemId);\n        const exifOffset = ilocItem.baseOffset + ilocItem.extents[0].extentOffset;\n        return getTiffHeaderOffset(dataView, exifOffset);\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfExifItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf').itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_EXIF);\n}\n\nfunction findIlocItem(metaBox, itemId) {\n    return metaBox.subBoxes.find((box) => box.type === 'iloc').items.find((item) => item.itemId === itemId);\n}\n\nfunction getTiffHeaderOffset(dataView, exifOffset) {\n    // ISO-BMFF formatted files store the Exif data as an \"Exif block\" where the\n    // first 32 bits is the TIFF header offset.\n    const TIFF_HEADER_OFFSET_SIZE = 4;\n    return exifOffset + TIFF_HEADER_OFFSET_SIZE + dataView.getUint32(exifOffset);\n}\n\nfunction findXmpChunks(metaBox) {\n    try {\n        const xmpItemId = findIinfXmpItemId(metaBox).itemId;\n        const ilocItem = findIlocItem(metaBox, xmpItemId);\n        const ilocItemExtent = findIlocItem(metaBox, xmpItemId).extents[0];\n        return [\n            {\n                dataOffset: ilocItem.baseOffset + ilocItemExtent.extentOffset,\n                length: ilocItemExtent.extentLength,\n            }\n        ];\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction findIinfXmpItemId(metaBox) {\n    return metaBox.subBoxes.find((box) => box.type === 'iinf')\n        .itemInfos.find((itemInfo) => itemInfo.itemType === ITEM_INFO_TYPE_MIME && itemInfo.contentType === 'application/rdf+xml');\n}\n\nfunction findIccChunks(metaBox) {\n    // This finds the first ICC chunk, but there could be one for each image\n    // that is embedded in the file. If it turns out we need to match the ICC\n    // chunk to a specific image, we need to check the \"ipma\" in addition to the\n    // \"ipco\" (currently we only extract the \"ipco\" so more code would be\n    // needed).\n    try {\n        const icc = metaBox.subBoxes.find((box) => box.type === 'iprp')\n            .subBoxes.find((box) => box.type === 'ipco')\n            .properties.find((box) => box.type === 'colr')\n            .icc;\n        if (icc) {\n            return [icc];\n        }\n    } catch (error) {\n        // Let it pass through.\n    }\n    return undefined;\n}\n\nfunction parseFileTypeBox(dataView, contentOffset, boxLength) {\n    const MAJOR_BRAND_SIZE = 4;\n    const majorBrand = getStringFromDataView(dataView, contentOffset, MAJOR_BRAND_SIZE);\n\n    return {\n        type: 'ftyp',\n        majorBrand,\n        length: boxLength\n    };\n}\n\nfunction parseItemPropertiesBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'iprp',\n        subBoxes: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseItemPropertyContainerBox(dataView, startOffset, contentOffset, length) {\n    return {\n        type: 'ipco',\n        properties: parseSubBoxes(dataView, contentOffset, length - (contentOffset - startOffset)),\n        length,\n    };\n}\n\nfunction parseColorInformationBox(dataView, contentOffset, length) {\n    return {\n        type: 'colr',\n        icc: parseIcc(dataView, contentOffset),\n        length,\n    };\n}\n\nfunction parseIcc(dataView, contentOffset) {\n    const COLOR_TYPE_SIZE = 4;\n\n    const colorType = getStringFromDataView(dataView, contentOffset, COLOR_TYPE_SIZE);\n    if (colorType !== 'prof' && colorType !== 'rICC') {\n        // Support for nclx would require some restructuring for ICC handling.\n        // Probably do it as a separate feature instead of combining with ICC.\n        // Exiftool groups it under QuickTime. The test file test.avif has nclx.\n        return undefined;\n    }\n\n    return {\n        offset: contentOffset + COLOR_TYPE_SIZE,\n        length: dataView.getUint32(contentOffset + COLOR_TYPE_SIZE),\n        chunkNumber: 1,\n        chunksTotal: 1\n    };\n}\n\nfunction parseMetadataBox(dataView, startOffset, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    return {\n        type: 'meta',\n        subBoxes: parseSubBoxes(dataView, contentOffset + FLAGS_SIZE, length - (contentOffset + FLAGS_SIZE - startOffset)),\n        length\n    };\n}\n\n/**\n * @param {DataView} dataView\n * @param {number} offset The offset to start parsing from.\n * @param {number} length The length of all sub boxes combined.\n * @return {Array<Object>}\n */\nfunction parseSubBoxes(dataView, offset, length) {\n    const ACCEPTED_ITEM_INFO_TYPES = [\n        ITEM_INFO_TYPE_EXIF,\n        ITEM_INFO_TYPE_MIME,\n    ];\n\n    const subBoxes = [];\n    let currentOffset = offset;\n    while (currentOffset < offset + length) {\n        const box = parseBox(dataView, currentOffset);\n        if (box === undefined) {\n            break;\n        }\n        if (box.type !== undefined && (box.itemType === undefined || ACCEPTED_ITEM_INFO_TYPES.indexOf(box.itemType) !== -1)) {\n            subBoxes.push(box);\n        }\n        currentOffset += box.length;\n    }\n    return subBoxes;\n}\n\nfunction parseItemInformationBox(dataView, startOffset, version, contentOffset, length) {\n    const {offsets} = getItemInformationBoxOffsetsAndSizes(version, contentOffset);\n\n    return {\n        type: 'iinf',\n        itemInfos: parseSubBoxes(dataView, offsets.itemInfos, length - (offsets.itemInfos - startOffset)),\n        length\n    };\n}\n\nfunction getItemInformationBoxOffsetsAndSizes(version, contentOffset) {\n    const FLAGS_SIZE = 3;\n\n    const offsets = {entryCount: contentOffset + FLAGS_SIZE};\n    const sizes = {};\n\n    if (version === 0) {\n        sizes.entryCount = 2;\n    } else {\n        sizes.entryCount = 4;\n    }\n\n    offsets.itemInfos = offsets.entryCount + sizes.entryCount;\n\n    return {offsets};\n}\n\nfunction parseItemInformationEntryBox(dataView, startOffset, version, contentOffset, length) {\n    const FLAGS_SIZE = 3;\n\n    contentOffset += FLAGS_SIZE;\n    const entry = {type: 'infe', length};\n\n    if (version === 0 || version === 1) {\n        entry.itemId = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        // entry.contentType = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentType.length + 1;\n        // Since contentEncoding is optional we need to check the offset against length here.\n        // entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, offset);\n        // offset += entry.contentEncoding.length + 1;\n    }\n    // The following code should be correct but we currently don't need it.\n    // if (version === 1) {\n    //     // Everything here is optional, check the offset against length.\n    //     entry.extensionType = dataView.getUint32(contentOffset);\n    //     contentOffset += 4;\n    //     if (entry.extensionType === EXTENSION_TYPE_FDEL) {\n    //         entry.contentLocation = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentLocation.length + 1;\n    //         entry.contentMd5 = getNullTerminatedStringFromDataView(dataView, contentOffset);\n    //         contentOffset += entry.contentMd5.length + 1;\n    //         entry.contentLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.transferLength = get64BitValue(dataView, contentOffset);\n    //         contentOffset += 8;\n    //         entry.entryCount = dataView.getUint8(contentOffset);\n    //         contentOffset += 1;\n    //         entry.entries = [];\n    //         for (let i = 0; i < entry.entryCount; i++) {\n    //             entry.entries.push({groupId: dataView.getUint32(contentOffset)});\n    //             contentOffset += 4;\n    //         }\n    //     }\n    // }\n    if (version >= 2) {\n        if (version === 2) {\n            entry.itemId = dataView.getUint16(contentOffset);\n            contentOffset += 2;\n        } else if (version === 3) {\n            entry.itemId = dataView.getUint32(contentOffset);\n            contentOffset += 4;\n        }\n        entry.itemProtectionIndex = dataView.getUint16(contentOffset);\n        contentOffset += 2;\n        // entry.itemTypeAscii = getStringFromDataView(dataView, offset, 4); // For testing.\n        entry.itemType = dataView.getUint32(contentOffset);\n        contentOffset += 4;\n        entry.itemName = getNullTerminatedStringFromDataView(dataView, contentOffset);\n        contentOffset += entry.itemName.length + 1;\n        if (entry.itemType === ITEM_INFO_TYPE_MIME) {\n            entry.contentType = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.contentType.length + 1;\n            if (startOffset + length > contentOffset) {\n                entry.contentEncoding = getNullTerminatedStringFromDataView(dataView, contentOffset);\n                contentOffset += entry.contentEncoding.length + 1;\n            }\n        } else if (entry.itemType === ITEM_INFO_TYPE_URI) {\n            entry.itemUri = getNullTerminatedStringFromDataView(dataView, contentOffset);\n            contentOffset += entry.itemUri.length + 1;\n        }\n    }\n    return entry;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isHeicFile,\n    findHeicOffsets\n};\n\n/**\n * Checks if the provided data view represents a HEIC/HEIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents a HEIC/HEIF file, false otherwise.\n */\nfunction isHeicFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    const HEIC_MAJOR_BRANDS = ['heic', 'heix', 'hevc', 'hevx', 'heim', 'heis', 'hevm', 'hevs', 'mif1'];\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && HEIC_MAJOR_BRANDS.indexOf(headerBox.majorBrand) !== -1;\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of a HEIC file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findHeicOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification:\n// https://aomediacodec.github.io/av1-avif\n\nimport {parseBox, findOffsets} from './image-header-iso-bmff.js';\n\nexport default {\n    isAvifFile,\n    findAvifOffsets\n};\n\n/**\n * Checks if the provided data view represents an AVIF file.\n *\n * @param {DataView} dataView - The data view to check.\n * @returns {boolean} True if the data view represents an AVIF file, false otherwise.\n */\nfunction isAvifFile(dataView) {\n    if (!dataView) {\n        return false;\n    }\n\n    try {\n        const headerBox = parseBox(dataView, 0);\n        return headerBox && headerBox.majorBrand === 'avif';\n    } catch (error) {\n        return false;\n    }\n}\n\n/**\n * Finds the offsets of an AVIF file in the provided data view.\n *\n * @param {DataView} dataView - The data view to find offsets in.\n * @returns {Object} An object containing the offsets of the TIFF header, XMP chunks, ICC chunks, and a boolean indicating if any of these exist.\n */\nfunction findAvifOffsets(dataView) {\n    return findOffsets(dataView);\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\nimport Constants from './constants.js';\n\nexport default {\n    isWebpFile,\n    findOffsets\n};\n\nfunction isWebpFile(dataView) {\n    const RIFF_ID_OFFSET = 0;\n    const RIFF_ID = 'RIFF';\n    const WEBP_MARKER_OFFSET = 8;\n    const WEBP_MARKER = 'WEBP';\n\n    return !!dataView && getStringFromDataView(dataView, RIFF_ID_OFFSET, RIFF_ID.length) === RIFF_ID\n        && getStringFromDataView(dataView, WEBP_MARKER_OFFSET, WEBP_MARKER.length) === WEBP_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const SUB_CHUNK_START_OFFSET = 12;\n    const CHUNK_SIZE_OFFSET = 4;\n    const EXIF_IDENTIFIER = 'Exif\\x00\\x00';\n    const CHUNK_HEADER_SIZE = 8;\n\n    let offset = SUB_CHUNK_START_OFFSET;\n    let hasAppMarkers = false;\n    let tiffHeaderOffset;\n    let xmpChunks;\n    let iccChunks;\n    let vp8xChunkOffset;\n\n    while (offset + CHUNK_HEADER_SIZE < dataView.byteLength) {\n        const chunkId = getStringFromDataView(dataView, offset, 4);\n        const chunkSize = dataView.getUint32(offset + CHUNK_SIZE_OFFSET, true);\n\n        if (Constants.USE_EXIF && (chunkId === 'EXIF')) {\n            hasAppMarkers = true;\n            if (getStringFromDataView(dataView, offset + CHUNK_HEADER_SIZE, EXIF_IDENTIFIER.length) === EXIF_IDENTIFIER) {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE + EXIF_IDENTIFIER.length;\n            } else {\n                tiffHeaderOffset = offset + CHUNK_HEADER_SIZE;\n            }\n        } else if (Constants.USE_XMP && (chunkId === 'XMP ')) {\n            hasAppMarkers = true;\n            xmpChunks = [{\n                dataOffset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize\n            }];\n        } else if (Constants.USE_ICC && (chunkId === 'ICCP')) {\n            hasAppMarkers = true;\n            iccChunks = [{\n                offset: offset + CHUNK_HEADER_SIZE,\n                length: chunkSize,\n                chunkNumber: 1,\n                chunksTotal: 1\n            }];\n        } else if (chunkId === 'VP8X') {\n            hasAppMarkers = true;\n            vp8xChunkOffset = offset + CHUNK_HEADER_SIZE;\n        }\n\n        offset += CHUNK_HEADER_SIZE + (chunkSize % 2 === 0 ? chunkSize : chunkSize + 1);\n    }\n\n    return {\n        hasAppMarkers,\n        tiffHeaderOffset,\n        xmpChunks,\n        iccChunks,\n        vp8xChunkOffset\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isGifFile,\n    findOffsets\n};\n\nconst GIF_SIGNATURE_SIZE = 6;\nconst GIF_SIGNATURES = ['GIF87a', 'GIF89a'];\n\nfunction isGifFile(dataView) {\n    return !!dataView && GIF_SIGNATURES.includes(getStringFromDataView(dataView, 0, GIF_SIGNATURE_SIZE));\n}\n\nfunction findOffsets() {\n    return {\n        gifHeaderOffset: 0\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    isXMLFile,\n    findOffsets\n};\n\nconst XML_MARKER_OFFSET = 0;\nconst XML_MARKER = '<?xpacket begin';\n\nfunction isXMLFile(dataView) {\n    return !!dataView && getStringFromDataView(dataView, XML_MARKER_OFFSET, XML_MARKER.length) === XML_MARKER;\n}\n\nfunction findOffsets(dataView) {\n    const xmpChunks = [];\n    xmpChunks.push({dataOffset: XML_MARKER_OFFSET, length: dataView.byteLength});\n    return {\n        xmpChunks,\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Tiff from './image-header-tiff.js';\nimport Jpeg from './image-header-jpeg.js';\nimport Png from './image-header-png.js';\nimport Heic from './image-header-heic.js';\nimport Avif from './image-header-avif.js';\nimport Webp from './image-header-webp.js';\nimport Gif from './image-header-gif.js';\nimport Xml from './xml.js';\nimport {objectAssign} from './utils.js';\n\nexport default {\n    parseAppMarkers\n};\n\nfunction parseAppMarkers(dataView, async) {\n    if (Constants.USE_TIFF && Tiff.isTiffFile(dataView)) {\n        return addFileType(Tiff.findTiffOffsets(), 'tiff', 'TIFF');\n    }\n\n    if (Constants.USE_JPEG && Jpeg.isJpegFile(dataView)) {\n        return addFileType(Jpeg.findJpegOffsets(dataView), 'jpeg', 'JPEG');\n    }\n\n    if (Constants.USE_PNG && Png.isPngFile(dataView)) {\n        return addFileType(Png.findPngOffsets(dataView, async), 'png', 'PNG');\n    }\n\n    if (Constants.USE_HEIC && Heic.isHeicFile(dataView)) {\n        return addFileType(Heic.findHeicOffsets(dataView), 'heic', 'HEIC');\n    }\n\n    if (Constants.USE_AVIF && Avif.isAvifFile(dataView)) {\n        return addFileType(Avif.findAvifOffsets(dataView), 'avif', 'AVIF');\n    }\n\n    if (Constants.USE_WEBP && Webp.isWebpFile(dataView)) {\n        return addFileType(Webp.findOffsets(dataView), 'webp', 'WebP');\n    }\n\n    if (Constants.USE_GIF && Gif.isGifFile(dataView)) {\n        return addFileType(Gif.findOffsets(dataView), 'gif', 'GIF');\n    }\n\n    if (Constants.USE_XMP && Xml.isXMLFile(dataView)) {\n        return addFileType(Xml.findOffsets(dataView), 'xml', 'XML');\n    }\n\n    throw new Error('Invalid image format');\n}\n\nfunction addFileType(offsets, fileType, fileTypeDescription) {\n    return objectAssign({}, offsets, {fileType: {value: fileType, description: fileTypeDescription}});\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    ApertureValue: (value) => Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2),\n    ColorSpace(value) {\n        if (value === 1) {\n            return 'sRGB';\n        } else if (value === 0xffff) {\n            return 'Uncalibrated';\n        }\n        return 'Unknown';\n    },\n    ComponentsConfiguration(value) {\n        return value.map((character) => {\n            if (character === 0x31) {\n                return 'Y';\n            } else if (character === 0x32) {\n                return 'Cb';\n            } else if (character === 0x33) {\n                return 'Cr';\n            } else if (character === 0x34) {\n                return 'R';\n            } else if (character === 0x35) {\n                return 'G';\n            } else if (character === 0x36) {\n                return 'B';\n            }\n        }).join('');\n    },\n    Contrast(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    CustomRendered(value) {\n        if (value === 0) {\n            return 'Normal process';\n        } else if (value === 1) {\n            return 'Custom process';\n        }\n        return 'Unknown';\n    },\n    ExposureMode(value) {\n        if (value === 0) {\n            return 'Auto exposure';\n        } else if (value === 1) {\n            return 'Manual exposure';\n        } else if (value === 2) {\n            return 'Auto bracket';\n        }\n        return 'Unknown';\n    },\n    ExposureProgram(value) {\n        if (value === 0) {\n            return 'Undefined';\n        } else if (value === 1) {\n            return 'Manual';\n        } else if (value === 2) {\n            return 'Normal program';\n        } else if (value === 3) {\n            return 'Aperture priority';\n        } else if (value === 4) {\n            return 'Shutter priority';\n        } else if (value === 5) {\n            return 'Creative program';\n        } else if (value === 6) {\n            return 'Action program';\n        } else if (value === 7) {\n            return 'Portrait mode';\n        } else if (value === 8) {\n            return 'Landscape mode';\n        } else if (value === 9) {\n            return 'Bulb';\n        }\n        return 'Unknown';\n    },\n    ExposureTime(value) {\n        if (value[0] / value[1] > 0.25) {\n            const decimal = value[0] / value[1];\n            if (Number.isInteger(decimal)) {\n                return '' + decimal;\n            }\n            return decimal.toFixed(1);\n        }\n        if (value[0] !== 0) {\n            return `1/${Math.round(value[1] / value[0])}`;\n        }\n        return `0/${value[1]}`;\n    },\n    FNumber: (value) => `f/${value[0] / value[1]}`,\n    FocalLength: (value) => (value[0] / value[1]) + ' mm',\n    FocalPlaneResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        } else if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    LightSource: (value) => {\n        if (value === 1) {\n            return 'Daylight';\n        } else if (value === 2) {\n            return 'Fluorescent';\n        } else if (value === 3) {\n            return 'Tungsten (incandescent light)';\n        } else if (value === 4) {\n            return 'Flash';\n        } else if (value === 9) {\n            return 'Fine weather';\n        } else if (value === 10) {\n            return 'Cloudy weather';\n        } else if (value === 11) {\n            return 'Shade';\n        } else if (value === 12) {\n            return 'Daylight fluorescent (D 5700 – 7100K)';\n        } else if (value === 13) {\n            return 'Day white fluorescent (N 4600 – 5400K)';\n        } else if (value === 14) {\n            return 'Cool white fluorescent (W 3900 – 4500K)';\n        } else if (value === 15) {\n            return 'White fluorescent (WW 3200 – 3700K)';\n        } else if (value === 17) {\n            return 'Standard light A';\n        } else if (value === 18) {\n            return 'Standard light B';\n        } else if (value === 19) {\n            return 'Standard light C';\n        } else if (value === 20) {\n            return 'D55';\n        } else if (value === 21) {\n            return 'D65';\n        } else if (value === 22) {\n            return 'D75';\n        } else if (value === 23) {\n            return 'D50';\n        } else if (value === 24) {\n            return 'ISO studio tungsten';\n        } else if (value === 255) {\n            return 'Other light source';\n        }\n        return 'Unknown';\n    },\n    MeteringMode(value) {\n        if (value === 1) {\n            return 'Average';\n        } else if (value === 2) {\n            return 'CenterWeightedAverage';\n        } else if (value === 3) {\n            return 'Spot';\n        } else if (value === 4) {\n            return 'MultiSpot';\n        } else if (value === 5) {\n            return 'Pattern';\n        } else if (value === 6) {\n            return 'Partial';\n        } else if (value === 255) {\n            return 'Other';\n        }\n        return 'Unknown';\n    },\n    ResolutionUnit(value) {\n        if (value === 2) {\n            return 'inches';\n        }\n        if (value === 3) {\n            return 'centimeters';\n        }\n        return 'Unknown';\n    },\n    Saturation(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Low saturation';\n        } else if (value === 2) {\n            return 'High saturation';\n        }\n        return 'Unknown';\n    },\n    SceneCaptureType(value) {\n        if (value === 0) {\n            return 'Standard';\n        } else if (value === 1) {\n            return 'Landscape';\n        } else if (value === 2) {\n            return 'Portrait';\n        } else if (value === 3) {\n            return 'Night scene';\n        }\n        return 'Unknown';\n    },\n    Sharpness(value) {\n        if (value === 0) {\n            return 'Normal';\n        } else if (value === 1) {\n            return 'Soft';\n        } else if (value === 2) {\n            return 'Hard';\n        }\n        return 'Unknown';\n    },\n    ShutterSpeedValue(value) {\n        const denominator = Math.pow(2, value[0] / value[1]);\n        if (denominator <= 1) {\n            return `${Math.round(1 / denominator)}`;\n        }\n        return `1/${Math.round(denominator)}`;\n    },\n    WhiteBalance(value) {\n        if (value === 0) {\n            return 'Auto white balance';\n        } else if (value === 1) {\n            return 'Manual white balance';\n        }\n        return 'Unknown';\n    },\n    XResolution: (value) => '' + Math.round(value[0] / value[1]),\n    YResolution: (value) => '' + Math.round(value[0] / value[1])\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x000b: 'ProcessingSoftware',\n    0x00fe: {\n        name: 'SubfileType',\n        description: (value) => ({\n            0x0: 'Full-resolution image',\n            0x1: 'Reduced-resolution image',\n            0x2: 'Single page of multi-page image',\n            0x3: 'Single page of multi-page reduced-resolution image',\n            0x4: 'Transparency mask',\n            0x5: 'Transparency mask of reduced-resolution image',\n            0x6: 'Transparency mask of multi-page image',\n            0x7: 'Transparency mask of reduced-resolution multi-page image',\n            0x10001: 'Alternate reduced-resolution image',\n            0xffffffff: 'Invalid'\n        })[value] || 'Unknown'\n    },\n    0x00ff: {\n        name: 'OldSubfileType',\n        description: (value) => ({\n            0: 'Full-resolution image',\n            1: 'Reduced-resolution image',\n            2: 'Single page of multi-page image'\n        })[value] || 'Unknown'\n    },\n    0x0100: 'ImageWidth',\n    0x0101: 'ImageLength',\n    0x0102: 'BitsPerSample',\n    0x0103: 'Compression',\n    0x0106: 'PhotometricInterpretation',\n    0x0107: {\n        name: 'Thresholding',\n        description: (value) => ({\n            1: 'No dithering or halftoning',\n            2: 'Ordered dither or halfton',\n            3: 'Randomized dither'\n        })[value] || 'Unknown'\n    },\n    0x0108: 'CellWidth',\n    0x0109: 'CellLength',\n    0x010a: {\n        name: 'FillOrder',\n        description: (value) => ({\n            1: 'Normal',\n            2: 'Reversed'\n        })[value] || 'Unknown'\n    },\n    0x010d: 'DocumentName',\n    0x010e: 'ImageDescription',\n    0x010f: 'Make',\n    0x0110: 'Model',\n    0x0111: 'StripOffsets',\n    0x0112: {\n        name: 'Orientation',\n        description: (value) => {\n            if (value === 1) {\n                return 'top-left';\n            }\n            if (value === 2) {\n                return 'top-right';\n            }\n            if (value === 3) {\n                return 'bottom-right';\n            }\n            if (value === 4) {\n                return 'bottom-left';\n            }\n            if (value === 5) {\n                return 'left-top';\n            }\n            if (value === 6) {\n                return 'right-top';\n            }\n            if (value === 7) {\n                return 'right-bottom';\n            }\n            if (value === 8) {\n                return 'left-bottom';\n            }\n            return 'Undefined';\n        }\n    },\n    0x0115: 'SamplesPerPixel',\n    0x0116: 'RowsPerStrip',\n    0x0117: 'StripByteCounts',\n    0x0118: 'MinSampleValue',\n    0x0119: 'MaxSampleValue',\n    0x011a: {\n        'name': 'XResolution',\n        'description': TagNamesCommon.XResolution\n    },\n    0x011b: {\n        'name': 'YResolution',\n        'description': TagNamesCommon.YResolution\n    },\n    0x011c: 'PlanarConfiguration',\n    0x011d: 'PageName',\n    0x011e: {\n        'name': 'XPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x011f: {\n        'name': 'YPosition',\n        'description': (value) => {\n            return '' + Math.round(value[0] / value[1]);\n        }\n    },\n    0x0122: {\n        name: 'GrayResponseUnit',\n        description: (value) => ({\n            1: '0.1',\n            2: '0.001',\n            3: '0.0001',\n            4: '1e-05',\n            5: '1e-06'\n        })[value] || 'Unknown'\n    },\n    0x0128: {\n        name: 'ResolutionUnit',\n        description: TagNamesCommon.ResolutionUnit\n    },\n    0x0129: 'PageNumber',\n    0x012d: 'TransferFunction',\n    0x0131: 'Software',\n    0x0132: 'DateTime',\n    0x013b: 'Artist',\n    0x013c: 'HostComputer',\n    0x013d: 'Predictor',\n    0x013e: {\n        'name': 'WhitePoint',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x013f: {\n        'name': 'PrimaryChromaticities',\n        'description': (values) => {\n            return values.map((value) => `${value[0]}/${value[1]}`).join(', ');\n        }\n    },\n    0x0141: 'HalftoneHints',\n    0x0142: 'TileWidth',\n    0x0143: 'TileLength',\n    0x014a: 'A100DataOffset',\n    0x014c: {\n        name: 'InkSet',\n        description: (value) => ({\n            1: 'CMYK',\n            2: 'Not CMYK'\n        })[value] || 'Unknown'\n    },\n    0x0151: 'TargetPrinter',\n    0x0152: {\n        name: 'ExtraSamples',\n        description: (value) => ({\n            0: 'Unspecified',\n            1: 'Associated Alpha',\n            2: 'Unassociated Alpha',\n        })[value] || 'Unknown'\n    },\n    0x0153: {\n        name: 'SampleFormat',\n        description: (value) => {\n            const formats = {\n                1: 'Unsigned',\n                2: 'Signed',\n                3: 'Float',\n                4: 'Undefined',\n                5: 'Complex int',\n                6: 'Complex float',\n            };\n            if (!Array.isArray(value)) {\n                return 'Unknown';\n            }\n            return value.map((sample) => formats[sample] || 'Unknown').join(', ');\n        }\n    },\n    0x0201: 'JPEGInterchangeFormat',\n    0x0202: 'JPEGInterchangeFormatLength',\n    0x0211: {\n        'name': 'YCbCrCoefficients',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join('/');\n        }\n    },\n    0x0212: 'YCbCrSubSampling',\n    0x0213: {\n        name: 'YCbCrPositioning',\n        description: (value) => {\n            if (value === 1) {\n                return 'centered';\n            }\n            if (value === 2) {\n                return 'co-sited';\n            }\n            return 'undefined ' + value;\n        }\n    },\n    0x0214: {\n        'name': 'ReferenceBlackWhite',\n        'description': (values) => {\n            return values.map((value) => '' + value[0] / value[1]).join(', ');\n        }\n    },\n    0x02bc: 'ApplicationNotes',\n    0x4746: 'Rating',\n    0x4749: 'RatingPercent',\n    0x8298: {\n        name: 'Copyright',\n        description: (value) => value.join('; ')\n    },\n    0x830e: 'PixelScale',\n    0x83bb: 'IPTC-NAA',\n    0x8480: 'IntergraphMatrix',\n    0x8482: 'ModelTiePoint',\n    0x8546: 'SEMInfo',\n    0x85d8: 'ModelTransform',\n    0x8649: 'PhotoshopSettings',\n    0x8769: 'Exif IFD Pointer',\n    0x8773: 'ICC_Profile',\n    0x87af: 'GeoTiffDirectory',\n    0x87b0: 'GeoTiffDoubleParams',\n    0x87b1: 'GeoTiffAsciiParams',\n    0x8825: 'GPS Info IFD Pointer',\n    0x9c9b: 'XPTitle',\n    0x9c9c: 'XPComment',\n    0x9c9d: 'XPAuthor',\n    0x9c9e: 'XPKeywords',\n    0x9c9f: 'XPSubject',\n    0xa480: 'GDALMetadata',\n    0xa481: 'GDALNoData',\n    0xc4a5: 'PrintIM',\n    0xc613: 'DNGBackwardVersion',\n    0xc614: 'UniqueCameraModel',\n    0xc615: 'LocalizedCameraModel',\n    0xc621: 'ColorMatrix1',\n    0xc622: 'ColorMatrix2',\n    0xc623: 'CameraCalibration1',\n    0xc624: 'CameraCalibration2',\n    0xc625: 'ReductionMatrix1',\n    0xc626: 'ReductionMatrix2',\n    0xc627: 'AnalogBalance',\n    0xc628: 'AsShotNeutral',\n    0xc629: 'AsShotWhiteXY',\n    0xc62a: 'BaselineExposure',\n    0xc62b: 'BaselineNoise',\n    0xc62c: 'BaselineSharpness',\n    0xc62e: 'LinearResponseLimit',\n    0xc62f: 'CameraSerialNumber',\n    0xc630: 'DNGLensInfo',\n    0xc633: 'ShadowScale',\n    0xc635: {\n        name: 'MakerNoteSafety',\n        description: (value) => ({\n            0: 'Unsafe',\n            1: 'Safe'\n        })[value] || 'Unknown'\n    },\n    0xc65a: {\n        name: 'CalibrationIlluminant1',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65b: {\n        name: 'CalibrationIlluminant2',\n        description: TagNamesCommon['LightSource']\n    },\n    0xc65d: 'RawDataUniqueID',\n    0xc68b: 'OriginalRawFileName',\n    0xc68c: 'OriginalRawFileData',\n    0xc68f: 'AsShotICCProfile',\n    0xc690: 'AsShotPreProfileMatrix',\n    0xc691: 'CurrentICCProfile',\n    0xc692: 'CurrentPreProfileMatrix',\n    0xc6bf: 'ColorimetricReference',\n    0xc6c5: 'SRawType',\n    0xc6d2: 'PanasonicTitle',\n    0xc6d3: 'PanasonicTitle2',\n    0xc6f3: 'CameraCalibrationSig',\n    0xc6f4: 'ProfileCalibrationSig',\n    0xc6f5: 'ProfileIFD',\n    0xc6f6: 'AsShotProfileName',\n    0xc6f8: 'ProfileName',\n    0xc6f9: 'ProfileHueSatMapDims',\n    0xc6fa: 'ProfileHueSatMapData1',\n    0xc6fb: 'ProfileHueSatMapData2',\n    0xc6fc: 'ProfileToneCurve',\n    0xc6fd: {\n        name: 'ProfileEmbedPolicy',\n        description: (value) => ({\n            0: 'Allow Copying',\n            1: 'Embed if Used',\n            2: 'Never Embed',\n            3: 'No Restrictions'\n        })[value] || 'Unknown'\n    },\n    0xc6fe: 'ProfileCopyright',\n    0xc714: 'ForwardMatrix1',\n    0xc715: 'ForwardMatrix2',\n    0xc716: 'PreviewApplicationName',\n    0xc717: 'PreviewApplicationVersion',\n    0xc718: 'PreviewSettingsName',\n    0xc719: 'PreviewSettingsDigest',\n    0xc71a: {\n        name: 'PreviewColorSpace',\n        description: (value) => ({\n            1: 'Gray Gamma 2.2',\n            2: 'sRGB',\n            3: 'Adobe RGB',\n            4: 'ProPhoto RGB'\n        })[value] || 'Unknown'\n    },\n    0xc71b: 'PreviewDateTime',\n    0xc71c: 'RawImageDigest',\n    0xc71d: 'OriginalRawFileDigest',\n    0xc725: 'ProfileLookTableDims',\n    0xc726: 'ProfileLookTableData',\n    0xc763: 'TimeCodes',\n    0xc764: 'FrameRate',\n    0xc772: 'TStop',\n    0xc789: 'ReelName',\n    0xc791: 'OriginalDefaultFinalSize',\n    0xc792: 'OriginalBestQualitySize',\n    0xc793: 'OriginalDefaultCropSize',\n    0xc7a1: 'CameraLabel',\n    0xc7a3: {\n        name: 'ProfileHueSatMapEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a4: {\n        name: 'ProfileLookTableEncoding',\n        description: (value) => ({\n            0: 'Linear',\n            1: 'sRGB'\n        })[value] || 'Unknown'\n    },\n    0xc7a5: 'BaselineExposureOffset',\n    0xc7a6: {\n        name: 'DefaultBlackRender',\n        description: (value) => ({\n            0: 'Auto',\n            1: 'None'\n        })[value] || 'Unknown'\n    },\n    0xc7a7: 'NewRawImageDigest',\n    0xc7a8: 'RawToPreviewGain'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getEncodedString, getCalculatedGpsValue} from './tag-names-utils.js';\n\nexport default {\n    0x0000: {\n        'name': 'GPSVersionID',\n        'description': (value) => {\n            if (value[0] === 2 && value[1] === 2 && value[2] === 0 && value[3] === 0) {\n                return 'Version 2.2';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0001: {\n        'name': 'GPSLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0002: {\n        'name': 'GPSLatitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0003: {\n        'name': 'GPSLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0004: {\n        'name': 'GPSLongitude',\n        'description': getCalculatedGpsValue\n    },\n    0x0005: {\n        'name': 'GPSAltitudeRef',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Sea level';\n            } else if (value === 1) {\n                return 'Sea level reference (negative value)';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0006: {\n        'name': 'GPSAltitude',\n        'description': (value) => {\n            return (value[0] / value[1]) + ' m';\n        }\n    },\n    0x0007: {\n        'name': 'GPSTimeStamp',\n        'description': (values) => {\n            return values.map(([numerator, denominator]) => {\n                const num = numerator / denominator;\n                if (/^\\d(\\.|$)/.test(`${num}`)) {\n                    return `0${num}`;\n                }\n                return num;\n            }).join(':');\n        }\n    },\n    0x0008: 'GPSSatellites',\n    0x0009: {\n        'name': 'GPSStatus',\n        'description': (value) => {\n            const status = value.join('');\n            if (status === 'A') {\n                return 'Measurement in progress';\n            } else if (status === 'V') {\n                return 'Measurement Interoperability';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000a: {\n        'name': 'GPSMeasureMode',\n        'description': (value) => {\n            const mode = value.join('');\n            if (mode === '2') {\n                return '2-dimensional measurement';\n            } else if (mode === '3') {\n                return '3-dimensional measurement';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000b: 'GPSDOP',\n    0x000c: {\n        'name': 'GPSSpeedRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers per hour';\n            } else if (ref === 'M') {\n                return 'Miles per hour';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000d: 'GPSSpeed',\n    0x000e: {\n        'name': 'GPSTrackRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x000f: 'GPSTrack',\n    0x0010: {\n        'name': 'GPSImgDirectionRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0011: 'GPSImgDirection',\n    0x0012: 'GPSMapDatum',\n    0x0013: {\n        'name': 'GPSDestLatitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'N') {\n                return 'North latitude';\n            } else if (ref === 'S') {\n                return 'South latitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0014: {\n        'name': 'GPSDestLatitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0015: {\n        'name': 'GPSDestLongitudeRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'E') {\n                return 'East longitude';\n            } else if (ref === 'W') {\n                return 'West longitude';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0016: {\n        'name': 'GPSDestLongitude',\n        'description': (value) => {\n            return (value[0][0] / value[0][1]) + (value[1][0] / value[1][1]) / 60 + (value[2][0] / value[2][1]) / 3600;\n        }\n    },\n    0x0017: {\n        'name': 'GPSDestBearingRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'T') {\n                return 'True direction';\n            } else if (ref === 'M') {\n                return 'Magnetic direction';\n            }\n            return 'Unknown';\n        }\n    },\n    0x0018: 'GPSDestBearing',\n    0x0019: {\n        'name': 'GPSDestDistanceRef',\n        'description': (value) => {\n            const ref = value.join('');\n            if (ref === 'K') {\n                return 'Kilometers';\n            } else if (ref === 'M') {\n                return 'Miles';\n            } else if (ref === 'N') {\n                return 'Knots';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001a: 'GPSDestDistance',\n    0x001b: {\n        'name': 'GPSProcessingMethod',\n        'description': getEncodedString\n    },\n    0x001c: {\n        'name': 'GPSAreaInformation',\n        'description': getEncodedString\n    },\n    0x001d: 'GPSDateStamp',\n    0x001e: {\n        'name': 'GPSDifferential',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Measurement without differential correction';\n            } else if (value === 1) {\n                return 'Differential correction applied';\n            }\n            return 'Unknown';\n        }\n    },\n    0x001f: 'GPSHPositioningError'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0x0001: 'InteroperabilityIndex',\n    0x0002: {\n        name: 'InteroperabilityVersion',\n        description: (value) => getStringValue(value)\n    },\n    0x1000: 'RelatedImageFileFormat',\n    0x1001: 'RelatedImageWidth',\n    0x1002: 'RelatedImageHeight'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    0xb000: {\n        'name': 'MPFVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0xb001: 'NumberOfImages',\n    0xb002: 'MPEntry',\n    0xb003: 'ImageUIDList',\n    0xb004: 'TotalFrames'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport Constants from './constants.js';\nimport TagNames0thIfd from './tag-names-0th-ifd.js';\nimport TagNamesExifIfd from './tag-names-exif-ifd.js';\nimport TagNamesGpsIfd from './tag-names-gps-ifd.js';\nimport TagNamesInteroperabilityIfd from './tag-names-interoperability-ifd.js';\nimport TagNamesMpfIfd from './tag-names-mpf-ifd.js';\n\nconst tagNames0thExifIfds = objectAssign({}, TagNames0thIfd, TagNamesExifIfd);\n\nexport const IFD_TYPE_0TH = '0th';\nexport const IFD_TYPE_1ST = '1st';\nexport const IFD_TYPE_EXIF = 'exif';\nexport const IFD_TYPE_GPS = 'gps';\nexport const IFD_TYPE_INTEROPERABILITY = 'interoperability';\nexport const IFD_TYPE_MPF = 'mpf';\n\nexport default {\n    [IFD_TYPE_0TH]: tagNames0thExifIfds,\n    [IFD_TYPE_1ST]: TagNames0thIfd,\n    [IFD_TYPE_EXIF]: tagNames0thExifIfds,\n    [IFD_TYPE_GPS]: TagNamesGpsIfd,\n    [IFD_TYPE_INTEROPERABILITY]: TagNamesInteroperabilityIfd,\n    [IFD_TYPE_MPF]: Constants.USE_MPF ? TagNamesMpfIfd : {},\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue, getEncodedString} from './tag-names-utils.js';\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    0x829a: {\n        'name': 'ExposureTime',\n        'description': TagNamesCommon.ExposureTime\n    },\n    0x829d: {\n        'name': 'FNumber',\n        'description': TagNamesCommon.FNumber\n    },\n    0x8822: {\n        'name': 'ExposureProgram',\n        'description': TagNamesCommon.ExposureProgram\n    },\n    0x8824: 'SpectralSensitivity',\n    0x8827: 'ISOSpeedRatings',\n    0x8828: {\n        'name': 'OECF',\n        'description': () => '[Raw OECF table data]'\n    },\n    0x882a: 'TimeZoneOffset',\n    0x882b: 'SelfTimerMode',\n    0x8830: {\n        name: 'SensitivityType',\n        description: (value) => ({\n            1: 'Standard Output Sensitivity',\n            2: 'Recommended Exposure Index',\n            3: 'ISO Speed',\n            4: 'Standard Output Sensitivity and Recommended Exposure Index',\n            5: 'Standard Output Sensitivity and ISO Speed',\n            6: 'Recommended Exposure Index and ISO Speed',\n            7: 'Standard Output Sensitivity, Recommended Exposure Index and ISO Speed'\n        })[value] || 'Unknown'\n    },\n    0x8831: 'StandardOutputSensitivity',\n    0x8832: 'RecommendedExposureIndex',\n    0x8833: 'ISOSpeed',\n    0x8834: 'ISOSpeedLatitudeyyy',\n    0x8835: 'ISOSpeedLatitudezzz',\n    0x9000: {\n        'name': 'ExifVersion',\n        'description': (value) => getStringValue(value)\n    },\n    0x9003: 'DateTimeOriginal',\n    0x9004: 'DateTimeDigitized',\n    0x9009: 'GooglePlusUploadCode',\n    0x9010: 'OffsetTime',\n    0x9011: 'OffsetTimeOriginal',\n    0x9012: 'OffsetTimeDigitized',\n    0x9101: {\n        'name': 'ComponentsConfiguration',\n        'description': TagNamesCommon.ComponentsConfiguration\n    },\n    0x9102: 'CompressedBitsPerPixel',\n    0x9201: {\n        'name': 'ShutterSpeedValue',\n        'description': TagNamesCommon.ShutterSpeedValue\n    },\n    0x9202: {\n        'name': 'ApertureValue',\n        'description': TagNamesCommon.ApertureValue\n    },\n    0x9203: 'BrightnessValue',\n    0x9204: 'ExposureBiasValue',\n    0x9205: {\n        'name': 'MaxApertureValue',\n        'description': (value) => {\n            return Math.pow(Math.sqrt(2), value[0] / value[1]).toFixed(2);\n        }\n    },\n    0x9206: {\n        'name': 'SubjectDistance',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9207: {\n        'name': 'MeteringMode',\n        'description': TagNamesCommon.MeteringMode\n    },\n    0x9208: {\n        'name': 'LightSource',\n        description: TagNamesCommon.LightSource\n    },\n    0x9209: {\n        'name': 'Flash',\n        'description': (value) => {\n            if (value === 0x00) {\n                return 'Flash did not fire';\n            } else if (value === 0x01) {\n                return 'Flash fired';\n            } else if (value === 0x05) {\n                return 'Strobe return light not detected';\n            } else if (value === 0x07) {\n                return 'Strobe return light detected';\n            } else if (value === 0x09) {\n                return 'Flash fired, compulsory flash mode';\n            } else if (value === 0x0d) {\n                return 'Flash fired, compulsory flash mode, return light not detected';\n            } else if (value === 0x0f) {\n                return 'Flash fired, compulsory flash mode, return light detected';\n            } else if (value === 0x10) {\n                return 'Flash did not fire, compulsory flash mode';\n            } else if (value === 0x18) {\n                return 'Flash did not fire, auto mode';\n            } else if (value === 0x19) {\n                return 'Flash fired, auto mode';\n            } else if (value === 0x1d) {\n                return 'Flash fired, auto mode, return light not detected';\n            } else if (value === 0x1f) {\n                return 'Flash fired, auto mode, return light detected';\n            } else if (value === 0x20) {\n                return 'No flash function';\n            } else if (value === 0x41) {\n                return 'Flash fired, red-eye reduction mode';\n            } else if (value === 0x45) {\n                return 'Flash fired, red-eye reduction mode, return light not detected';\n            } else if (value === 0x47) {\n                return 'Flash fired, red-eye reduction mode, return light detected';\n            } else if (value === 0x49) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode';\n            } else if (value === 0x4d) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light not detected';\n            } else if (value === 0x4f) {\n                return 'Flash fired, compulsory flash mode, red-eye reduction mode, return light detected';\n            } else if (value === 0x59) {\n                return 'Flash fired, auto mode, red-eye reduction mode';\n            } else if (value === 0x5d) {\n                return 'Flash fired, auto mode, return light not detected, red-eye reduction mode';\n            } else if (value === 0x5f) {\n                return 'Flash fired, auto mode, return light detected, red-eye reduction mode';\n            }\n            return 'Unknown';\n        }\n    },\n    0x920a: {\n        'name': 'FocalLength',\n        'description': TagNamesCommon.FocalLength\n    },\n    0x9211: 'ImageNumber',\n    0x9212: {\n        name: 'SecurityClassification',\n        description: (value) => ({\n            'C': 'Confidential',\n            'R': 'Restricted',\n            'S': 'Secret',\n            'T': 'Top Secret',\n            'U': 'Unclassified'\n        })[value] || 'Unknown'\n    },\n    0x9213: 'ImageHistory',\n    0x9214: {\n        'name': 'SubjectArea',\n        'description': (value) => {\n            if (value.length === 2) {\n                return `Location; X: ${value[0]}, Y: ${value[1]}`;\n            } else if (value.length === 3) {\n                return `Circle; X: ${value[0]}, Y: ${value[1]}, diameter: ${value[2]}`;\n            } else if (value.length === 4) {\n                return `Rectangle; X: ${value[0]}, Y: ${value[1]}, width: ${value[2]}, height: ${value[3]}`;\n            }\n            return 'Unknown';\n        }\n    },\n    0x927c: {\n        'name': 'MakerNote',\n        'description': () => '[Raw maker note data]'\n    },\n    0x9286: {\n        'name': 'UserComment',\n        'description': getEncodedString\n    },\n    0x9290: 'SubSecTime',\n    0x9291: 'SubSecTimeOriginal',\n    0x9292: 'SubSecTimeDigitized',\n    0x935c: 'ImageSourceData',\n    0x9400: {\n        'name': 'AmbientTemperature',\n        'description': (value) => (value[0] / value[1]) + ' °C'\n    },\n    0x9401: {\n        'name': 'Humidity',\n        'description': (value) => (value[0] / value[1]) + ' %'\n    },\n    0x9402: {\n        'name': 'Pressure',\n        'description': (value) => (value[0] / value[1]) + ' hPa'\n    },\n    0x9403: {\n        'name': 'WaterDepth',\n        'description': (value) => (value[0] / value[1]) + ' m'\n    },\n    0x9404: {\n        'name': 'Acceleration',\n        'description': (value) => (value[0] / value[1]) + ' mGal'\n    },\n    0x9405: {\n        'name': 'CameraElevationAngle',\n        'description': (value) => (value[0] / value[1]) + ' °'\n    },\n    0xa000: {\n        'name': 'FlashpixVersion',\n        'description': (value) => value.map((charCode) => String.fromCharCode(charCode)).join('')\n    },\n    0xa001: {\n        'name': 'ColorSpace',\n        'description': TagNamesCommon.ColorSpace\n    },\n    0xa002: 'PixelXDimension',\n    0xa003: 'PixelYDimension',\n    0xa004: 'RelatedSoundFile',\n    0xa005: 'Interoperability IFD Pointer',\n    0xa20b: 'FlashEnergy',\n    0xa20c: {\n        'name': 'SpatialFrequencyResponse',\n        'description': () => '[Raw SFR table data]'\n    },\n    0xa20e: 'FocalPlaneXResolution',\n    0xa20f: 'FocalPlaneYResolution',\n    0xa210: {\n        'name': 'FocalPlaneResolutionUnit',\n        'description': TagNamesCommon.FocalPlaneResolutionUnit\n    },\n    0xa214: {\n        'name': 'SubjectLocation',\n        'description': ([x, y]) => `X: ${x}, Y: ${y}`\n    },\n    0xa215: 'ExposureIndex',\n    0xa217: {\n        'name': 'SensingMethod',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Undefined';\n            } else if (value === 2) {\n                return 'One-chip color area sensor';\n            } else if (value === 3) {\n                return 'Two-chip color area sensor';\n            } else if (value === 4) {\n                return 'Three-chip color area sensor';\n            } else if (value === 5) {\n                return 'Color sequential area sensor';\n            } else if (value === 7) {\n                return 'Trilinear sensor';\n            } else if (value === 8) {\n                return 'Color sequential linear sensor';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa300: {\n        'name': 'FileSource',\n        'description': (value) => {\n            if (value === 3) {\n                return 'DSC';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa301: {\n        'name': 'SceneType',\n        'description': (value) => {\n            if (value === 1) {\n                return 'A directly photographed image';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa302: {\n        'name': 'CFAPattern',\n        'description': () => '[Raw CFA pattern table data]'\n    },\n    0xa401: {\n        'name': 'CustomRendered',\n        'description': TagNamesCommon.CustomRendered\n    },\n    0xa402: {\n        'name': 'ExposureMode',\n        'description': TagNamesCommon.ExposureMode\n    },\n    0xa403: {\n        'name': 'WhiteBalance',\n        'description': TagNamesCommon.WhiteBalance\n    },\n    0xa404: {\n        'name': 'DigitalZoomRatio',\n        'description': (value) => {\n            if (value[0] === 0) {\n                return 'Digital zoom was not used';\n            }\n            return '' + (value[0] / value[1]);\n        }\n    },\n    0xa405: {\n        'name': 'FocalLengthIn35mmFilm',\n        'description': (value) => {\n            if (value === 0) {\n                return 'Unknown';\n            }\n            return value;\n        }\n    },\n    0xa406: {\n        'name': 'SceneCaptureType',\n        'description': TagNamesCommon.SceneCaptureType\n    },\n    0xa407: {\n        'name': 'GainControl',\n        'description': (value) => {\n            if (value === 0) {\n                return 'None';\n            } else if (value === 1) {\n                return 'Low gain up';\n            } else if (value === 2) {\n                return 'High gain up';\n            } else if (value === 3) {\n                return 'Low gain down';\n            } else if (value === 4) {\n                return 'High gain down';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa408: {\n        'name': 'Contrast',\n        'description': TagNamesCommon.Contrast\n    },\n    0xa409: {\n        'name': 'Saturation',\n        'description': TagNamesCommon.Saturation\n    },\n    0xa40a: {\n        'name': 'Sharpness',\n        'description': TagNamesCommon.Sharpness\n    },\n    0xa40b: {\n        'name': 'DeviceSettingDescription',\n        'description': () => '[Raw device settings table data]'\n    },\n    0xa40c: {\n        'name': 'SubjectDistanceRange',\n        'description': (value) => {\n            if (value === 1) {\n                return 'Macro';\n            } else if (value === 2) {\n                return 'Close view';\n            } else if (value === 3) {\n                return 'Distant view';\n            }\n            return 'Unknown';\n        }\n    },\n    0xa420: 'ImageUniqueID',\n    0xa430: 'CameraOwnerName',\n    0xa431: 'BodySerialNumber',\n    0xa432: {\n        'name': 'LensSpecification',\n        'description': (value) => {\n            const focalLengthFrom = parseFloat((value[0][0] / value[0][1]).toFixed(5));\n            const focalLengthTo = parseFloat((value[1][0] / value[1][1]).toFixed(5));\n            const focalLengths = `${focalLengthFrom}-${focalLengthTo} mm`;\n            if (value[3][1] === 0) {\n                return `${focalLengths} f/?`;\n            }\n            const maxAperture = 1 / ((value[2][1] / value[2][1]) / (value[3][0] / value[3][1]));\n            return `${focalLengths} f/${parseFloat(maxAperture.toFixed(5))}`;\n        }\n    },\n    0xa433: 'LensMake',\n    0xa434: 'LensModel',\n    0xa435: 'LensSerialNumber',\n    0xa460: {\n        name: 'CompositeImage',\n        description: (value) => ({\n            1: 'Not a Composite Image',\n            2: 'General Composite Image',\n            3: 'Composite Image Captured While Shooting',\n        })[value] || 'Unknown'\n    },\n    0xa461: 'SourceImageNumberOfCompositeImage',\n    0xa462: 'SourceExposureTimesOfCompositeImage',\n    0xa500: 'Gamma',\n    0xea1c: 'Padding',\n    0xea1d: 'OffsetSchema',\n    0xfde8: 'OwnerName',\n    0xfde9: 'SerialNumber',\n    0xfdea: 'Lens',\n    0xfe4c: 'RawFile',\n    0xfe4d: 'Converter',\n    0xfe4e: 'WhiteBalance',\n    0xfe51: 'Exposure',\n    0xfe52: 'Shadows',\n    0xfe53: 'Brightness',\n    0xfe54: 'Contrast',\n    0xfe55: 'Saturation',\n    0xfe56: 'Sharpness',\n    0xfe57: 'Smoothness',\n    0xfe58: 'MoireFilter'\n};\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\n\nconst typeSizes = {\n    1: 1, // BYTE\n    2: 1, // ASCII\n    3: 2, // SHORT\n    4: 4, // LONG\n    5: 8, // RATIONAL\n    7: 1, // UNDEFINED\n    9: 4, // SLONG\n    10: 8, // SRATIONAL\n    13: 4 // IFD\n};\n\nconst tagTypes = {\n    'BYTE': 1,\n    'ASCII': 2,\n    'SHORT': 3,\n    'LONG': 4,\n    'RATIONAL': 5,\n    'UNDEFINED': 7,\n    'SLONG': 9,\n    'SRATIONAL': 10,\n    'IFD': 13\n};\n\nexport default {\n    getAsciiValue,\n    getByteAt,\n    getAsciiAt,\n    getShortAt,\n    getLongAt,\n    getRationalAt,\n    getUndefinedAt,\n    getSlongAt,\n    getSrationalAt,\n    getIfdPointerAt,\n    typeSizes,\n    tagTypes,\n    getTypeSize\n};\n\nfunction getAsciiValue(charArray) {\n    return charArray.map((charCode) => String.fromCharCode(charCode));\n}\n\nfunction getByteAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getAsciiAt(dataView, offset) {\n    return dataView.getUint8(offset);\n}\n\nfunction getShortAt(dataView, offset, byteOrder) {\n    return dataView.getUint16(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getLongAt(dataView, offset, byteOrder) {\n    return dataView.getUint32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getRationalAt(dataView, offset, byteOrder) {\n    return [getLongAt(dataView, offset, byteOrder), getLongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getUndefinedAt(dataView, offset) {\n    return getByteAt(dataView, offset);\n}\n\nfunction getSlongAt(dataView, offset, byteOrder) {\n    return dataView.getInt32(offset, byteOrder === ByteOrder.LITTLE_ENDIAN);\n}\n\nfunction getSrationalAt(dataView, offset, byteOrder) {\n    return [getSlongAt(dataView, offset, byteOrder), getSlongAt(dataView, offset + 4, byteOrder)];\n}\n\nfunction getIfdPointerAt(dataView, offset, byteOrder) {\n    return getLongAt(dataView, offset, byteOrder);\n}\n\nfunction getTypeSize(typeName) {\n    if (tagTypes[typeName] === undefined) {\n        throw new Error('No such type found.');\n    }\n\n    return typeSizes[tagTypes[typeName]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Constants from './constants.js';\nimport Types from './types.js';\nimport TagNames, {IFD_TYPE_0TH, IFD_TYPE_1ST} from './tag-names.js';\n\nconst getTagValueAt = {\n    1: Types.getByteAt,\n    2: Types.getAsciiAt,\n    3: Types.getShortAt,\n    4: Types.getLongAt,\n    5: Types.getRationalAt,\n    7: Types.getUndefinedAt,\n    9: Types.getSlongAt,\n    10: Types.getSrationalAt,\n    13: Types.getIfdPointerAt\n};\n\nexport function get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder) {\n    return tiffHeaderOffset + Types.getLongAt(dataView, tiffHeaderOffset + 4, byteOrder);\n}\n\nexport function readIfd(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const FIELD_COUNT_SIZE = Types.getTypeSize('SHORT');\n    const FIELD_SIZE = 12;\n\n    const tags = {};\n    const numberOfFields = getNumberOfFields(dataView, offset, byteOrder);\n\n    offset += FIELD_COUNT_SIZE;\n    for (let fieldIndex = 0; fieldIndex < numberOfFields; fieldIndex++) {\n        if (offset + FIELD_SIZE > dataView.byteLength) {\n            break;\n        }\n\n        const tag = readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown);\n        if (tag !== undefined) {\n            tags[tag.name] = {\n                'id': tag.id,\n                'value': tag.value,\n                'description': tag.description\n            };\n        }\n\n        offset += FIELD_SIZE;\n    }\n\n    if (Constants.USE_THUMBNAIL && (offset < dataView.byteLength - Types.getTypeSize('LONG'))) {\n        const nextIfdOffset = Types.getLongAt(dataView, offset, byteOrder);\n        if (nextIfdOffset !== 0 && ifdType === IFD_TYPE_0TH) {\n            tags['Thumbnail'] = readIfd(dataView, IFD_TYPE_1ST, tiffHeaderOffset, tiffHeaderOffset + nextIfdOffset, byteOrder, includeUnknown);\n        }\n    }\n\n    return tags;\n}\n\nfunction getNumberOfFields(dataView, offset, byteOrder) {\n    if (offset + Types.getTypeSize('SHORT') <= dataView.byteLength) {\n        return Types.getShortAt(dataView, offset, byteOrder);\n    }\n    return 0;\n}\n\nfunction readTag(dataView, ifdType, tiffHeaderOffset, offset, byteOrder, includeUnknown) {\n    const TAG_CODE_IPTC_NAA = 0x83bb;\n    const TAG_TYPE_OFFSET = Types.getTypeSize('SHORT');\n    const TAG_COUNT_OFFSET = TAG_TYPE_OFFSET + Types.getTypeSize('SHORT');\n    const TAG_VALUE_OFFSET = TAG_COUNT_OFFSET + Types.getTypeSize('LONG');\n\n    const tagCode = Types.getShortAt(dataView, offset, byteOrder);\n    const tagType = Types.getShortAt(dataView, offset + TAG_TYPE_OFFSET, byteOrder);\n    const tagCount = Types.getLongAt(dataView, offset + TAG_COUNT_OFFSET, byteOrder);\n    let tagValue;\n\n    if (Types.typeSizes[tagType] === undefined || (!includeUnknown && TagNames[ifdType][tagCode] === undefined)) {\n        return undefined;\n    }\n\n    if (tagValueFitsInOffsetSlot(tagType, tagCount)) {\n        tagValue = getTagValue(dataView, offset + TAG_VALUE_OFFSET, tagType, tagCount, byteOrder);\n    } else {\n        const tagValueOffset = Types.getLongAt(dataView, offset + TAG_VALUE_OFFSET, byteOrder);\n        if (tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount)) {\n            const forceByteType = tagCode === TAG_CODE_IPTC_NAA;\n            tagValue = getTagValue(dataView, tiffHeaderOffset + tagValueOffset, tagType, tagCount, byteOrder, forceByteType);\n        } else {\n            tagValue = '<faulty value>';\n        }\n    }\n\n    if (tagType === Types.tagTypes['ASCII']) {\n        tagValue = splitNullSeparatedAsciiString(tagValue);\n        tagValue = decodeAsciiValue(tagValue);\n    }\n\n    let tagName = `undefined-${tagCode}`;\n    let tagDescription = tagValue;\n\n    if (TagNames[ifdType][tagCode] !== undefined) {\n        if ((TagNames[ifdType][tagCode]['name'] !== undefined) && (TagNames[ifdType][tagCode]['description'] !== undefined)) {\n            tagName = TagNames[ifdType][tagCode]['name'];\n            try {\n                tagDescription = TagNames[ifdType][tagCode]['description'](tagValue);\n            } catch (error) {\n                tagDescription = getDescriptionFromTagValue(tagValue);\n            }\n        } else if ((tagType === Types.tagTypes['RATIONAL']) || (tagType === Types.tagTypes['SRATIONAL'])) {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = '' + (tagValue[0] / tagValue[1]);\n        } else {\n            tagName = TagNames[ifdType][tagCode];\n            tagDescription = getDescriptionFromTagValue(tagValue);\n        }\n    }\n\n    return {\n        id: tagCode,\n        name: tagName,\n        value: tagValue,\n        description: tagDescription\n    };\n}\n\nfunction tagValueFitsInOffsetSlot(tagType, tagCount) {\n    return Types.typeSizes[tagType] * tagCount <= Types.getTypeSize('LONG');\n}\n\nfunction getTagValue(dataView, offset, type, count, byteOrder, forceByteType = false) {\n    let value = [];\n\n    if (forceByteType) {\n        count = count * Types.typeSizes[type];\n        type = Types.tagTypes['BYTE'];\n    }\n    for (let valueIndex = 0; valueIndex < count; valueIndex++) {\n        value.push(getTagValueAt[type](dataView, offset, byteOrder));\n        offset += Types.typeSizes[type];\n    }\n\n    if (type === Types.tagTypes['ASCII']) {\n        value = Types.getAsciiValue(value);\n    } else if (value.length === 1) {\n        value = value[0];\n    }\n\n    return value;\n}\n\nfunction tagValueFitsInDataView(dataView, tiffHeaderOffset, tagValueOffset, tagType, tagCount) {\n    return tiffHeaderOffset + tagValueOffset + Types.typeSizes[tagType] * tagCount <= dataView.byteLength;\n}\n\nfunction splitNullSeparatedAsciiString(string) {\n    const tagValue = [];\n    let i = 0;\n\n    for (let j = 0; j < string.length; j++) {\n        if (string[j] === '\\x00') {\n            i++;\n            continue;\n        }\n        if (tagValue[i] === undefined) {\n            tagValue[i] = '';\n        }\n        tagValue[i] += string[j];\n    }\n\n    return tagValue;\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return asciiValue.map((value) => decodeURIComponent(escape(value)));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n\nfunction getDescriptionFromTagValue(tagValue) {\n    if (tagValue instanceof Array) {\n        return tagValue.join(', ');\n    }\n    return tagValue;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {objectAssign} from './utils.js';\nimport ByteOrder from './byte-order.js';\nimport {IFD_TYPE_0TH, IFD_TYPE_EXIF, IFD_TYPE_GPS, IFD_TYPE_INTEROPERABILITY} from './tag-names.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nconst EXIF_IFD_POINTER_KEY = 'Exif IFD Pointer';\nconst GPS_INFO_IFD_POINTER_KEY = 'GPS Info IFD Pointer';\nconst INTEROPERABILITY_IFD_POINTER_KEY = 'Interoperability IFD Pointer';\n\nexport default {\n    read,\n};\n\nfunction read(dataView, tiffHeaderOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, tiffHeaderOffset);\n    let tags = read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n    tags = readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown);\n\n    return tags;\n}\n\nfunction read0thIfd(dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    return readIfd(dataView, IFD_TYPE_0TH, tiffHeaderOffset, get0thIfdOffset(dataView, tiffHeaderOffset, byteOrder), byteOrder, includeUnknown);\n}\n\nfunction readExifIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[EXIF_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_EXIF, tiffHeaderOffset, tiffHeaderOffset + tags[EXIF_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readGpsIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[GPS_INFO_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_GPS, tiffHeaderOffset, tiffHeaderOffset + tags[GPS_INFO_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n\nfunction readInteroperabilityIfd(tags, dataView, tiffHeaderOffset, byteOrder, includeUnknown) {\n    if (tags[INTEROPERABILITY_IFD_POINTER_KEY] !== undefined) {\n        return objectAssign(tags, readIfd(dataView, IFD_TYPE_INTEROPERABILITY, tiffHeaderOffset, tiffHeaderOffset + tags[INTEROPERABILITY_IFD_POINTER_KEY].value, byteOrder, includeUnknown));\n    }\n\n    return tags;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport ByteOrder from './byte-order.js';\nimport Types from './types.js';\nimport {IFD_TYPE_MPF} from './tag-names.js';\nimport {deferInit, getBase64Image} from './utils.js';\nimport {readIfd, get0thIfdOffset} from './tags-helpers.js';\n\nexport default {\n    read\n};\n\nconst ENTRY_SIZE = 16;\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    const byteOrder = ByteOrder.getByteOrder(dataView, dataOffset);\n    const tags = readIfd(dataView, IFD_TYPE_MPF, dataOffset, get0thIfdOffset(dataView, dataOffset, byteOrder), byteOrder, includeUnknown);\n    return addMpfImages(dataView, dataOffset, tags, byteOrder);\n}\n\nfunction addMpfImages(dataView, dataOffset, tags, byteOrder) {\n    if (!tags['MPEntry']) {\n        return tags;\n    }\n\n    const images = [];\n    for (let i = 0; i < Math.ceil(tags['MPEntry'].value.length / ENTRY_SIZE); i++) {\n        images[i] = {};\n\n        const attributes = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageFlags'] = getImageFlags(attributes);\n        images[i]['ImageFormat'] = getImageFormat(attributes);\n        images[i]['ImageType'] = getImageType(attributes);\n\n        const imageSize = getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 4, Types.getTypeSize('LONG'), byteOrder);\n        images[i]['ImageSize'] = {\n            value: imageSize,\n            description: '' + imageSize\n        };\n\n        const imageOffset = getImageOffset(i, tags['MPEntry'], byteOrder, dataOffset);\n        images[i]['ImageOffset'] = {\n            value: imageOffset,\n            description: '' + imageOffset\n        };\n\n        const dependentImage1EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 12, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage1EntryNumber'] = {\n            value: dependentImage1EntryNumber,\n            description: '' + dependentImage1EntryNumber\n        };\n\n        const dependentImage2EntryNumber =\n            getImageNumberValue(tags['MPEntry'].value, i * ENTRY_SIZE + 14, Types.getTypeSize('SHORT'), byteOrder);\n        images[i]['DependentImage2EntryNumber'] = {\n            value: dependentImage2EntryNumber,\n            description: '' + dependentImage2EntryNumber\n        };\n\n        images[i].image = dataView.buffer.slice(imageOffset, imageOffset + imageSize);\n        deferInit(images[i], 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    tags['Images'] = images;\n\n    return tags;\n}\n\nfunction getImageNumberValue(entries, offset, size, byteOrder) {\n    if (byteOrder === ByteOrder.LITTLE_ENDIAN) {\n        let value = 0;\n        for (let i = 0; i < size; i++) {\n            value += entries[offset + i] << (8 * i);\n        }\n        return value;\n    }\n\n    let value = 0;\n    for (let i = 0; i < size; i++) {\n        value += entries[offset + i] << (8 * (size - 1 - i));\n    }\n    return value;\n}\n\nfunction getImageFlags(attributes) {\n    const flags = [\n        (attributes >> 31) & 0x1,\n        (attributes >> 30) & 0x1,\n        (attributes >> 29) & 0x1\n    ];\n\n    const flagsDescription = [];\n\n    if (flags[0]) {\n        flagsDescription.push('Dependent Parent Image');\n    }\n    if (flags[1]) {\n        flagsDescription.push('Dependent Child Image');\n    }\n    if (flags[2]) {\n        flagsDescription.push('Representative Image');\n    }\n\n    return {\n        value: flags,\n        description: flagsDescription.join(', ') || 'None'\n    };\n}\n\nfunction getImageFormat(attributes) {\n    const imageFormat = attributes >> 24 & 0x7;\n    return {\n        value: imageFormat,\n        description: imageFormat === 0 ? 'JPEG' : 'Unknown'\n    };\n}\n\nfunction getImageType(attributes) {\n    const type = attributes & 0xffffff;\n    const descriptions = {\n        0x30000: 'Baseline MP Primary Image',\n        0x10001: 'Large Thumbnail (VGA equivalent)',\n        0x10002: 'Large Thumbnail (Full HD equivalent)',\n        0x20001: 'Multi-Frame Image (Panorama)',\n        0x20002: 'Multi-Frame Image (Disparity)',\n        0x20003: 'Multi-Frame Image (Multi-Angle)',\n        0x0: 'Undefined',\n    };\n\n    return {\n        value: type,\n        description: descriptions[type] || 'Unknown'\n    };\n}\n\nfunction getImageOffset(imageIndex, mpEntry, byteOrder, dataOffset) {\n    if (isFirstIndividualImage(imageIndex)) {\n        return 0;\n    }\n    return getImageNumberValue(mpEntry.value, imageIndex * ENTRY_SIZE + 8, Types.getTypeSize('LONG'), byteOrder) + dataOffset;\n}\n\nfunction isFirstIndividualImage(imageIndex) {\n    return imageIndex === 0;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    const length = getLength(dataView, fileDataOffset);\n    const numberOfColorComponents = getNumberOfColorComponents(dataView, fileDataOffset, length);\n    return {\n        'Bits Per Sample': getDataPrecision(dataView, fileDataOffset, length),\n        'Image Height': getImageHeight(dataView, fileDataOffset, length),\n        'Image Width': getImageWidth(dataView, fileDataOffset, length),\n        'Color Components': numberOfColorComponents,\n        'Subsampling': numberOfColorComponents && getSubsampling(dataView, fileDataOffset, numberOfColorComponents.value, length)\n    };\n}\n\nfunction getLength(dataView, fileDataOffset) {\n    return Types.getShortAt(dataView, fileDataOffset);\n}\n\nfunction getDataPrecision(dataView, fileDataOffset, length) {\n    const OFFSET = 2;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset, length) {\n    const OFFSET = 3;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset, length) {\n    const OFFSET = 5;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getNumberOfColorComponents(dataView, fileDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getSubsampling(dataView, fileDataOffset, numberOfColorComponents, length) {\n    const OFFSET = 8;\n    const SIZE = 3 * numberOfColorComponents;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const components = [];\n\n    for (let i = 0; i < numberOfColorComponents; i++) {\n        const componentOffset = fileDataOffset + OFFSET + i * 3;\n        components.push([\n            Types.getByteAt(dataView, componentOffset),\n            Types.getByteAt(dataView, componentOffset + 1),\n            Types.getByteAt(dataView, componentOffset + 2)\n        ]);\n    }\n\n    return {\n        value: components,\n        description: components.length > 1 ? getComponentIds(components) + getSamplingType(components) : ''\n    };\n}\n\nfunction getComponentIds(components) {\n    const ids = {\n        0x01: 'Y',\n        0x02: 'Cb',\n        0x03: 'Cr',\n        0x04: 'I',\n        0x05: 'Q',\n    };\n\n    return components.map((compontent) => ids[compontent[0]]).join('');\n}\n\nfunction getSamplingType(components) {\n    const types = {\n        0x11: '4:4:4 (1 1)',\n        0x12: '4:4:0 (1 2)',\n        0x14: '4:4:1 (1 4)',\n        0x21: '4:2:2 (2 1)',\n        0x22: '4:2:0 (2 2)',\n        0x24: '4:2:1 (2 4)',\n        0x41: '4:1:1 (4 1)',\n        0x42: '4:1:0 (4 2)'\n    };\n\n    if (components.length === 0 || components[0][1] === undefined || types[components[0][1]] === undefined) {\n        return '';\n    }\n\n    return types[components[0][1]];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, jfifDataOffset) {\n    const length = getLength(dataView, jfifDataOffset);\n    const thumbnailWidth = getThumbnailWidth(dataView, jfifDataOffset, length);\n    const thumbnailHeight = getThumbnailHeight(dataView, jfifDataOffset, length);\n    const tags = {\n        'JFIF Version': getVersion(dataView, jfifDataOffset, length),\n        'Resolution Unit': getResolutionUnit(dataView, jfifDataOffset, length),\n        'XResolution': getXResolution(dataView, jfifDataOffset, length),\n        'YResolution': getYResolution(dataView, jfifDataOffset, length),\n        'JFIF Thumbnail Width': thumbnailWidth,\n        'JFIF Thumbnail Height': thumbnailHeight\n    };\n\n    if (thumbnailWidth !== undefined && thumbnailHeight !== undefined) {\n        const thumbnail = getThumbnail(dataView, jfifDataOffset, 3 * thumbnailWidth.value * thumbnailHeight.value, length);\n        if (thumbnail) {\n            tags['JFIF Thumbnail'] = thumbnail;\n        }\n    }\n\n    for (const tagName in tags) {\n        if (tags[tagName] === undefined) {\n            delete tags[tagName];\n        }\n    }\n\n    return tags;\n}\n\nfunction getLength(dataView, jfifDataOffset) {\n    return Types.getShortAt(dataView, jfifDataOffset);\n}\n\nfunction getVersion(dataView, jfifDataOffset, length) {\n    const OFFSET = 7;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const majorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    const minorVersion = Types.getByteAt(dataView, jfifDataOffset + OFFSET + 1);\n    return {\n        value: majorVersion * 0x100 + minorVersion,\n        description: majorVersion + '.' + minorVersion\n    };\n}\n\nfunction getResolutionUnit(dataView, jfifDataOffset, length) {\n    const OFFSET = 9;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: getResolutionUnitDescription(value)\n    };\n}\n\nfunction getResolutionUnitDescription(value) {\n    if (value === 0) {\n        return 'None';\n    }\n    if (value === 1) {\n        return 'inches';\n    }\n    if (value === 2) {\n        return 'cm';\n    }\n    return 'Unknown';\n}\n\nfunction getXResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 10;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getYResolution(dataView, jfifDataOffset, length) {\n    const OFFSET = 12;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getShortAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getThumbnailWidth(dataView, jfifDataOffset, length) {\n    const OFFSET = 14;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnailHeight(dataView, jfifDataOffset, length) {\n    const OFFSET = 15;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > length) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, jfifDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getThumbnail(dataView, jfifDataOffset, thumbnailLength, length) {\n    const OFFSET = 16;\n\n    if (thumbnailLength === 0 || OFFSET + thumbnailLength > length) {\n        return undefined;\n    }\n\n    const value = dataView.buffer.slice(jfifDataOffset + OFFSET, jfifDataOffset + OFFSET + thumbnailLength);\n    return {\n        value,\n        description: '<24-bit RGB pixel data>'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringValue} from './tag-names-utils.js';\n\nexport default {\n    'iptc': {\n        0x0100: {\n            'name': 'Model Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0105: {\n            'name': 'Destination',\n            'repeatable': true\n        },\n        0x0114: {\n            'name': 'File Format',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0116: {\n            'name': 'File Format Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x011e: 'Service Identifier',\n        0x0128: 'Envelope Number',\n        0x0132: 'Product ID',\n        0x013c: 'Envelope Priority',\n        0x0146: {\n            'name': 'Date Sent',\n            'description': getCreationDate\n        },\n        0x0150: {\n            'name': 'Time Sent',\n            'description': getCreationTime\n        },\n        0x015a: {\n            'name': 'Coded Character Set',\n            'description': getEncodingName,\n            'encoding_name': getEncodingName,\n        },\n        0x0164: 'UNO',\n        0x0178: {\n            'name': 'ARM Identifier',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x017a: {\n            'name': 'ARM Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0200: {\n            'name': 'Record Version',\n            'description': (value) => {\n                return ((value[0] << 8) + value[1]).toString();\n            }\n        },\n        0x0203: 'Object Type Reference',\n        0x0204: 'Object Attribute Reference',\n        0x0205: 'Object Name',\n        0x0207: 'Edit Status',\n        0x0208: {\n            'name': 'Editorial Update',\n            'description': (value) => {\n                if (getStringValue(value) === '01') {\n                    return 'Additional Language';\n                }\n                return 'Unknown';\n            }\n        },\n        0x020a: 'Urgency',\n        0x020c: {\n            'name': 'Subject Reference',\n            'repeatable': true,\n            'description': (value) => {\n                const parts = getStringValue(value).split(':');\n                return parts[2] + (parts[3] ? '/' + parts[3] : '') + (parts[4] ? '/' + parts[4] : '');\n            }\n        },\n        0x020f: 'Category',\n        0x0214: {\n            'name': 'Supplemental Category',\n            'repeatable': true\n        },\n        0x0216: 'Fixture Identifier',\n        0x0219: {\n            'name': 'Keywords',\n            'repeatable': true\n        },\n        0x021a: {\n            'name': 'Content Location Code',\n            'repeatable': true\n        },\n        0x021b: {\n            'name': 'Content Location Name',\n            'repeatable': true\n        },\n        0x021e: 'Release Date',\n        0x0223: 'Release Time',\n        0x0225: 'Expiration Date',\n        0x0226: 'Expiration Time',\n        0x0228: 'Special Instructions',\n        0x022a: {\n            'name': 'Action Advised',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === '01') {\n                    return 'Object Kill';\n                } else if (string === '02') {\n                    return 'Object Replace';\n                } else if (string === '03') {\n                    return 'Object Append';\n                } else if (string === '04') {\n                    return 'Object Reference';\n                }\n                return 'Unknown';\n            }\n        },\n        0x022d: {\n            'name': 'Reference Service',\n            'repeatable': true\n        },\n        0x022f: {\n            'name': 'Reference Date',\n            'repeatable': true\n        },\n        0x0232: {\n            'name': 'Reference Number',\n            'repeatable': true\n        },\n        0x0237: {\n            'name': 'Date Created',\n            'description': getCreationDate\n        },\n        0x023c: {\n            'name': 'Time Created',\n            'description': getCreationTime\n        },\n        0x023e: {\n            'name': 'Digital Creation Date',\n            'description': getCreationDate\n        },\n        0x023f: {\n            'name': 'Digital Creation Time',\n            'description': getCreationTime\n        },\n        0x0241: 'Originating Program',\n        0x0246: 'Program Version',\n        0x024b: {\n            'name': 'Object Cycle',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'a') {\n                    return 'morning';\n                } else if (string === 'p') {\n                    return 'evening';\n                } else if (string === 'b') {\n                    return 'both';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0250: {\n            'name': 'By-line',\n            'repeatable': true\n        },\n        0x0255: {\n            'name': 'By-line Title',\n            'repeatable': true\n        },\n        0x025a: 'City',\n        0x025c: 'Sub-location',\n        0x025f: 'Province/State',\n        0x0264: 'Country/Primary Location Code',\n        0x0265: 'Country/Primary Location Name',\n        0x0267: 'Original Transmission Reference',\n        0x0269: 'Headline',\n        0x026e: 'Credit',\n        0x0273: 'Source',\n        0x0274: 'Copyright Notice',\n        0x0276: {\n            'name': 'Contact',\n            'repeatable': true\n        },\n        0x0278: 'Caption/Abstract',\n        0x027a: {\n            'name': 'Writer/Editor',\n            'repeatable': true\n        },\n        0x027d: {\n            'name': 'Rasterized Caption',\n            'description': (value) => value\n        },\n        0x0282: 'Image Type',\n        0x0283: {\n            'name': 'Image Orientation',\n            'description': (value) => {\n                const string = getStringValue(value);\n                if (string === 'P') {\n                    return 'Portrait';\n                } else if (string === 'L') {\n                    return 'Landscape';\n                } else if (string === 'S') {\n                    return 'Square';\n                }\n                return 'Unknown';\n            }\n        },\n        0x0287: 'Language Identifier',\n        0x0296: {\n            'name': 'Audio Type',\n            'description': (value) => {\n                const stringValue = getStringValue(value);\n                const character0 = stringValue.charAt(0);\n                const character1 = stringValue.charAt(1);\n                let description = '';\n\n                if (character0 === '1') {\n                    description += 'Mono';\n                } else if (character0 === '2') {\n                    description += 'Stereo';\n                }\n\n                if (character1 === 'A') {\n                    description += ', actuality';\n                } else if (character1 === 'C') {\n                    description += ', question and answer session';\n                } else if (character1 === 'M') {\n                    description += ', music, transmitted by itself';\n                } else if (character1 === 'Q') {\n                    description += ', response to a question';\n                } else if (character1 === 'R') {\n                    description += ', raw sound';\n                } else if (character1 === 'S') {\n                    description += ', scener';\n                } else if (character1 === 'V') {\n                    description += ', voicer';\n                } else if (character1 === 'W') {\n                    description += ', wrap';\n                }\n\n                if (description !== '') {\n                    return description;\n                }\n                return stringValue;\n            }\n        },\n        0x0297: {\n            'name': 'Audio Sampling Rate',\n            'description': (value) => parseInt(getStringValue(value), 10) + ' Hz'\n        },\n        0x0298: {\n            'name': 'Audio Sampling Resolution',\n            'description': (value) => {\n                const bits = parseInt(getStringValue(value), 10);\n                return bits + (bits === 1 ? ' bit' : ' bits');\n            }\n        },\n        0x0299: {\n            'name': 'Audio Duration',\n            'description': (value) => {\n                const duration = getStringValue(value);\n                if (duration.length >= 6) {\n                    return duration.substr(0, 2) + ':' + duration.substr(2, 2) + ':' + duration.substr(4, 2);\n                }\n                return duration;\n            }\n        },\n        0x029a: 'Audio Outcue',\n        0x02ba: 'Short Document ID',\n        0x02bb: 'Unique Document ID',\n        0x02bc: 'Owner ID',\n        0x02c8: {\n            'name': (value) => {\n                if (value.length === 2) {\n                    return 'ObjectData Preview File Format';\n                }\n                return 'Record 2 destination';\n            },\n            'description': (value) => {\n                if (value.length === 2) {\n                    const intValue = (value[0] << 8) + value[1];\n                    if (intValue === 0) {\n                        return 'No ObjectData';\n                    } else if (intValue === 1) {\n                        return 'IPTC-NAA Digital Newsphoto Parameter Record';\n                    } else if (intValue === 2) {\n                        return 'IPTC7901 Recommended Message Format';\n                    } else if (intValue === 3) {\n                        return 'Tagged Image File Format (Adobe/Aldus Image data)';\n                    } else if (intValue === 4) {\n                        return 'Illustrator (Adobe Graphics data)';\n                    } else if (intValue === 5) {\n                        return 'AppleSingle (Apple Computer Inc)';\n                    } else if (intValue === 6) {\n                        return 'NAA 89-3 (ANPA 1312)';\n                    } else if (intValue === 7) {\n                        return 'MacBinary II';\n                    } else if (intValue === 8) {\n                        return 'IPTC Unstructured Character Oriented File Format (UCOFF)';\n                    } else if (intValue === 9) {\n                        return 'United Press International ANPA 1312 variant';\n                    } else if (intValue === 10) {\n                        return 'United Press International Down-Load Message';\n                    } else if (intValue === 11) {\n                        return 'JPEG File Interchange (JFIF)';\n                    } else if (intValue === 12) {\n                        return 'Photo-CD Image-Pac (Eastman Kodak)';\n                    } else if (intValue === 13) {\n                        return 'Microsoft Bit Mapped Graphics File [*.BMP]';\n                    } else if (intValue === 14) {\n                        return 'Digital Audio File [*.WAV] (Microsoft & Creative Labs)';\n                    } else if (intValue === 15) {\n                        return 'Audio plus Moving Video [*.AVI] (Microsoft)';\n                    } else if (intValue === 16) {\n                        return 'PC DOS/Windows Executable Files [*.COM][*.EXE]';\n                    } else if (intValue === 17) {\n                        return 'Compressed Binary File [*.ZIP] (PKWare Inc)';\n                    } else if (intValue === 18) {\n                        return 'Audio Interchange File Format AIFF (Apple Computer Inc)';\n                    } else if (intValue === 19) {\n                        return 'RIFF Wave (Microsoft Corporation)';\n                    } else if (intValue === 20) {\n                        return 'Freehand (Macromedia/Aldus)';\n                    } else if (intValue === 21) {\n                        return 'Hypertext Markup Language \"HTML\" (The Internet Society)';\n                    } else if (intValue === 22) {\n                        return 'MPEG 2 Audio Layer 2 (Musicom), ISO/IEC';\n                    } else if (intValue === 23) {\n                        return 'MPEG 2 Audio Layer 3, ISO/IEC';\n                    } else if (intValue === 24) {\n                        return 'Portable Document File (*.PDF) Adobe';\n                    } else if (intValue === 25) {\n                        return 'News Industry Text Format (NITF)';\n                    } else if (intValue === 26) {\n                        return 'Tape Archive (*.TAR)';\n                    } else if (intValue === 27) {\n                        return 'Tidningarnas Telegrambyrå NITF version (TTNITF DTD)';\n                    } else if (intValue === 28) {\n                        return 'Ritzaus Bureau NITF version (RBNITF DTD)';\n                    } else if (intValue === 29) {\n                        return 'Corel Draw [*.CDR]';\n                    }\n                    return `Unknown format ${intValue}`;\n                }\n                return getStringValue(value);\n            }\n        },\n        0x02c9: {\n            'name': 'ObjectData Preview File Format Version',\n            'description': (value, tags) => {\n                // Format ID, Version ID, Version Description\n                const formatVersions = {\n                    '00': {'00': '1'},\n                    '01': {'01': '1', '02': '2', '03': '3', '04': '4'},\n                    '02': {'04': '4'},\n                    '03': {'01': '5.0', '02': '6.0'},\n                    '04': {'01': '1.40'},\n                    '05': {'01': '2'},\n                    '06': {'01': '1'},\n                    '11': {'01': '1.02'},\n                    '20': {'01': '3.1', '02': '4.0', '03': '5.0', '04': '5.5'},\n                    '21': {'02': '2.0'}\n                };\n                const stringValue = getStringValue(value);\n\n                if (tags['ObjectData Preview File Format']) {\n                    const objectDataPreviewFileFormat = getStringValue(tags['ObjectData Preview File Format'].value);\n                    if (formatVersions[objectDataPreviewFileFormat]\n                        && formatVersions[objectDataPreviewFileFormat][stringValue]) {\n                        return formatVersions[objectDataPreviewFileFormat][stringValue];\n                    }\n                }\n\n                return stringValue;\n            }\n        },\n        0x02ca: 'ObjectData Preview Data',\n        0x070a: {\n            'name': 'Size Mode',\n            'description': (value) => {\n                return (value[0]).toString();\n            }\n        },\n        0x0714: {\n            'name': 'Max Subfile Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075a: {\n            'name': 'ObjectData Size Announced',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        },\n        0x075f: {\n            'name': 'Maximum ObjectData Size',\n            'description': (value) => {\n                let n = 0;\n                for (let i = 0; i < value.length; i++) {\n                    n = (n << 8) + value[i];\n                }\n                return n.toString();\n            }\n        }\n    }\n};\n\nfunction getCreationDate(value) {\n    const date = getStringValue(value);\n\n    if (date.length >= 8) {\n        return date.substr(0, 4) + '-' + date.substr(4, 2) + '-' + date.substr(6, 2);\n    }\n\n    return date;\n}\n\nfunction getCreationTime(value) {\n    const time = getStringValue(value);\n    let parsedTime = time;\n\n    if (time.length >= 6) {\n        parsedTime = time.substr(0, 2) + ':' + time.substr(2, 2) + ':' + time.substr(4, 2);\n        if (time.length === 11) {\n            parsedTime += time.substr(6, 1) + time.substr(7, 2) + ':' + time.substr(9, 2);\n        }\n    }\n\n    return parsedTime;\n}\n\nfunction getEncodingName(value) {\n    const string = getStringValue(value);\n    if (string === '\\x1b%G') {\n        return 'UTF-8';\n    } else if (string === '\\x1b%5') {\n        return 'Windows-1252';\n    } else if (string === '\\x1b%/G') {\n        return 'UTF-8 Level 1';\n    } else if (string === '\\x1b%/H') {\n        return 'UTF-8 Level 2';\n    } else if (string === '\\x1b%/I') {\n        return 'UTF-8 Level 3';\n    } else if (string === '\\x1B/A') {\n        return 'ISO-8859-1';\n    } else if (string === '\\x1B/B') {\n        return 'ISO-8859-2';\n    } else if (string === '\\x1B/C') {\n        return 'ISO-8859-3';\n    } else if (string === '\\x1B/D') {\n        return 'ISO-8859-4';\n    } else if (string === '\\x1B/@') {\n        return 'ISO-8859-5';\n    } else if (string === '\\x1B/G') {\n        return 'ISO-8859-6';\n    } else if (string === '\\x1B/F') {\n        return 'ISO-8859-7';\n    } else if (string === '\\x1B/H') {\n        return 'ISO-8859-8';\n    }\n    return 'Unknown';\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof TextDecoder !== 'undefined') {\n        return TextDecoder;\n    }\n\n    return undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TextDecoder from './text-decoder.js';\n\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    decode,\n    TAG_HEADER_SIZE\n};\n\nfunction decode(encoding, tagValue) {\n    const Decoder = TextDecoder.get();\n    if ((typeof Decoder !== 'undefined') && (encoding !== undefined)) {\n        try {\n            return new Decoder(encoding).decode(tagValue instanceof DataView ? tagValue.buffer : Uint8Array.from(tagValue));\n        } catch (error) {\n            // Pass through and fall back to ASCII decoding.\n        }\n    }\n\n    const stringValue = tagValue.map((charCode) => String.fromCharCode(charCode)).join('');\n    return decodeAsciiValue(stringValue);\n}\n\nfunction decodeAsciiValue(asciiValue) {\n    try {\n        return decodeURIComponent(escape(asciiValue));\n    } catch (error) {\n        return asciiValue;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport IptcTagNames from './iptc-tag-names.js';\nimport TagDecoder from './tag-decoder.js';\n\nconst BYTES_8BIM = 0x3842494d;\nconst BYTES_8BIM_SIZE = 4;\nconst RESOURCE_BLOCK_HEADER_SIZE = BYTES_8BIM_SIZE + 8;\nconst NAA_RESOURCE_BLOCK_TYPE = 0x0404;\nconst TAG_HEADER_SIZE = 5;\n\nexport default {\n    read\n};\n\nfunction read(dataView, dataOffset, includeUnknown) {\n    try {\n        if (Array.isArray(dataView)) {\n            return parseTags(new DataView(Uint8Array.from(dataView).buffer), {size: dataView.length}, 0, includeUnknown);\n        }\n        const {naaBlock, dataOffset: newDataOffset} = getNaaResourceBlock(dataView, dataOffset);\n        return parseTags(dataView, naaBlock, newDataOffset, includeUnknown);\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getNaaResourceBlock(dataView, dataOffset) {\n    while (dataOffset + RESOURCE_BLOCK_HEADER_SIZE <= dataView.byteLength) {\n        const resourceBlock = getResourceBlock(dataView, dataOffset);\n        if (isNaaResourceBlock(resourceBlock)) {\n            return {naaBlock: resourceBlock, dataOffset: dataOffset + RESOURCE_BLOCK_HEADER_SIZE};\n        }\n        dataOffset += RESOURCE_BLOCK_HEADER_SIZE + resourceBlock.size + getBlockPadding(resourceBlock);\n    }\n    throw new Error('No IPTC NAA resource block.');\n}\n\nfunction getResourceBlock(dataView, dataOffset) {\n    const RESOURCE_BLOCK_SIZE_OFFSET = 10;\n\n    if (dataView.getUint32(dataOffset, false) !== BYTES_8BIM) {\n        throw new Error('Not an IPTC resource block.');\n    }\n\n    return {\n        type: dataView.getUint16(dataOffset + BYTES_8BIM_SIZE),\n        size: dataView.getUint16(dataOffset + RESOURCE_BLOCK_SIZE_OFFSET)\n    };\n}\n\nfunction isNaaResourceBlock(resourceBlock) {\n    return resourceBlock.type === NAA_RESOURCE_BLOCK_TYPE;\n}\n\nfunction getBlockPadding(resourceBlock) {\n    if (resourceBlock.size % 2 !== 0) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction parseTags(dataView, naaBlock, dataOffset, includeUnknown) {\n    const tags = {};\n    let encoding = undefined;\n\n    const endOfBlockOffset = dataOffset + naaBlock['size'];\n\n    while ((dataOffset < endOfBlockOffset) && (dataOffset < dataView.byteLength)) {\n        const {tag, tagSize} = readTag(dataView, dataOffset, tags, encoding, includeUnknown);\n\n        if (tag === null) {\n            break;\n        }\n\n        if (tag) {\n            if ('encoding' in tag) {\n                encoding = tag.encoding;\n            }\n\n            if ((tags[tag.name] === undefined) || (tag['repeatable'] === undefined)) {\n                tags[tag.name] = {\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                };\n            } else {\n                if (!(tags[tag.name] instanceof Array)) {\n                    tags[tag.name] = [{\n                        id: tags[tag.name].id,\n                        value: tags[tag.name].value,\n                        description: tags[tag.name].description\n                    }];\n                }\n                tags[tag.name].push({\n                    id: tag.id,\n                    value: tag.value,\n                    description: tag.description\n                });\n            }\n        }\n\n        dataOffset += TAG_HEADER_SIZE + tagSize;\n    }\n\n    return tags;\n}\n\nfunction readTag(dataView, dataOffset, tags, encoding, includeUnknown) {\n    const TAG_CODE_OFFSET = 1;\n    const TAG_SIZE_OFFSET = 3;\n\n    if (leadByteIsMissing(dataView, dataOffset)) {\n        return {tag: null, tagSize: 0};\n    }\n\n    const tagCode = dataView.getUint16(dataOffset + TAG_CODE_OFFSET);\n    const tagSize = dataView.getUint16(dataOffset + TAG_SIZE_OFFSET);\n\n    if (!includeUnknown && !IptcTagNames['iptc'][tagCode]) {\n        return {tag: undefined, tagSize};\n    }\n\n    const tagValue = getTagValue(dataView, dataOffset + TAG_HEADER_SIZE, tagSize);\n\n    const tag = {\n        id: tagCode,\n        name: getTagName(IptcTagNames['iptc'][tagCode], tagCode, tagValue),\n        value: tagValue,\n        description: getTagDescription(IptcTagNames['iptc'][tagCode], tagValue, tags, encoding)\n    };\n    if (tagIsRepeatable(tagCode)) {\n        tag['repeatable'] = true;\n    }\n    if (tagContainsEncoding(tagCode)) {\n        tag['encoding'] = IptcTagNames['iptc'][tagCode]['encoding_name'](tagValue);\n    }\n\n    return {tag, tagSize};\n}\n\nfunction leadByteIsMissing(dataView, dataOffset) {\n    const TAG_LEAD_BYTE = 0x1c;\n    return dataView.getUint8(dataOffset) !== TAG_LEAD_BYTE;\n}\n\nfunction getTagValue(dataView, offset, size) {\n    const value = [];\n\n    for (let valueIndex = 0; valueIndex < size; valueIndex++) {\n        value.push(dataView.getUint8(offset + valueIndex));\n    }\n\n    return value;\n}\n\nfunction getTagName(tag, tagCode, tagValue) {\n    if (!tag) {\n        return `undefined-${tagCode}`;\n    }\n    if (tagIsName(tag)) {\n        return tag;\n    }\n    if (hasDynamicName(tag)) {\n        return tag['name'](tagValue);\n    }\n    return tag['name'];\n}\n\nfunction tagIsName(tag) {\n    return typeof tag === 'string';\n}\n\nfunction hasDynamicName(tag) {\n    return typeof (tag['name']) === 'function';\n}\n\nfunction getTagDescription(tag, tagValue, tags, encoding) {\n    if (hasDescriptionProperty(tag)) {\n        try {\n            return tag['description'](tagValue, tags);\n        } catch (error) {\n            // Fall through to next handler.\n        }\n    }\n    if (tagValueIsText(tag, tagValue)) {\n        return TagDecoder.decode(encoding, tagValue);\n    }\n    return tagValue;\n}\n\nfunction tagValueIsText(tag, tagValue) {\n    return tag && tagValue instanceof Array;\n}\n\nfunction hasDescriptionProperty(tag) {\n    return tag && tag['description'] !== undefined;\n}\n\nfunction tagIsRepeatable(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['repeatable'];\n}\n\nfunction tagContainsEncoding(tagCode) {\n    return IptcTagNames['iptc'][tagCode] && IptcTagNames['iptc'][tagCode]['encoding_name'] !== undefined;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport TagNamesCommon from './tag-names-common.js';\n\nexport default {\n    'tiff:Orientation'(value) {\n        if (value === '1') {\n            return 'Horizontal (normal)';\n        }\n        if (value === '2') {\n            return 'Mirror horizontal';\n        }\n        if (value === '3') {\n            return 'Rotate 180';\n        }\n        if (value === '4') {\n            return 'Mirror vertical';\n        }\n        if (value === '5') {\n            return 'Mirror horizontal and rotate 270 CW';\n        }\n        if (value === '6') {\n            return 'Rotate 90 CW';\n        }\n        if (value === '7') {\n            return 'Mirror horizontal and rotate 90 CW';\n        }\n        if (value === '8') {\n            return 'Rotate 270 CW';\n        }\n        return value;\n    },\n    'tiff:ResolutionUnit': (value) => TagNamesCommon.ResolutionUnit(parseInt(value, 10)),\n    'tiff:XResolution': (value) => fraction(TagNamesCommon.XResolution, value),\n    'tiff:YResolution': (value) => fraction(TagNamesCommon.YResolution, value),\n    'exif:ApertureValue': (value) => fraction(TagNamesCommon.ApertureValue, value),\n    'exif:GPSLatitude': calculateGPSValue,\n    'exif:GPSLongitude': calculateGPSValue,\n    'exif:FNumber': (value) => fraction(TagNamesCommon.FNumber, value),\n    'exif:FocalLength': (value) => fraction(TagNamesCommon.FocalLength, value),\n    'exif:FocalPlaneResolutionUnit': (value) => TagNamesCommon.FocalPlaneResolutionUnit(parseInt(value, 10)),\n    'exif:ColorSpace': (value) => TagNamesCommon.ColorSpace(parseNumber(value)),\n    'exif:ComponentsConfiguration'(value, description) {\n        if (/^\\d, \\d, \\d, \\d$/.test(description)) {\n            const numbers = description.split(', ').map((number) => number.charCodeAt(0));\n            return TagNamesCommon.ComponentsConfiguration(numbers);\n        }\n        return description;\n    },\n    'exif:Contrast': (value) => TagNamesCommon.Contrast(parseInt(value, 10)),\n    'exif:CustomRendered': (value) => TagNamesCommon.CustomRendered(parseInt(value, 10)),\n    'exif:ExposureMode': (value) => TagNamesCommon.ExposureMode(parseInt(value, 10)),\n    'exif:ExposureProgram': (value) => TagNamesCommon.ExposureProgram(parseInt(value, 10)),\n    'exif:ExposureTime'(value) {\n        if (isFraction(value)) {\n            return TagNamesCommon.ExposureTime(value.split('/').map((number) => parseInt(number, 10)));\n        }\n        return value;\n    },\n    'exif:MeteringMode': (value) => TagNamesCommon.MeteringMode(parseInt(value, 10)),\n    'exif:Saturation': (value) => TagNamesCommon.Saturation(parseInt(value, 10)),\n    'exif:SceneCaptureType': (value) => TagNamesCommon.SceneCaptureType(parseInt(value, 10)),\n    'exif:Sharpness': (value) => TagNamesCommon.Sharpness(parseInt(value, 10)),\n    'exif:ShutterSpeedValue': (value) => fraction(TagNamesCommon.ShutterSpeedValue, value),\n    'exif:WhiteBalance': (value) => TagNamesCommon.WhiteBalance(parseInt(value, 10))\n};\n\nfunction fraction(func, value) {\n    if (isFraction(value)) {\n        return func(value.split('/'));\n    }\n    return value;\n}\n\nfunction parseNumber(value) {\n    if (value.substring(0, 2) === '0x') {\n        return parseInt(value.substring(2), 16);\n    }\n    return parseInt(value, 10);\n}\n\nfunction isFraction(value) {\n    return /^-?\\d+\\/-?\\d+$/.test(value);\n}\n\nfunction calculateGPSValue(value) {\n    const [degreesString, minutesString] = value.split(',');\n    if ((degreesString !== undefined) && (minutesString !== undefined)) {\n        const degrees = parseFloat(degreesString);\n        const minutes = parseFloat(minutesString);\n        const ref = minutesString.charAt(minutesString.length - 1);\n        if ((!Number.isNaN(degrees)) && (!Number.isNaN(minutes))) {\n            return '' + (degrees + minutes / 60) + ref;\n        }\n    }\n    return value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nexport default {\n    get\n};\n\nfunction get() {\n    if (typeof DOMParser !== 'undefined') {\n        return new DOMParser();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        const {DOMParser, onErrorStopParsing} = __non_webpack_require__('@xmldom/xmldom');\n        return new DOMParser({onError: onErrorStopParsing});\n    } catch (error) {\n        return undefined;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView, objectAssign} from './utils.js';\nimport XmpTagNames from './xmp-tag-names.js';\nimport DOMParser from './dom-parser.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunks) {\n    const tags = {};\n\n    if (typeof dataView === 'string') {\n        readTags(tags, dataView);\n        return tags;\n    }\n\n    const [standardXmp, extendedXmp] = extractCompleteChunks(dataView, chunks);\n\n    const hasStandardTags = readTags(tags, standardXmp);\n\n    if (extendedXmp) {\n        const hasExtendedTags = readTags(tags, extendedXmp);\n\n        if (!hasStandardTags && !hasExtendedTags) {\n            // Some writers are not spec-compliant in that they split an XMP\n            // metadata tree over both the standard XMP block and the extended\n            // XMP block. If we failed parsing both of the XMPs in the regular\n            // way, we try to combine them to see if that works better.\n            delete tags._raw;\n            readTags(tags, combineChunks(dataView, chunks));\n        }\n    }\n\n    return tags;\n}\n\n// The first chunk is always the regular XMP document. Then there is something\n// called extended XMP. The extended XMP is also a single XMP document but it\n// can be divided into multiple chunks that need to be combined into one.\nfunction extractCompleteChunks(dataView, chunks) {\n    if (chunks.length === 0) {\n        return [];\n    }\n\n    const completeChunks = [combineChunks(dataView, chunks.slice(0, 1))];\n    if (chunks.length > 1) {\n        completeChunks.push(combineChunks(dataView, chunks.slice(1)));\n    }\n\n    return completeChunks;\n}\n\nfunction combineChunks(dataView, chunks) {\n    const totalLength = chunks.reduce((size, chunk) => size + chunk.length, 0);\n    const combinedChunks = new Uint8Array(totalLength);\n    let offset = 0;\n\n    for (let i = 0; i < chunks.length; i++) {\n        const chunk = chunks[i];\n        const slice = dataView.buffer.slice(chunk.dataOffset, chunk.dataOffset + chunk.length);\n        combinedChunks.set(new Uint8Array(slice), offset);\n        offset += chunk.length;\n    }\n\n    return new DataView(combinedChunks.buffer);\n}\n\nfunction readTags(tags, chunkDataView) {\n    try {\n        const {doc, raw} = getDocument(chunkDataView);\n        tags._raw = (tags._raw || '') + raw;\n        const rdf = getRDF(doc);\n\n        objectAssign(tags, parseXMPObject(convertToObject(rdf, true)));\n        return true;\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDocument(chunkDataView) {\n    const domParser = DOMParser.get();\n    if (!domParser) {\n        console.warn('Warning: DOMParser is not available. It is needed to be able to parse XMP tags.'); // eslint-disable-line no-console\n        throw new Error();\n    }\n\n    const xmlString = typeof chunkDataView === 'string' ? chunkDataView : getStringFromDataView(chunkDataView, 0, chunkDataView.byteLength);\n    const doc = domParser.parseFromString(trimXmlSource(xmlString), 'application/xml');\n\n    if (doc.documentElement.nodeName === 'parsererror') {\n        throw new Error(doc.documentElement.textContent);\n    }\n\n    return {\n        doc,\n        raw: xmlString,\n    };\n}\n\nfunction trimXmlSource(xmlSource) {\n    return xmlSource.replace(/^.+(<\\?xpacket begin)/, '$1').replace(/(<\\?xpacket end=\".*\"\\?>).+$/, '$1');\n}\n\nfunction getRDF(node) {\n    for (let i = 0; i < node.childNodes.length; i++) {\n        if (node.childNodes[i].tagName === 'x:xmpmeta') {\n            return getRDF(node.childNodes[i]);\n        }\n        if (node.childNodes[i].tagName === 'rdf:RDF') {\n            return node.childNodes[i];\n        }\n    }\n\n    throw new Error();\n}\n\nfunction convertToObject(node, isTopNode = false) {\n    const childNodes = getChildNodes(node);\n\n    if (hasTextOnlyContent(childNodes)) {\n        if (isTopNode) {\n            return {};\n        }\n        return getTextValue(childNodes[0]);\n    }\n\n    return getElementsFromNodes(childNodes);\n}\n\nfunction getChildNodes(node) {\n    const elements = [];\n\n    for (let i = 0; i < node.childNodes.length; i++) {\n        elements.push(node.childNodes[i]);\n    }\n\n    return elements;\n}\n\nfunction hasTextOnlyContent(nodes) {\n    return (nodes.length === 1) && (nodes[0].nodeName === '#text');\n}\n\nfunction getTextValue(node) {\n    return node.nodeValue;\n}\n\nfunction getElementsFromNodes(nodes) {\n    const elements = {};\n\n    nodes.forEach((node) => {\n        if (isElement(node)) {\n            const nodeElement = getElementFromNode(node);\n\n            if (elements[node.nodeName] !== undefined) {\n                if (!Array.isArray(elements[node.nodeName])) {\n                    elements[node.nodeName] = [elements[node.nodeName]];\n                }\n                elements[node.nodeName].push(nodeElement);\n            } else {\n                elements[node.nodeName] = nodeElement;\n            }\n        }\n    });\n\n    return elements;\n}\n\nfunction isElement(node) {\n    return (node.nodeName) && (node.nodeName !== '#text');\n}\n\nfunction getElementFromNode(node) {\n    return {\n        attributes: getAttributes(node),\n        value: convertToObject(node)\n    };\n}\n\nfunction getAttributes(element) {\n    const attributes = {};\n\n    for (let i = 0; i < element.attributes.length; i++) {\n        attributes[element.attributes[i].nodeName] = decodeURIComponent(escape(element.attributes[i].value));\n    }\n\n    return attributes;\n}\n\nfunction parseXMPObject(xmpObject) {\n    const tags = {};\n\n    if (typeof xmpObject === 'string') {\n        return xmpObject;\n    }\n\n    for (const nodeName in xmpObject) {\n        let nodes = xmpObject[nodeName];\n\n        if (!Array.isArray(nodes)) {\n            nodes = [nodes];\n        }\n\n        nodes.forEach((node) => {\n            objectAssign(tags, parseNodeAttributesAsTags(node.attributes));\n            if (typeof node.value === 'object') {\n                objectAssign(tags, parseNodeChildrenAsTags(node.value));\n            }\n        });\n    }\n\n    return tags;\n}\n\nfunction parseNodeAttributesAsTags(attributes) {\n    const tags = {};\n\n    for (const name in attributes) {\n        try {\n            if (isTagAttribute(name)) {\n                tags[getLocalName(name)] = {\n                    value: attributes[name],\n                    attributes: {},\n                    description: getDescription(attributes[name], name)\n                };\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction isTagAttribute(name) {\n    return (name !== 'rdf:parseType') && (!isNamespaceDefinition(name));\n}\n\nfunction isNamespaceDefinition(name) {\n    return name.split(':')[0] === 'xmlns';\n}\n\nfunction getLocalName(name) {\n    if (/^MicrosoftPhoto(_\\d+_)?:Rating$/i.test(name)) {\n        return 'RatingPercent';\n    }\n    return name.split(':')[1];\n}\n\nfunction getDescription(value, name = undefined) {\n    if (Array.isArray(value)) {\n        const arrayDescription = getDescriptionOfArray(value);\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value, arrayDescription);\n        }\n        return arrayDescription;\n    }\n    if (typeof value === 'object') {\n        return getDescriptionOfObject(value);\n    }\n\n    try {\n        if ((name) && (typeof XmpTagNames[name] === 'function')) {\n            return XmpTagNames[name](value);\n        }\n        return decodeURIComponent(escape(value));\n    } catch (error) {\n        return value;\n    }\n}\n\nfunction getDescriptionOfArray(value) {\n    return value.map((item) => {\n        if (item.value !== undefined) {\n            return getDescription(item.value);\n        }\n        return getDescription(item);\n    }).join(', ');\n}\n\nfunction getDescriptionOfObject(value) {\n    const descriptions = [];\n\n    for (const key in value) {\n        descriptions.push(`${getClearTextKey(key)}: ${getDescription(value[key].value)}`);\n    }\n\n    return descriptions.join('; ');\n}\n\nfunction getClearTextKey(key) {\n    if (key === 'CiAdrCity') {\n        return 'CreatorCity';\n    }\n    if (key === 'CiAdrCtry') {\n        return 'CreatorCountry';\n    }\n    if (key === 'CiAdrExtadr') {\n        return 'CreatorAddress';\n    }\n    if (key === 'CiAdrPcode') {\n        return 'CreatorPostalCode';\n    }\n    if (key === 'CiAdrRegion') {\n        return 'CreatorRegion';\n    }\n    if (key === 'CiEmailWork') {\n        return 'CreatorWorkEmail';\n    }\n    if (key === 'CiTelWork') {\n        return 'CreatorWorkPhone';\n    }\n    if (key === 'CiUrlWork') {\n        return 'CreatorWorkUrl';\n    }\n    return key;\n}\n\nfunction parseNodeChildrenAsTags(children) {\n    const tags = {};\n\n    for (const name in children) {\n        try {\n            if (!isNamespaceDefinition(name)) {\n                tags[getLocalName(name)] = parseNodeAsTag(children[name], name);\n            }\n        } catch (error) {\n            // Keep going and try to parse the rest of the tags.\n        }\n    }\n\n    return tags;\n}\n\nfunction parseNodeAsTag(node, name) {\n    if (isDuplicateTag(node)) {\n        return parseNodeAsDuplicateTag(node, name);\n    }\n    if (isEmptyResourceTag(node)) {\n        return {value: '', attributes: {}, description: ''};\n    }\n    if (hasNestedSimpleRdfDescription(node)) {\n        return parseNodeAsSimpleRdfDescription(node, name);\n    }\n    if (hasNestedStructureRdfDescription(node)) {\n        return parseNodeAsStructureRdfDescription(node, name);\n    }\n    if (isCompactStructure(node)) {\n        return parseNodeAsCompactStructure(node, name);\n    }\n    if (isArray(node)) {\n        return parseNodeAsArray(node, name);\n    }\n    return parseNodeAsSimpleValue(node, name);\n}\n\nfunction isEmptyResourceTag(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        && (typeof node.value === 'string')\n        && (node.value.trim() === '');\n}\n\nfunction isDuplicateTag(node) {\n    return Array.isArray(node);\n}\n\nfunction parseNodeAsDuplicateTag(node, name) {\n    return parseNodeAsSimpleValue(node[node.length - 1], name);\n}\n\nfunction hasNestedSimpleRdfDescription(node) {\n    return ((node.attributes['rdf:parseType'] === 'Resource') && (node.value['rdf:value'] !== undefined))\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] !== undefined));\n}\n\nfunction parseNodeAsSimpleRdfDescription(node, name) {\n    const attributes = parseNodeAttributes(node);\n\n    if (node.value['rdf:Description'] !== undefined) {\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(attributes, parseNodeAttributes(node), parseNodeChildrenAsAttributes(node));\n\n    const value = parseRdfValue(node);\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseNodeAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.attributes) {\n        if ((name !== 'rdf:parseType') && (name !== 'rdf:resource') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.attributes[name];\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseNodeChildrenAsAttributes(node) {\n    const attributes = {};\n\n    for (const name in node.value) {\n        if ((name !== 'rdf:value') && (!isNamespaceDefinition(name))) {\n            attributes[getLocalName(name)] = node.value[name].value;\n        }\n    }\n\n    return attributes;\n}\n\nfunction parseRdfValue(node) {\n    return getURIValue(node.value['rdf:value']) || node.value['rdf:value'].value;\n}\n\nfunction hasNestedStructureRdfDescription(node) {\n    return (node.attributes['rdf:parseType'] === 'Resource')\n        || ((node.value['rdf:Description'] !== undefined) && (node.value['rdf:Description'].value['rdf:value'] === undefined));\n}\n\nfunction parseNodeAsStructureRdfDescription(node, name) {\n    const tag = {\n        value: {},\n        attributes: {}\n    };\n\n    if (node.value['rdf:Description'] !== undefined) {\n        objectAssign(tag.value, parseNodeAttributesAsTags(node.value['rdf:Description'].attributes));\n        objectAssign(tag.attributes, parseNodeAttributes(node));\n        node = node.value['rdf:Description'];\n    }\n\n    objectAssign(tag.value, parseNodeChildrenAsTags(node.value));\n\n    tag.description = getDescription(tag.value, name);\n\n    return tag;\n}\n\nfunction isCompactStructure(node) {\n    return (Object.keys(node.value).length === 0)\n        && (node.attributes['xml:lang'] === undefined)\n        && (node.attributes['rdf:resource'] === undefined);\n}\n\nfunction parseNodeAsCompactStructure(node, name) {\n    const value = parseNodeAttributesAsTags(node.attributes);\n\n    return {\n        value,\n        attributes: {},\n        description: getDescription(value, name)\n    };\n}\n\nfunction isArray(node) {\n    return getArrayChild(node.value) !== undefined;\n}\n\nfunction getArrayChild(value) {\n    return value['rdf:Bag'] || value['rdf:Seq'] || value['rdf:Alt'];\n}\n\nfunction parseNodeAsArray(node, name) {\n    let items = getArrayChild(node.value).value['rdf:li'];\n    const attributes = parseNodeAttributes(node);\n    const value = [];\n\n    if (items === undefined) {\n        items = [];\n    } else if (!Array.isArray(items)) {\n        items = [items];\n    }\n\n    items.forEach((item) => {\n        value.push(parseArrayValue(item));\n    });\n\n    return {\n        value,\n        attributes,\n        description: getDescription(value, name)\n    };\n}\n\nfunction parseArrayValue(item) {\n    if (hasNestedSimpleRdfDescription(item)) {\n        return parseNodeAsSimpleRdfDescription(item);\n    }\n    if (hasNestedStructureRdfDescription(item)) {\n        return parseNodeAsStructureRdfDescription(item).value;\n    }\n    if (isCompactStructure(item)) {\n        return parseNodeAsCompactStructure(item).value;\n    }\n\n    return parseNodeAsSimpleValue(item);\n}\n\nfunction parseNodeAsSimpleValue(node, name) {\n    const value = getURIValue(node) || parseXMPObject(node.value);\n\n    return {\n        value,\n        attributes: parseNodeAttributes(node),\n        description: getDescription(value, name)\n    };\n}\n\nfunction getURIValue(node) {\n    return node.attributes && node.attributes['rdf:resource'];\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {\n    getPascalStringFromDataView,\n    padStart,\n    parseFloatRadix,\n    strRepeat\n} from './utils.js';\n\n// export const OsTypeKeys = {\n//     OBJC: 'Objc',\n//     DOUB: 'doub',\n//     UNTF: 'UntF',\n//     TEXT: 'TEXT',\n//     BOOL: 'bool',\n//     ENUM: 'enum',\n//     LONG: 'long'\n// };\n\nexport const PathRecordTypes = {\n    CLOSED_SUBPATH_LENGTH: 0,\n    CLOSED_SUBPATH_BEZIER_LINKED: 1,\n    CLOSED_SUBPATH_BEZIER_UNLINKED: 2,\n    OPEN_SUBPATH_LENGTH: 3,\n    OPEN_SUBPATH_BEZIER_LINKED: 4,\n    OPEN_SUBPATH_BEZIER_UNLINKED: 5,\n    FILL_RULE: 6,\n    CLIPBOARD: 7,\n    INITIAL_FILL_RULE: 8\n};\n\nconst PATH_RECORD_SIZE = 24;\n\nexport default {\n    // 0x0425: {\n    //     name: 'CaptionDigest',\n    //     description(dataView) {\n    //         let description = '';\n    //         for (let i = 0; i < dataView.byteLength; i++) {\n    //             const byte = dataView.getUint8(i);\n    //             description += padStart(byte.toString(16), 2, '0');\n    //         }\n    //         return description;\n    //     }\n    // },\n    // Commented out for now to lower bundle size until someone asks for it.\n    // 0x043a: {\n    //     name: 'PrintInformation',\n    //     description: parseDescriptor\n    // },\n    // 0x043b: {\n    //     name: 'PrintStyle',\n    //     description: parseDescriptor\n    // },\n    0x07d0: {\n        name: 'PathInformation',\n        description: pathResource\n    },\n    0x0bb7: {\n        name: 'ClippingPathName',\n        description(dataView) {\n            const [, string] = getPascalStringFromDataView(dataView, 0);\n            return string;\n        }\n    },\n};\n\n// function parseDescriptor(dataView) {\n//     const DESCRIPTOR_VERSION_SIZE = 4;\n//     // This is a unicode string terminated with null. Unsure about the format though since in my example image it starts with 0x0000.\n//     const UNCLEAR_CLASS_ID_NAME_PART_SIZE = 6;\n//     let offset = 0;\n//     offset += DESCRIPTOR_VERSION_SIZE + UNCLEAR_CLASS_ID_NAME_PART_SIZE;\n//     const [classId, classIdSize] = getBlockValue(dataView, offset);\n//     offset += classIdSize;\n//     const numItems = Types.getLongAt(dataView, offset);\n//     offset += 4;\n//     const descriptor = {[classId]: {}};\n//     for (let i = 0; i < numItems; i++) {\n//         const [itemKey, itemKeySize] = getBlockValue(dataView, offset);\n//         offset += itemKeySize;\n//         const osTypeKey = getStringFromDataView(dataView, offset, 4);\n//         offset += 4;\n//         try {\n//             const {itemValue, itemSize} = getItemValue(dataView, offset, osTypeKey);\n//             offset += itemSize;\n//             descriptor[classId][ITEM_KEY_TERMS[itemKey] || itemKey] = itemValue;\n//         } catch (error) {\n//             // We can't recover from unknown OS type key since we don't know\n//             // where the next one starts.\n//             break;\n//         }\n//     }\n//     return JSON.stringify(descriptor);\n// }\n\n// function getBlockValue(dataView, offset, unicode = false) {\n//     const length = (unicode ? 2 : 1) * Types.getLongAt(dataView, offset) || 4;\n//     offset += 4;\n//     const value = (unicode ? getUnicodeStringFromDataView : getStringFromDataView)(dataView, offset, length);\n//     offset += length;\n//     return [value, 4 + length];\n// }\n\n// function getItemValue(dataView, offset, osTypeKey) {\n//     // Not all OSType keys are implemented yet because they are missing in the example image.\n//     if (osTypeKey === OsTypeKeys.OBJC) {\n//         const [classIdName, classIdNameSize] = getBlockValue(dataView, offset, true);\n//         offset += classIdNameSize;\n//         const [classId, classIdSize] = getBlockValue(dataView, offset);\n//         offset += classIdSize;\n//         const _offset = Types.getLongAt(dataView, offset);\n//         return {\n//             itemValue: {[classIdName]: {[classId]: _offset}},\n//             itemSize: classIdNameSize + classIdSize + 4\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.DOUB) {\n//         return {\n//             itemValue: parseDouble(dataView, offset),\n//             itemSize: 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.UNTF) {\n//         const unit = getStringFromDataView(dataView, offset, 4);\n//         return {\n//             itemValue: {unit, value: parseDouble(dataView, offset + 4)},\n//             itemSize: unit.length + 8\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.TEXT) {\n//         const length = 2 * Types.getLongAt(dataView, offset);\n//         offset += 4;\n//         const text = getUnicodeStringFromDataView(dataView, offset, length);\n//         return {\n//             itemValue: text,\n//             itemSize: 4 + length\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.BOOL) {\n//         return {\n//             itemValue: Types.getByteAt(dataView, offset) === 1,\n//             itemSize: 1\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.ENUM) {\n//         const [type, typeSize] = getBlockValue(dataView, offset);\n//         offset += typeSize;\n//         const [enumName, enumSize] = getBlockValue(dataView, offset);\n//         return {\n//             itemValue: {[type]: enumName},\n//             itemSize: typeSize + enumSize\n//         };\n//     }\n//     if (osTypeKey === OsTypeKeys.LONG) {\n//         return {\n//             itemValue: Types.getLongAt(dataView, offset),\n//             itemSize: 4\n//         };\n//     }\n//     throw new Error(`Unknown OS type key: ${osTypeKey}`);\n// }\n\n// function parseDouble(dataView, offset) {\n//     const BIAS = 1023;\n//     const sign = (Types.getByteAt(dataView, offset) & parseInt('10000000', 2)) === 0 ? 1 : -1;\n//     const exponent = ((Types.getShortAt(dataView, offset) & parseInt('0111111111110000', 2)) >> 4) - BIAS;\n//     const fractionHigh = padStart((Types.getLongAt(dataView, offset) & parseInt('00000000000011111111111111111111', 2)).toString(2), 20, '0');\n//     const fractionLow = padStart(Types.getLongAt(dataView, offset + 4).toString(2), 32, '0');\n//     const fraction = parseFloatRadix('1.' + fractionHigh + fractionLow, 2);\n//     return sign * fraction * Math.pow(2, exponent);\n// }\n\nfunction pathResource(dataView) {\n    const TYPE_SIZE = 2;\n    const types = {};\n    const paths = [];\n\n    for (let offset = 0; offset < dataView.byteLength; offset += TYPE_SIZE + PATH_RECORD_SIZE) {\n        const type = Types.getShortAt(dataView, offset);\n        if (PATH_RECORD_TYPES[type]) {\n            if (!types[type]) {\n                types[type] = PATH_RECORD_TYPES[type].description;\n            }\n            paths.push({\n                type,\n                path: PATH_RECORD_TYPES[type].path(dataView, offset + TYPE_SIZE)\n            });\n        }\n    }\n    return JSON.stringify({types, paths});\n}\n\nconst PATH_RECORD_TYPES = {\n    [PathRecordTypes.CLOSED_SUBPATH_LENGTH]: {\n        description: 'Closed subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_LINKED]: {\n        description: 'Closed subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.CLOSED_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Closed subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_LENGTH]: {\n        description: 'Open subpath length',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_LINKED]: {\n        description: 'Open subpath Bezier knot, linked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.OPEN_SUBPATH_BEZIER_UNLINKED]: {\n        description: 'Open subpath Bezier knot, unlinked',\n        path: parseBezierKnot\n    },\n    [PathRecordTypes.FILL_RULE]: {\n        description: 'Path fill rule',\n        path: () => []\n    },\n    [PathRecordTypes.INITIAL_FILL_RULE]: {\n        description: 'Initial fill rule',\n        path: (dataView, offset) => [Types.getShortAt(dataView, offset)]\n    },\n    [PathRecordTypes.CLIPBOARD]: {\n        description: 'Clipboard',\n        path: parseClipboard\n    }\n};\n\nfunction parseBezierKnot(dataView, offset) {\n    const PATH_POINT_SIZE = 8;\n    const path = [];\n    for (let i = 0; i < PATH_RECORD_SIZE; i += PATH_POINT_SIZE) {\n        path.push(parsePathPoint(dataView, offset + i));\n    }\n    return path;\n}\n\nfunction parsePathPoint(dataView, offset) {\n    const vertical = getFixedPointNumber(dataView, offset, 8);\n    const horizontal = getFixedPointNumber(dataView, offset + 4, 8);\n    return [horizontal, vertical];\n}\n\nfunction parseClipboard(dataView, offset) {\n    return [\n        [\n            getFixedPointNumber(dataView, offset, 8), // Top\n            getFixedPointNumber(dataView, offset + 4, 8), // Left\n            getFixedPointNumber(dataView, offset + 8, 8), // Botton\n            getFixedPointNumber(dataView, offset + 12, 8), // Right\n        ],\n        getFixedPointNumber(dataView, offset + 16, 8) // Resolution\n    ];\n}\n\nfunction getFixedPointNumber(dataView, offset, binaryPoint) {\n    const number = Types.getLongAt(dataView, offset);\n\n    const sign = (number >>> 31) === 0 ? 1 : -1;\n    const integer = (number & 0x7f000000) >>> (32 - binaryPoint);\n    const fraction = number & parseInt(strRepeat('1', 32 - binaryPoint), 2);\n\n    return sign * parseFloatRadix(integer.toString(2) + '.' + padStart(fraction.toString(2), 32 - binaryPoint, '0'), 2);\n}\n\n// Item key terminology: https://psd-tools.readthedocs.io/en/latest/reference/psd_tools.terminology.html\n// Are these correct? There are collisions that are commented out. A lot of code for little gain?\n// const ITEM_KEY_TERMS = {\n//     'A   ': 'A',\n//     'Adjs': 'Adjustment',\n//     'Algd': 'Aligned',\n//     'Algn': 'Alignment',\n//     'AllE': 'AllExcept',\n//     'All ': 'AllPS',\n//     'AlTl': 'AllToolOptions',\n//     'AChn': 'AlphaChannelOptions',\n//     'AlpC': 'AlphaChannels',\n//     'AmbB': 'AmbientBrightness',\n//     'AmbC': 'AmbientColor',\n//     'Amnt': 'Amount',\n//     'AmMx': 'AmplitudeMax',\n//     'AmMn': 'AmplitudeMin',\n//     'Anch': 'Anchor',\n//     'Angl': 'Angle',\n//     'Ang1': 'Angle1',\n//     'Ang2': 'Angle2',\n//     'Ang3': 'Angle3',\n//     'Ang4': 'Angle4',\n//     'AntA': 'AntiAlias',\n//     'Appe': 'Append',\n//     'Aply': 'Apply',\n//     'Ar  ': 'Area',\n//     'Arrw': 'Arrowhead',\n//     'As  ': 'As',\n//     'Asst': 'AssetBin',\n//     'AssC': 'AssumedCMYK',\n//     'AssG': 'AssumedGray',\n//     'AssR': 'AssumedRGB',\n//     'At  ': 'At',\n//     'Auto': 'Auto',\n//     'AuCo': 'AutoContrast',\n//     'Atrs': 'AutoErase',\n//     'AtKr': 'AutoKern',\n//     'AtUp': 'AutoUpdate',\n//     'Axis': 'Axis',\n//     'B   ': 'B',\n//     'Bckg': 'Background',\n//     'BckC': 'BackgroundColor',\n//     'BckL': 'BackgroundLevel',\n//     'Bwd ': 'Backward',\n//     'Blnc': 'Balance',\n//     'Bsln': 'BaselineShift',\n//     'BpWh': 'BeepWhenDone',\n//     'BgnR': 'BeginRamp',\n//     'BgnS': 'BeginSustain',\n//     'bvlD': 'BevelDirection',\n//     'ebbl': 'BevelEmboss',\n//     'bvlS': 'BevelStyle',\n//     'bvlT': 'BevelTechnique',\n//     'BgNH': 'BigNudgeH',\n//     'BgNV': 'BigNudgeV',\n//     'BtDp': 'BitDepth',\n//     'Blck': 'Black',\n//     'BlcC': 'BlackClip',\n//     'Blcn': 'BlackGeneration',\n//     'BlcG': 'BlackGenerationCurve',\n//     'BlcI': 'BlackIntensity',\n//     'BlcL': 'BlackLevel',\n//     // 'BlcL': 'BlackLimit',\n//     'Bld ': 'Bleed',\n//     'Blnd': 'BlendRange',\n//     'Bl  ': 'Blue',\n//     'BlBl': 'BlueBlackPoint',\n//     'blueFloat': 'BlueFloat',\n//     'BlGm': 'BlueGamma',\n//     'BlWh': 'BlueWhitePoint',\n//     'BlX ': 'BlueX',\n//     'BlY ': 'BlueY',\n//     'blur': 'Blur',\n//     'BlrM': 'BlurMethod',\n//     'BlrQ': 'BlurQuality',\n//     'Bk  ': 'Book',\n//     'BrdT': 'BorderThickness',\n//     'Btom': 'Bottom',\n//     'Brgh': 'Brightness',\n//     'BrsD': 'BrushDetail',\n//     'BrsS': 'BrushSize',\n//     'BrsT': 'BrushType',\n//     'Brsh': 'Brushes',\n//     'BmpA': 'BumpAmplitude',\n//     'BmpC': 'BumpChannel',\n//     'By  ': 'By',\n//     'Byln': 'Byline',\n//     'BylT': 'BylineTitle',\n//     'BytO': 'ByteOrder',\n//     'CMYS': 'CMYKSetup',\n//     'CchP': 'CachePrefs',\n//     'Clcl': 'Calculation',\n//     'Clbr': 'CalibrationBars',\n//     'Cptn': 'Caption',\n//     'CptW': 'CaptionWriter',\n//     'Ctgr': 'Category',\n//     'ClSz': 'CellSize',\n//     'Cntr': 'Center',\n//     'CntC': 'CenterCropMarks',\n//     'ChlA': 'ChalkArea',\n//     'Chnl': 'Channel',\n//     'ChMx': 'ChannelMatrix',\n//     'ChnN': 'ChannelName',\n//     'Chns': 'Channels',\n//     'ChnI': 'ChannelsInterleaved',\n//     'ChAm': 'CharcoalAmount',\n//     'ChrA': 'CharcoalArea',\n//     'Ckmt': 'ChokeMatte',\n//     'ChFX': 'ChromeFX',\n//     'City': 'City',\n//     'ClrA': 'ClearAmount',\n//     'ClPt': 'ClippingPath',\n//     'ClpP': 'ClippingPathEPS',\n//     'ClpF': 'ClippingPathFlatness',\n//     'ClpI': 'ClippingPathIndex',\n//     'Clpg': 'ClippingPathInfo',\n//     'ClnS': 'CloneSource',\n//     'Clsp': 'ClosedSubpath',\n//     'Clr ': 'Color',\n//     'Clrh': 'ColorChannels',\n//     'ClrC': 'ColorCorrection',\n//     'ClrI': 'ColorIndicates',\n//     'ClMg': 'ColorManagement',\n//     'Clrr': 'ColorPickerPrefs',\n//     'ClrS': 'ColorSpace',\n//     'ClrT': 'ColorTable',\n//     'Clrz': 'Colorize',\n//     'Clrs': 'Colors',\n//     'ClrL': 'ColorsList',\n//     'ClmW': 'ColumnWidth',\n//     'CmdK': 'CommandKey',\n//     'Cmpn': 'Compensation',\n//     'Cmpr': 'Compression',\n//     'Cncv': 'Concavity',\n//     'Cndt': 'Condition',\n//     'Cnst': 'Constant',\n//     // 'Cnst': 'Constrain',\n//     'CnsP': 'ConstrainProportions',\n//     'Cfov': 'ConstructionFOV',\n//     'Cntg': 'Contiguous',\n//     'Cntn': 'Continue',\n//     'Cnty': 'Continuity',\n//     'ShpC': 'ContourType',\n//     // 'Cntr': 'Contrast',\n//     'Cnvr': 'Convert',\n//     'Cpy ': 'Copy',\n//     'Cpyr': 'Copyright',\n//     'CprN': 'CopyrightNotice',\n//     'CrnC': 'CornerCropMarks',\n//     'Cnt ': 'Count',\n//     'CntN': 'CountryName',\n//     'CrcB': 'CrackBrightness',\n//     'CrcD': 'CrackDepth',\n//     'CrcS': 'CrackSpacing',\n//     'blfl': 'CreateLayersFromLayerFX',\n//     'Crdt': 'Credit',\n//     'Crss': 'Crossover',\n//     'Crnt': 'Current',\n//     'CrnH': 'CurrentHistoryState',\n//     'CrnL': 'CurrentLight',\n//     'CrnT': 'CurrentToolOptions',\n//     'Crv ': 'Curve',\n//     'CrvF': 'CurveFile',\n//     'Cstm': 'Custom',\n//     'CstF': 'CustomForced',\n//     'CstM': 'CustomMatte',\n//     'CstP': 'CustomPalette',\n//     'Cyn ': 'Cyan',\n//     'DCS ': 'DCS',\n//     'DPXf': 'DPXFormat',\n//     'DrkI': 'DarkIntensity',\n//     'Drkn': 'Darkness',\n//     'DtCr': 'DateCreated',\n//     'Dt ': 'Datum',\n//     'Dfnt': 'Definition',\n//     'Dnst': 'Density',\n//     'Dpth': 'Depth',\n//     'Dstl': 'DestBlackMax',\n//     'DstB': 'DestBlackMin',\n//     'Dstt': 'DestWhiteMax',\n//     'DstW': 'DestWhiteMin',\n//     'DstM': 'DestinationMode',\n//     'Dtl ': 'Detail',\n//     'Dmtr': 'Diameter',\n//     'DffD': 'DiffusionDither',\n//     'Drct': 'Direction',\n//     'DrcB': 'DirectionBalance',\n//     'DspF': 'DisplaceFile',\n//     'DspM': 'DisplacementMap',\n//     'DspP': 'DisplayPrefs',\n//     'Dstn': 'Distance',\n//     // 'Dstr': 'Distortion',\n//     // 'Dstr': 'Distribution',\n//     'Dthr': 'Dither',\n//     'DthA': 'DitherAmount',\n//     'Dthp': 'DitherPreserve',\n//     'Dthq': 'DitherQuality',\n//     'DocI': 'DocumentID',\n//     'DtGn': 'DotGain',\n//     'DtGC': 'DotGainCurves',\n//     'DrSh': 'DropShadow',\n//     'Dplc': 'Duplicate',\n//     'DnmC': 'DynamicColorSliders',\n//     'Edg ': 'Edge',\n//     'EdgB': 'EdgeBrightness',\n//     'EdgF': 'EdgeFidelity',\n//     'EdgI': 'EdgeIntensity',\n//     'EdgS': 'EdgeSimplicity',\n//     'EdgT': 'EdgeThickness',\n//     'EdgW': 'EdgeWidth',\n//     'Effc': 'Effect',\n//     'EmbC': 'EmbedCMYK',\n//     'EmbG': 'EmbedGray',\n//     'EmbL': 'EmbedLab',\n//     'EmbP': 'EmbedProfiles',\n//     'EmbR': 'EmbedRGB',\n//     'EmlD': 'EmulsionDown',\n//     'EGst': 'EnableGestures',\n//     'enab': 'Enabled',\n//     'Encd': 'Encoding',\n//     'End ': 'End',\n//     'EndA': 'EndArrowhead',\n//     'EndR': 'EndRamp',\n//     'EndS': 'EndSustain',\n//     'Engn': 'Engine',\n//     'ErsT': 'EraseToHistory',\n//     'ErsK': 'EraserKind',\n//     'ExcP': 'ExactPoints',\n//     'Expr': 'Export',\n//     'ExpC': 'ExportClipboard',\n//     'Exps': 'Exposure',\n//     'Extd': 'Extend',\n//     'EQlt': 'ExtendedQuality',\n//     'Extn': 'Extension',\n//     'ExtQ': 'ExtensionsQuery',\n//     'ExtD': 'ExtrudeDepth',\n//     'ExtM': 'ExtrudeMaskIncomplete',\n//     'ExtR': 'ExtrudeRandom',\n//     'ExtS': 'ExtrudeSize',\n//     'ExtF': 'ExtrudeSolidFace',\n//     'ExtT': 'ExtrudeType',\n//     'EyDr': 'EyeDropperSample',\n//     'FxCm': 'FPXCompress',\n//     'FxQl': 'FPXQuality',\n//     'FxSz': 'FPXSize',\n//     'FxVw': 'FPXView',\n//     'FdT ': 'FadeTo',\n//     'FdtS': 'FadeoutSteps',\n//     'FlOf': 'Falloff',\n//     'Fthr': 'Feather',\n//     'FbrL': 'FiberLength',\n//     'File': 'File',\n//     'FlCr': 'FileCreator',\n//     'FlIn': 'FileInfo',\n//     'FilR': 'FileReference',\n//     'FlSP': 'FileSavePrefs',\n//     'FlTy': 'FileType',\n//     'flst': 'FilesList',\n//     'Fl  ': 'Fill',\n//     'FlCl': 'FillColor',\n//     'FlNt': 'FillNeutral',\n//     'FlPd': 'FilterLayerPersistentData',\n//     'FlRs': 'FilterLayerRandomSeed',\n//     'Fngr': 'Fingerpainting',\n//     'FlrC': 'FlareCenter',\n//     'Fltn': 'Flatness',\n//     'Fltt': 'Flatten',\n//     'FlpV': 'FlipVertical',\n//     'Fcs ': 'Focus',\n//     'Fldr': 'Folders',\n//     'FntD': 'FontDesignAxes',\n//     'FntV': 'FontDesignAxesVectors',\n//     'FntN': 'FontName',\n//     'Scrp': 'FontScript',\n//     'FntS': 'FontStyleName',\n//     'FntT': 'FontTechnology',\n//     'FrcC': 'ForcedColors',\n//     'FrgC': 'ForegroundColor',\n//     'FrgL': 'ForegroundLevel',\n//     'Fmt ': 'Format',\n//     'Fwd ': 'Forward',\n//     'FrFX': 'FrameFX',\n//     'FrmW': 'FrameWidth',\n//     'FTcs': 'FreeTransformCenterState',\n//     'Frqn': 'Frequency',\n//     'From': 'From',\n//     'FrmB': 'FromBuiltin',\n//     'FrmM': 'FromMode',\n//     'FncK': 'FunctionKey',\n//     'Fzns': 'Fuzziness',\n//     'GCR ': 'GCR',\n//     'GFPT': 'GIFColorFileType',\n//     'GFCL': 'GIFColorLimit',\n//     'GFEC': 'GIFExportCaption',\n//     'GFMI': 'GIFMaskChannelIndex',\n//     'GFMV': 'GIFMaskChannelInverted',\n//     'GFPF': 'GIFPaletteFile',\n//     'GFPL': 'GIFPaletteType',\n//     'GFCS': 'GIFRequiredColorSpaceType',\n//     'GFIT': 'GIFRowOrderType',\n//     'GFTC': 'GIFTransparentColor',\n//     'GFTB': 'GIFTransparentIndexBlue',\n//     'GFTG': 'GIFTransparentIndexGreen',\n//     'GFTR': 'GIFTransparentIndexRed',\n//     'GFBM': 'GIFUseBestMatch',\n//     'Gmm ': 'Gamma',\n//     'GmtW': 'GamutWarning',\n//     'GnrP': 'GeneralPrefs',\n//     'gblA': 'GlobalAngle',\n//     'gagl': 'GlobalLightingAngle',\n//     'Glos': 'Gloss',\n//     'GlwA': 'GlowAmount',\n//     'GlwT': 'GlowTechnique',\n//     'Grad': 'Gradient',\n//     'Grdf': 'GradientFill',\n//     // 'Grn ': 'Grain',\n//     'Grnt': 'GrainType',\n//     'Grns': 'Graininess',\n//     'Gry ': 'Gray',\n//     'GrBh': 'GrayBehavior',\n//     'GrSt': 'GraySetup',\n//     'Grn ': 'Green',\n//     'GrnB': 'GreenBlackPoint',\n//     'greenFloat': 'GreenFloat',\n//     'GrnG': 'GreenGamma',\n//     'GrnW': 'GreenWhitePoint',\n//     'GrnX': 'GreenX',\n//     'GrnY': 'GreenY',\n//     'GrdC': 'GridColor',\n//     'Grds': 'GridCustomColor',\n//     'GrdM': 'GridMajor',\n//     'Grdn': 'GridMinor',\n//     'GrdS': 'GridStyle',\n//     'Grdt': 'GridUnits',\n//     'Grup': 'Group',\n//     'GrtW': 'GroutWidth',\n//     'GrwS': 'GrowSelection',\n//     'Gdes': 'Guides',\n//     'GdsC': 'GuidesColor',\n//     'Gdss': 'GuidesCustomColor',\n//     'GdPr': 'GuidesPrefs',\n//     'GdsS': 'GuidesStyle',\n//     'GttW': 'GutterWidth',\n//     'HlfF': 'HalftoneFile',\n//     'HlfS': 'HalftoneScreen',\n//     'HlSz': 'HalftoneSize',\n//     'Hlfp': 'HalftoneSpec',\n//     'Hrdn': 'Hardness',\n//     'HCdH': 'HasCmdHPreference',\n//     'Hdr ': 'Header',\n//     'Hdln': 'Headline',\n//     'Hght': 'Height',\n//     'HghA': 'HighlightArea',\n//     'hglC': 'HighlightColor',\n//     'HghL': 'HighlightLevels',\n//     'hglM': 'HighlightMode',\n//     'hglO': 'HighlightOpacity',\n//     'HghS': 'HighlightStrength',\n//     'HstB': 'HistoryBrushSource',\n//     'HstP': 'HistoryPrefs',\n//     'HsSS': 'HistoryStateSource',\n//     'HsSt': 'HistoryStates',\n//     'Hrzn': 'Horizontal',\n//     'HrzS': 'HorizontalScale',\n//     'HstN': 'HostName',\n//     'HstV': 'HostVersion',\n//     'H   ': 'Hue',\n//     'ICCE': 'ICCEngine',\n//     'ICCt': 'ICCSetupName',\n//     'Idnt': 'ID',\n//     'Idle': 'Idle',\n//     'ImgB': 'ImageBalance',\n//     'Impr': 'Import',\n//     'Imps': 'Impressionist',\n//     'In  ': 'In',\n//     'c@#^': 'Inherits',\n//     'InkC': 'InkColors',\n//     'Inks': 'Inks',\n//     'IrGl': 'InnerGlow',\n//     'glwS': 'InnerGlowSource',\n//     'IrSh': 'InnerShadow',\n//     'Inpt': 'Input',\n//     'kIBP': 'InputBlackPoint',\n//     'Inmr': 'InputMapRange',\n//     'Inpr': 'InputRange',\n//     'kIWP': 'InputWhitePoint',\n//     'Intn': 'Intensity',\n//     'Inte': 'Intent',\n//     'IntH': 'InterfaceBevelHighlight',\n//     'Intv': 'InterfaceBevelShadow',\n//     'IntB': 'InterfaceBlack',\n//     'Intd': 'InterfaceBorder',\n//     'Intk': 'InterfaceButtonDarkShadow',\n//     'Intt': 'InterfaceButtonDownFill',\n//     'InBF': 'InterfaceButtonUpFill',\n//     'ICBL': 'InterfaceColorBlue2',\n//     'ICBH': 'InterfaceColorBlue32',\n//     'ICGL': 'InterfaceColorGreen2',\n//     'ICGH': 'InterfaceColorGreen32',\n//     'ICRL': 'InterfaceColorRed2',\n//     'ICRH': 'InterfaceColorRed32',\n//     'IntI': 'InterfaceIconFillActive',\n//     'IntF': 'InterfaceIconFillDimmed',\n//     'Intc': 'InterfaceIconFillSelected',\n//     'Intm': 'InterfaceIconFrameActive',\n//     // 'Intr': 'InterfaceIconFrameDimmed',\n//     'IntS': 'InterfaceIconFrameSelected',\n//     'IntP': 'InterfacePaletteFill',\n//     'IntR': 'InterfaceRed',\n//     'IntT': 'InterfaceToolTipBackground',\n//     'ITTT': 'InterfaceToolTipText',\n//     'ITBg': 'InterfaceTransparencyBackground',\n//     'ITFg': 'InterfaceTransparencyForeground',\n//     'IntW': 'InterfaceWhite',\n//     // 'Intr': 'Interlace',\n//     'IntC': 'InterlaceCreateType',\n//     'IntE': 'InterlaceEliminateType',\n//     // 'Intr': 'Interpolation',\n//     'IntM': 'InterpolationMethod',\n//     'Invr': 'Invert',\n//     'InvM': 'InvertMask',\n//     'InvS': 'InvertSource2',\n//     'InvT': 'InvertTexture',\n//     'IsDr': 'IsDirty',\n//     'ItmI': 'ItemIndex',\n//     'JPEQ': 'JPEGQuality',\n//     'Krng': 'Kerning',\n//     'Kywd': 'Keywords',\n//     'Knd ': 'Kind',\n//     'LTnm': 'LUTAnimation',\n//     'LZWC': 'LZWCompression',\n//     'Lbls': 'Labels',\n//     'Lnds': 'Landscape',\n//     'LstT': 'LastTransform',\n//     'Lyr ': 'Layer',\n//     'Lefx': 'LayerEffects',\n//     'lfxv': 'LayerFXVisible',\n//     'LyrI': 'LayerID',\n//     'LyrN': 'LayerName',\n//     'Lyrs': 'Layers',\n//     'Ldng': 'Leading',\n//     'Left': 'Left',\n//     'lSNs': 'LegacySerialString',\n//     // 'Lngt': 'Length',\n//     'Lns ': 'Lens',\n//     'Lvl ': 'Level',\n//     'Lvls': 'Levels',\n//     'LgDr': 'LightDark',\n//     'LghD': 'LightDirection',\n//     'LghI': 'LightIntensity',\n//     'LghP': 'LightPosition',\n//     'LghS': 'LightSource',\n//     'LghT': 'LightType',\n//     'LghG': 'LightenGrout',\n//     'Lght': 'Lightness',\n//     'Line': 'Line',\n//     'lnkE': 'LinkEnable',\n//     'LnkL': 'LinkedLayerIDs',\n//     'Lald': 'LocalLightingAltitude',\n//     'lagl': 'LocalLightingAngle',\n//     'LclR': 'LocalRange',\n//     'Lctn': 'Location',\n//     'Log ': 'Log',\n//     'kLog': 'Logarithmic',\n//     'LwCs': 'LowerCase',\n//     'Lmnc': 'Luminance',\n//     'Mgnt': 'Magenta',\n//     'MkVs': 'MakeVisible',\n//     'Mfov': 'ManipulationFOV',\n//     'MpBl': 'MapBlack',\n//     'Mpng': 'Mapping',\n//     'MpgS': 'MappingShape',\n//     'Mtrl': 'Material',\n//     'Mtrx': 'Matrix',\n//     'MttC': 'MatteColor',\n//     'Mxm ': 'Maximum',\n//     'MxmS': 'MaximumStates',\n//     'MmrU': 'MemoryUsagePercent',\n//     'Mrge': 'Merge',\n//     'Mrgd': 'Merged',\n//     'Msge': 'Message',\n//     'Mthd': 'Method',\n//     'MztT': 'MezzotintType',\n//     'Mdpn': 'Midpoint',\n//     'MdtL': 'MidtoneLevels',\n//     'Mnm ': 'Minimum',\n//     'MsmC': 'MismatchCMYK',\n//     'MsmG': 'MismatchGray',\n//     'MsmR': 'MismatchRGB',\n//     'Md  ': 'Mode',\n//     'Mnch': 'Monochromatic',\n//     'MvT ': 'MoveTo',\n//     'Nm  ': 'Name',\n//     'Ngtv': 'Negative',\n//     'Nw  ': 'New',\n//     'Nose': 'Noise',\n//     'NnIm': 'NonImageData',\n//     'NnLn': 'NonLinear',\n//     'null': 'Null',\n//     'Nm L': 'NumLights',\n//     'Nmbr': 'Number',\n//     'NCch': 'NumberOfCacheLevels',\n//     'NC64': 'NumberOfCacheLevels64',\n//     'NmbO': 'NumberOfChannels',\n//     'NmbC': 'NumberOfChildren',\n//     'NmbD': 'NumberOfDocuments',\n//     'NmbG': 'NumberOfGenerators',\n//     // 'NmbL': 'NumberOfLayers',\n//     // 'NmbL': 'NumberOfLevels',\n//     'NmbP': 'NumberOfPaths',\n//     'NmbR': 'NumberOfRipples',\n//     'NmbS': 'NumberOfSiblings',\n//     'ObjN': 'ObjectName',\n//     'Ofst': 'Offset',\n//     'Sftt': 'OldSmallFontType',\n//     'On  ': 'On',\n//     'Opct': 'Opacity',\n//     'Optm': 'Optimized',\n//     'Ornt': 'Orientation',\n//     'OrgH': 'OriginalHeader',\n//     'OrgT': 'OriginalTransmissionReference',\n//     'OthC': 'OtherCursors',\n//     'OrGl': 'OuterGlow',\n//     'Otpt': 'Output',\n//     'kOBP': 'OutputBlackPoint',\n//     'kOWP': 'OutputWhitePoint',\n//     'OvrC': 'OverprintColors',\n//     'OvrO': 'OverrideOpen',\n//     'ObrP': 'OverridePrinter',\n//     'Ovrd': 'OverrideSave',\n//     'PNGf': 'PNGFilter',\n//     'PGIT': 'PNGInterlaceType',\n//     'PMpf': 'PageFormat',\n//     'PgNm': 'PageNumber',\n//     'PgPs': 'PagePosition',\n//     'PgSt': 'PageSetup',\n//     'PnCK': 'PaintCursorKind',\n//     'PntT': 'PaintType',\n//     'PntC': 'PaintingCursors',\n//     'Plt ': 'Palette',\n//     'PltF': 'PaletteFile',\n//     'PprB': 'PaperBrightness',\n//     'PrIn': 'ParentIndex',\n//     'PrNm': 'ParentName',\n//     'Path': 'Path',\n//     'PthC': 'PathContents',\n//     'PthN': 'PathName',\n//     'Pttn': 'Pattern',\n//     'Pncl': 'PencilWidth',\n//     'Prsp': 'PerspectiveIndex',\n//     'Phsp': 'Phosphors',\n//     'PckI': 'PickerID',\n//     'Pckr': 'PickerKind',\n//     'PPSz': 'PixelPaintSize',\n//     'Pltf': 'Platform',\n//     'PlgF': 'PluginFolder',\n//     'PlgP': 'PluginPrefs',\n//     'Pts ': 'Points',\n//     'Pstn': 'Position',\n//     'PstS': 'PostScriptColor',\n//     'Pstr': 'Posterization',\n//     'PrdC': 'PredefinedColors',\n//     'PrfB': 'PreferBuiltin',\n//     'Prfr': 'Preferences',\n//     'PrsA': 'PreserveAdditional',\n//     'PrsL': 'PreserveLuminosity',\n//     'PrsT': 'PreserveTransparency',\n//     'Prs ': 'Pressure',\n//     'Prvw': 'Preview',\n//     'PrvK': 'PreviewCMYK',\n//     'PrvF': 'PreviewFullSize',\n//     'PrvI': 'PreviewIcon',\n//     'PrvM': 'PreviewMacThumbnail',\n//     'PrvW': 'PreviewWinThumbnail',\n//     'PrvQ': 'PreviewsQuery',\n//     'PMps': 'PrintSettings',\n//     'PrfS': 'ProfileSetup',\n//     'PrvS': 'ProvinceState',\n//     'Qlty': 'Quality',\n//     'QucM': 'QuickMask',\n//     'RGBS': 'RGBSetup',\n//     'Rds ': 'Radius',\n//     'RndS': 'RandomSeed',\n//     'Rt  ': 'Ratio',\n//     'Rcnf': 'RecentFiles',\n//     'Rd  ': 'Red',\n//     'RdBl': 'RedBlackPoint',\n//     'redFloat': 'RedFloat',\n//     'RdGm': 'RedGamma',\n//     'RdWh': 'RedWhitePoint',\n//     'RdX ': 'RedX',\n//     'RdY ': 'RedY',\n//     'RgsM': 'RegistrationMarks',\n//     'Rltv': 'Relative',\n//     'Rlf ': 'Relief',\n//     'Rfid': 'RenderFidelity',\n//     'Rsmp': 'Resample',\n//     'RWOZ': 'ResizeWindowsOnZoom',\n//     'Rslt': 'Resolution',\n//     'RsrI': 'ResourceID',\n//     'Rspn': 'Response',\n//     'RtnH': 'RetainHeader',\n//     'Rvrs': 'Reverse',\n//     'Rght': 'Right',\n//     'RplM': 'RippleMagnitude',\n//     'RplS': 'RippleSize',\n//     'Rtt ': 'Rotate',\n//     'Rndn': 'Roundness',\n//     'RlrH': 'RulerOriginH',\n//     'RlrV': 'RulerOriginV',\n//     'RlrU': 'RulerUnits',\n//     // 'Strt': 'Saturation',\n//     'SvAn': 'SaveAndClose',\n//     'SvCm': 'SaveComposite',\n//     'PltL': 'SavePaletteLocations',\n//     'SvPt': 'SavePaths',\n//     'SvPy': 'SavePyramids',\n//     'Svng': 'Saving',\n//     'Scl ': 'Scale',\n//     'SclH': 'ScaleHorizontal',\n//     'SclV': 'ScaleVertical',\n//     'Scln': 'Scaling',\n//     'Scns': 'Scans',\n//     'ScrD': 'ScratchDisks',\n//     'ScrF': 'ScreenFile',\n//     'ScrT': 'ScreenType',\n//     'Sprt': 'Separations',\n//     'SrlS': 'SerialString',\n//     // 'ShdI': 'ShadingIntensity',\n//     'ShdN': 'ShadingNoise',\n//     'ShdS': 'ShadingShape',\n//     'sdwC': 'ShadowColor',\n//     // 'ShdI': 'ShadowIntensity',\n//     'ShdL': 'ShadowLevels',\n//     'sdwM': 'ShadowMode',\n//     'sdwO': 'ShadowOpacity',\n//     'Shp ': 'Shape',\n//     'Shrp': 'Sharpness',\n//     'ShrE': 'ShearEd',\n//     'ShrP': 'ShearPoints',\n//     'ShrS': 'ShearSt',\n//     'ShfK': 'ShiftKey',\n//     'ShKT': 'ShiftKeyToolSwitch',\n//     'ShrN': 'ShortNames',\n//     'ShwE': 'ShowEnglishFontNames',\n//     'SwMC': 'ShowMenuColors',\n//     'ShwT': 'ShowToolTips',\n//     'ShTr': 'ShowTransparency',\n//     'Sz  ': 'SizeKey',\n//     'Skew': 'Skew',\n//     'Sfts': 'SmallFontType',\n//     'SmBM': 'SmartBlurMode',\n//     'SmBQ': 'SmartBlurQuality',\n//     'Smoo': 'Smooth',\n//     'Smth': 'Smoothness',\n//     'SnpI': 'SnapshotInitial',\n//     'SfCl': 'SoftClip',\n//     'Sftn': 'Softness',\n//     'SoFi': 'SolidFill',\n//     'Srce': 'Source',\n//     'Src2': 'Source2',\n//     'SrcM': 'SourceMode',\n//     'Spcn': 'Spacing',\n//     'SpcI': 'SpecialInstructions',\n//     'SphM': 'SpherizeMode',\n//     'Spot': 'Spot',\n//     'SprR': 'SprayRadius',\n//     'SqrS': 'SquareSize',\n//     'Srcl': 'SrcBlackMax',\n//     'SrcB': 'SrcBlackMin',\n//     'Srcm': 'SrcWhiteMax',\n//     'SrcW': 'SrcWhiteMin',\n//     // 'Strt': 'Start',\n//     'StrA': 'StartArrowhead',\n//     'Stte': 'State',\n//     'srgh': 'Strength',\n//     'srgR': 'StrengthRatio',\n//     'Strg': 'Strength_PLUGIN',\n//     'StDt': 'StrokeDetail',\n//     'SDir': 'StrokeDirection',\n//     'StrL': 'StrokeLength',\n//     'StrP': 'StrokePressure',\n//     'StrS': 'StrokeSize',\n//     'StrW': 'StrokeWidth',\n//     'Styl': 'Style',\n//     'Stys': 'Styles',\n//     'StlC': 'StylusIsColor',\n//     'StlO': 'StylusIsOpacity',\n//     'StlP': 'StylusIsPressure',\n//     'StlS': 'StylusIsSize',\n//     'SbpL': 'SubPathList',\n//     'SplC': 'SupplementalCategories',\n//     'SstI': 'SystemInfo',\n//     'SstP': 'SystemPalette',\n//     // 'null': 'Target',\n//     'Trgp': 'TargetPath',\n//     'TrgP': 'TargetPathIndex',\n//     // 'Lngt': 'TermLength',\n//     'Txt ': 'Text',\n//     // 'TxtC': 'TextClickPoint',\n//     'TxtD': 'TextData',\n//     'TxtS': 'TextStyle',\n//     'Txtt': 'TextStyleRange',\n//     'Txtr': 'Texture',\n//     // 'TxtC': 'TextureCoverage',\n//     'TxtF': 'TextureFile',\n//     'TxtT': 'TextureType',\n//     'Thsh': 'Threshold',\n//     'TlNm': 'TileNumber',\n//     'TlOf': 'TileOffset',\n//     'TlSz': 'TileSize',\n//     'Ttl ': 'Title',\n//     'T   ': 'To',\n//     'TBl ': 'ToBuiltin',\n//     'ToLk': 'ToLinked',\n//     'TMd ': 'ToMode',\n//     'TglO': 'ToggleOthers',\n//     'Tlrn': 'Tolerance',\n//     'Top ': 'Top',\n//     'TtlL': 'TotalLimit',\n//     'Trck': 'Tracking',\n//     'TrnF': 'TransferFunction',\n//     // 'TrnS': 'TransferSpec',\n//     'Trns': 'Transparency',\n//     // 'TrnG': 'TransparencyGrid',\n//     'TrnC': 'TransparencyGridColors',\n//     // 'TrnG': 'TransparencyGridSize',\n//     'TrnP': 'TransparencyPrefs',\n//     // 'TrnS': 'TransparencyShape',\n//     'TrnI': 'TransparentIndex',\n//     'TrnW': 'TransparentWhites',\n//     'Twst': 'Twist',\n//     'Type': 'Type',\n//     'UC  ': 'UCA',\n//     'URL ': 'URL',\n//     'UndA': 'UndefinedArea',\n//     'Undl': 'Underline',\n//     'UntP': 'UnitsPrefs',\n//     'Untl': 'Untitled',\n//     'UppY': 'UpperY',\n//     'Urgn': 'Urgency',\n//     'AcrS': 'UseAccurateScreens',\n//     'AdPl': 'UseAdditionalPlugins',\n//     'UsCc': 'UseCacheForHistograms',\n//     'UsCr': 'UseCurves',\n//     'UsDf': 'UseDefault',\n//     'uglg': 'UseGlobalAngle',\n//     'UsIC': 'UseICCProfile',\n//     'UsMs': 'UseMask',\n//     'UsrM': 'UserMaskEnabled',\n//     'Usrs': 'UserMaskLinked',\n//     'Usng': 'Using',\n//     'Vl  ': 'Value',\n//     'Vrnc': 'Variance',\n//     'Vct0': 'Vector0',\n//     'Vct1': 'Vector1',\n//     'VctC': 'VectorColor',\n//     'VrsF': 'VersionFix',\n//     'VrsM': 'VersionMajor',\n//     'VrsN': 'VersionMinor',\n//     'Vrtc': 'Vertical',\n//     'VrtS': 'VerticalScale',\n//     'Vdlp': 'VideoAlpha',\n//     'Vsbl': 'Visible',\n//     'WtcS': 'WatchSuspension',\n//     'watr': 'Watermark',\n//     'Wvtp': 'WaveType',\n//     'WLMx': 'WavelengthMax',\n//     'WLMn': 'WavelengthMin',\n//     'WbdP': 'WebdavPrefs',\n//     'Wtdg': 'WetEdges',\n//     'What': 'What',\n//     'WhtC': 'WhiteClip',\n//     'WhtI': 'WhiteIntensity',\n//     'WhHi': 'WhiteIsHigh',\n//     'WhtL': 'WhiteLevel',\n//     'WhtP': 'WhitePoint',\n//     'WhPt': 'WholePath',\n//     'Wdth': 'Width',\n//     'WndM': 'WindMethod',\n//     'With': 'With',\n//     'WrPt': 'WorkPath',\n//     'WrkP': 'WorkPathIndex',\n//     'X   ': 'X',\n//     'Y   ': 'Y',\n//     'Ylw ': 'Yellow',\n//     'ZZTy': 'ZigZagType',\n//     'Alis': '_3DAntiAlias',\n// };\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: https://www.adobe.com/devnet-apps/photoshop/fileformatashtml/\n\nimport {getDataView, getStringFromDataView, getPascalStringFromDataView} from './utils.js';\nimport Types from './types.js';\nimport TagNames from './photoshop-tag-names.js';\n\nexport default {\n    read\n};\n\nconst SIGNATURE = '8BIM';\nconst TAG_ID_SIZE = 2;\nconst RESOURCE_LENGTH_SIZE = 4;\n\nconst SIGNATURE_SIZE = SIGNATURE.length;\n\nfunction read(bytes, includeUnknown) {\n    const dataView = getDataView(new Uint8Array(bytes).buffer);\n    const tags = {};\n    let offset = 0;\n\n    while (offset < bytes.length) {\n        const signature = getStringFromDataView(dataView, offset, SIGNATURE_SIZE);\n        offset += SIGNATURE_SIZE;\n        const tagId = Types.getShortAt(dataView, offset);\n        offset += TAG_ID_SIZE;\n        const {tagName, tagNameSize} = getTagName(dataView, offset);\n        offset += tagNameSize;\n        const resourceSize = Types.getLongAt(dataView, offset);\n        offset += RESOURCE_LENGTH_SIZE;\n        if (signature === SIGNATURE) {\n            const valueDataView = getDataView(dataView.buffer, offset, resourceSize);\n            const tag = {\n                id: tagId,\n                value: getStringFromDataView(valueDataView, 0, resourceSize),\n            };\n            if (TagNames[tagId]) {\n                try {\n                    tag.description = TagNames[tagId].description(valueDataView);\n                } catch (error) {\n                    tag.description = '<no description formatter>';\n                }\n                tags[tagName ? tagName : TagNames[tagId].name] = tag;\n            } else if (includeUnknown) {\n                tags[`undefined-${tagId}`] = tag;\n            }\n        }\n        offset += resourceSize + (resourceSize % 2);\n    }\n\n    return tags;\n}\n\nfunction getTagName(dataView, offset) {\n    // The name is encoded as a Pascal string (the string is prefixed with one\n    // byte containing the length of the string) and everything is padded with a\n    // null byte to make the size even.\n    const [stringSize, string] = getPascalStringFromDataView(dataView, offset);\n    return {\n        tagName: string,\n        tagNameSize: 1 + stringSize + (stringSize % 2 === 0 ? 1 : 0)\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {getStringFromDataView} from './utils.js';\n\nexport const iccTags = {\n    'desc': {\n        'name': 'ICC Description',\n    },\n    'cprt': {\n        'name': 'ICC Copyright',\n    },\n    'dmdd': {\n        'name': 'ICC Device Model Description',\n    },\n    'vued': {\n        'name': 'ICC Viewing Conditions Description',\n    },\n    'dmnd': {\n        'name': 'ICC Device Manufacturer for Display',\n    },\n    'tech': {\n        'name': 'Technology',\n    },\n};\n\nexport const iccProfile = {\n    4: {\n        'name': 'Preferred CMM type',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => value !== null ? toCompany(value) : '',\n    },\n    8: {\n        'name': 'Profile Version',\n        'value': (dataView, offset) => {\n            return (dataView.getUint8(offset)).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) >> 4).toString(10) + '.'\n            + (dataView.getUint8(offset + 1) % 16).toString(10);\n        }\n    },\n    12: {\n        'name': 'Profile/Device class',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => {\n            switch (value.toLowerCase()) {\n                case 'scnr': return 'Input Device profile';\n                case 'mntr': return 'Display Device profile';\n                case 'prtr': return 'Output Device profile';\n                case 'link': return 'DeviceLink profile';\n                case 'abst': return 'Abstract profile';\n                case 'spac': return 'ColorSpace profile';\n                case 'nmcl': return 'NamedColor profile';\n                case 'cenc': return 'ColorEncodingSpace profile';\n                case 'mid ': return 'MultiplexIdentification profile';\n                case 'mlnk': return 'MultiplexLink profile';\n                case 'mvis': return 'MultiplexVisualization profile';\n                default: return value;\n            }\n        }\n    },\n    16: {\n        'name': 'Color Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    20: {\n        'name': 'Connection Space',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    24: {\n        'name': 'ICC Profile Date',\n        'value': (dataView, offset) => parseDate(dataView, offset).toISOString()\n    },\n    36: {\n        'name': 'ICC Signature',\n        'value': (dataView, offset) => sliceToString(dataView.buffer.slice(offset, offset + 4))\n    },\n    40: {\n        'name': 'Primary Platform',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    48: {\n        'name': 'Device Manufacturer',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4),\n        'description': (value) => toCompany(value)\n    },\n    52: {\n        'name': 'Device Model Number',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n    64: {\n        'name': 'Rendering Intent',\n        'value': (dataView, offset) => dataView.getUint32(offset),\n        'description': (value) => {\n            switch (value) {\n                case 0: return 'Perceptual';\n                case 1: return 'Relative Colorimetric';\n                case 2: return 'Saturation';\n                case 3: return 'Absolute Colorimetric';\n                default: return value;\n            }\n        }\n    },\n\n    80: {\n        'name': 'Profile Creator',\n        'value': (dataView, offset) => getStringFromDataView(dataView, offset, 4)\n    },\n};\n\nfunction parseDate(dataView, offset) {\n    const year = dataView.getUint16(offset);\n    const month = dataView.getUint16(offset + 2) - 1;\n    const day = dataView.getUint16(offset + 4);\n    const hours = dataView.getUint16(offset + 6);\n    const minutes = dataView.getUint16(offset + 8);\n    const seconds = dataView.getUint16(offset + 10);\n    return new Date(Date.UTC(year, month, day, hours, minutes, seconds));\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction toCompany(value) {\n    switch (value.toLowerCase()) {\n        case 'appl': return 'Apple';\n        case 'adbe': return 'Adobe';\n        case 'msft': return 'Microsoft';\n        case 'sunw': return 'Sun Microsystems';\n        case 'sgi': return 'Silicon Graphics';\n        case 'tgnt': return 'Taligent';\n        default: return value;\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\nimport {iccTags, iccProfile} from './icc-tag-names.js';\nimport {getStringFromDataView, getUnicodeStringFromDataView, decompress, COMPRESSION_METHOD_NONE, COMPRESSION_METHOD_DEFLATE} from './utils.js';\n\nexport default {\n    read\n};\n\nconst PROFILE_HEADER_LENGTH = 84;\nconst ICC_TAG_COUNT_OFFSET = 128;\nconst ICC_SIGNATURE = 'acsp';\nconst TAG_TYPE_DESC = 'desc';\nconst TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE = 'mluc';\nconst TAG_TYPE_TEXT = 'text';\nconst TAG_TYPE_SIGNATURE = 'sig ';\nconst TAG_TABLE_SINGLE_TAG_DATA = 12;\n\n// ICC profile data can be longer than application segment max length of ~64k.\n// so it can be split into multiple APP2 segments. Each segment includes\n// total chunk count and chunk number.\n// Here we read all chunks into single continuous array of bytes.\n// Compressed ICC profile data only has support for a single chunk.\nfunction read(dataView, iccData, async) {\n    if (async && iccData[0].compressionMethod !== COMPRESSION_METHOD_NONE) {\n        return readCompressedIcc(dataView, iccData);\n    }\n\n    return readIcc(dataView, iccData);\n}\n\nfunction readCompressedIcc(dataView, iccData) {\n    if (!compressionMethodIsSupported(iccData[0].compressionMethod)) {\n        return {};\n    }\n    const compressedDataView = new DataView(dataView.buffer.slice(iccData[0].offset, iccData[0].offset + iccData[0].length));\n    return decompress(compressedDataView, iccData[0].compressionMethod, 'utf-8', 'dataview')\n        .then(parseTags)\n        .catch(() => ({}));\n}\n\nfunction compressionMethodIsSupported(compressionMethod) {\n    return compressionMethod === COMPRESSION_METHOD_DEFLATE;\n}\n\nfunction readIcc(dataView, iccData) {\n    try {\n        const totalIccProfileLength = iccData.reduce((sum, icc) => sum + icc.length, 0);\n\n        const iccBinaryData = new Uint8Array(totalIccProfileLength);\n        let offset = 0;\n        const buffer = getBuffer(dataView);\n\n        for (let chunkNumber = 1; chunkNumber <= iccData.length; chunkNumber++) {\n            const iccDataChunk = iccData.find((x) => x.chunkNumber === chunkNumber);\n            if (!iccDataChunk) {\n                throw new Error(`ICC chunk ${chunkNumber} not found`);\n            }\n\n            const data = buffer.slice(iccDataChunk.offset, iccDataChunk.offset + iccDataChunk.length);\n            const chunkData = new Uint8Array(data);\n\n            iccBinaryData.set(chunkData, offset);\n            offset += chunkData.length;\n        }\n\n        return parseTags(new DataView(iccBinaryData.buffer));\n    } catch (error) {\n        return {};\n    }\n}\n\nfunction getBuffer(dataView) {\n    if (Array.isArray(dataView)) {\n        return (new DataView(Uint8Array.from(dataView).buffer)).buffer;\n    }\n    return dataView.buffer;\n}\n\nfunction iccDoesNotHaveTagCount(buffer) {\n    return buffer.length < (ICC_TAG_COUNT_OFFSET + 4);\n}\n\nfunction hasTagsData(buffer, tagHeaderOffset) {\n    return buffer.length < tagHeaderOffset + TAG_TABLE_SINGLE_TAG_DATA;\n}\n\nexport function parseTags(dataView) {\n    const buffer = dataView.buffer;\n\n    const length = dataView.getUint32();\n    if (dataView.byteLength !== length) {\n        throw new Error('ICC profile length not matching');\n    }\n\n    if (dataView.length < PROFILE_HEADER_LENGTH) {\n        throw new Error('ICC profile too short');\n    }\n\n    const tags = {};\n\n    const iccProfileKeys = Object.keys(iccProfile);\n    for (let i = 0; i < iccProfileKeys.length; i++) {\n        const offset = iccProfileKeys[i];\n        const profileEntry = iccProfile[offset];\n        const value = profileEntry.value(dataView, parseInt(offset, 10));\n        let description = value;\n        if (profileEntry.description) {\n            description = profileEntry.description(value);\n        }\n\n        tags[profileEntry.name] = {\n            value,\n            description\n        };\n    }\n\n    const signature = sliceToString(buffer.slice(36, 40));\n    if (signature !== ICC_SIGNATURE) {\n        throw new Error('ICC profile: missing signature');\n    }\n\n    /* ICC data is incomplete but we have header parsed so lets return it */\n    if (iccDoesNotHaveTagCount(buffer)) {\n        return tags;\n    }\n\n    const tagCount = dataView.getUint32(128);\n    let tagHeaderOffset = 132;\n\n    for (let i = 0; i < tagCount; i++) {\n        if (hasTagsData(buffer, tagHeaderOffset)) {\n            // Tags are corrupted (offset too far), return what we parsed until now\n            return tags;\n        }\n        const tagSignature = getStringFromDataView(dataView, tagHeaderOffset, 4);\n        const tagOffset = dataView.getUint32(tagHeaderOffset + 4);\n        const tagSize = dataView.getUint32(tagHeaderOffset + 8);\n\n        if (tagOffset > buffer.length) {\n            // Tag data is invalid, lets return what we managed to parse\n            return tags;\n        }\n        const tagType = getStringFromDataView(dataView, tagOffset, 4);\n\n        if (tagType === TAG_TYPE_DESC) {\n            const tagValueSize = dataView.getUint32(tagOffset + 8);\n            if (tagValueSize > tagSize) {\n                // Tag data is invalid, lets return what we managed to parse\n                return tags;\n            }\n\n            const val = sliceToString(buffer.slice(tagOffset + 12, tagOffset + tagValueSize + 11));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE) {\n            const numRecords = dataView.getUint32(tagOffset + 8);\n            const recordSize = dataView.getUint32(tagOffset + 12);\n            let offset = tagOffset + 16;\n            const val = [];\n            for (let recordNum = 0; recordNum < numRecords; recordNum++) {\n                const languageCode = getStringFromDataView(dataView, offset + 0, 2);\n                const countryCode = getStringFromDataView(dataView, offset + 2, 2);\n                const textLength = dataView.getUint32(offset + 4);\n                const textOffset = dataView.getUint32(offset + 8);\n\n                const text = getUnicodeStringFromDataView(dataView, tagOffset + textOffset, textLength);\n                val.push({languageCode, countryCode, text});\n                offset += recordSize;\n            }\n            if (numRecords === 1) {\n                addTag(tags, tagSignature, val[0].text);\n            } else {\n                const valObj = {};\n                for (let valIndex = 0; valIndex < val.length; valIndex++) {\n                    valObj[`${val[valIndex].languageCode}-${val[valIndex].countryCode}`] = val[valIndex].text;\n                }\n                addTag(tags, tagSignature, valObj);\n            }\n        } else if (tagType === TAG_TYPE_TEXT) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + tagSize - 7));\n            addTag(tags, tagSignature, val);\n        } else if (tagType === TAG_TYPE_SIGNATURE) {\n            const val = sliceToString(buffer.slice(tagOffset + 8, tagOffset + 12));\n            addTag(tags, tagSignature, val);\n        }\n        tagHeaderOffset = tagHeaderOffset + 12;\n    }\n\n    return tags;\n}\n\nfunction sliceToString(slice) {\n    return String.fromCharCode.apply(null, new Uint8Array(slice));\n}\n\nfunction addTag(tags, tagSignature, value) {\n    if (iccTags[tagSignature]) {\n        tags[iccTags[tagSignature].name] = {value, description: value};\n    } else {\n        tags[tagSignature] = {value, description: value};\n    }\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, fileDataOffset) {\n    return {\n        'Image Width': getImageWidth(dataView, fileDataOffset),\n        'Image Height': getImageHeight(dataView, fileDataOffset),\n        'Bit Depth': getBitDepth(dataView, fileDataOffset),\n        'Color Type': getColorType(dataView, fileDataOffset),\n        'Compression': getCompression(dataView, fileDataOffset),\n        'Filter': getFilter(dataView, fileDataOffset),\n        'Interlace': getInterlace(dataView, fileDataOffset)\n    };\n}\n\nfunction getImageWidth(dataView, fileDataOffset) {\n    const OFFSET = 0;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView, fileDataOffset) {\n    const OFFSET = 4;\n    const SIZE = 4;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getBitDepth(dataView, fileDataOffset) {\n    const OFFSET = 8;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: `${value}`\n    };\n}\n\nfunction getColorType(dataView, fileDataOffset) {\n    const OFFSET = 9;\n    const SIZE = 1;\n    const COLOR_TYPES = {\n        0: 'Grayscale',\n        2: 'RGB',\n        3: 'Palette',\n        4: 'Grayscale with Alpha',\n        6: 'RGB with Alpha'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: COLOR_TYPES[value] || 'Unknown'\n    };\n}\n\nfunction getCompression(dataView, fileDataOffset) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Deflate/Inflate' : 'Unknown'\n    };\n}\n\nfunction getFilter(dataView, fileDataOffset) {\n    const OFFSET = 11;\n    const SIZE = 1;\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: value === 0 ? 'Adaptive' : 'Unknown'\n    };\n}\n\nfunction getInterlace(dataView, fileDataOffset) {\n    const OFFSET = 12;\n    const SIZE = 1;\n    const INTERLACE_TYPES = {\n        0: 'Noninterlaced',\n        1: 'Adam7 Interlace'\n    };\n\n    if (fileDataOffset + OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, fileDataOffset + OFFSET);\n    return {\n        value,\n        description: INTERLACE_TYPES[value] || 'Unknown'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// Specification: http://www.libpng.org/pub/png/spec/1.2/\n\nimport {getStringValueFromArray, getStringFromDataView, decompress, COMPRESSION_METHOD_NONE} from './utils.js';\nimport TagDecoder from './tag-decoder.js';\nimport {TYPE_TEXT, TYPE_ITXT, TYPE_ZTXT} from './image-header-png.js';\nimport Tags from './tags.js';\nimport IptcTags from './iptc-tags.js';\nimport Constants from './constants.js';\n\nexport default {\n    read\n};\n\nconst STATE_KEYWORD = 'STATE_KEYWORD';\nconst STATE_COMPRESSION = 'STATE_COMPRESSION';\nconst STATE_LANG = 'STATE_LANG';\nconst STATE_TRANSLATED_KEYWORD = 'STATE_TRANSLATED_KEYWORD';\nconst STATE_TEXT = 'STATE_TEXT';\nconst COMPRESSION_SECTION_ITXT_EXTRA_BYTE = 1;\nconst COMPRESSION_FLAG_COMPRESSED = 1;\nconst EXIF_OFFSET = 6;\n\nfunction read(dataView, pngTextChunks, async, includeUnknown) {\n    const tags = {};\n    const tagsPromises = [];\n    for (let i = 0; i < pngTextChunks.length; i++) {\n        const {offset, length, type} = pngTextChunks[i];\n        const nameAndValue = getNameAndValue(dataView, offset, length, type, async);\n        if (nameAndValue instanceof Promise) {\n            tagsPromises.push(nameAndValue.then(({name, value, description}) => {\n                try {\n                    if (Constants.USE_EXIF && isExifGroupTag(name, value)) {\n                        return {\n                            __exif: Tags.read(decodeRawData(value), EXIF_OFFSET, includeUnknown)\n                        };\n                    } else if (Constants.USE_IPTC && isIptcGroupTag(name, value)) {\n                        return {\n                            __iptc: IptcTags.read(decodeRawData(value), 0, includeUnknown)\n                        };\n                    } else if (name) {\n                        return {\n                            [name]: {\n                                value,\n                                description\n                            }\n                        };\n                    }\n                } catch (error) {\n                    // Ignore the broken tag.\n                }\n                return {};\n            }));\n        } else {\n            const {name, value, description} = nameAndValue;\n            if (name) {\n                tags[name] = {\n                    value,\n                    description\n                };\n            }\n        }\n    }\n\n    return {\n        readTags: tags,\n        readTagsPromise: tagsPromises.length > 0 ? Promise.all(tagsPromises) : undefined\n    };\n}\n\nfunction getNameAndValue(dataView, offset, length, type, async) {\n    const keywordChars = [];\n    const langChars = [];\n    const translatedKeywordChars = [];\n    let valueChars;\n    let parsingState = STATE_KEYWORD;\n    let compressionMethod = COMPRESSION_METHOD_NONE;\n\n    for (let i = 0; i < length && offset + i < dataView.byteLength; i++) {\n        if (parsingState === STATE_COMPRESSION) {\n            compressionMethod = getCompressionMethod({type, dataView, offset: offset + i});\n            if (type === TYPE_ITXT) {\n                i += COMPRESSION_SECTION_ITXT_EXTRA_BYTE;\n            }\n            parsingState = moveToNextState(type, parsingState);\n            continue;\n        } else if (parsingState === STATE_TEXT) {\n            valueChars = new DataView(dataView.buffer.slice(offset + i, offset + length));\n            break;\n        }\n        const byte = dataView.getUint8(offset + i);\n        if (byte === 0) {\n            parsingState = moveToNextState(type, parsingState);\n        } else if (parsingState === STATE_KEYWORD) {\n            keywordChars.push(byte);\n        } else if (parsingState === STATE_LANG) {\n            langChars.push(byte);\n        } else if (parsingState === STATE_TRANSLATED_KEYWORD) {\n            translatedKeywordChars.push(byte);\n        }\n    }\n\n    if (compressionMethod !== COMPRESSION_METHOD_NONE && !async) {\n        return {};\n    }\n    const decompressedValueChars = decompress(valueChars, compressionMethod, getEncodingFromType(type));\n    if (decompressedValueChars instanceof Promise) {\n        return decompressedValueChars\n            .then((_decompressedValueChars) => constructTag(_decompressedValueChars, type, langChars, keywordChars))\n            .catch(() => constructTag('<text using unknown compression>'.split(''), type, langChars, keywordChars));\n    }\n    return constructTag(decompressedValueChars, type, langChars, keywordChars);\n}\n\nfunction getCompressionMethod({type, dataView, offset}) {\n    if (type === TYPE_ITXT) {\n        if (dataView.getUint8(offset) === COMPRESSION_FLAG_COMPRESSED) {\n            return dataView.getUint8(offset + 1);\n        }\n    } else if (type === TYPE_ZTXT) {\n        return dataView.getUint8(offset);\n    }\n    return COMPRESSION_METHOD_NONE;\n}\n\nfunction moveToNextState(type, parsingState) {\n    if (parsingState === STATE_KEYWORD && [TYPE_ITXT, TYPE_ZTXT].includes(type)) {\n        return STATE_COMPRESSION;\n    }\n    if (parsingState === STATE_COMPRESSION) {\n        if (type === TYPE_ITXT) {\n            return STATE_LANG;\n        }\n        return STATE_TEXT;\n    }\n    if (parsingState === STATE_LANG) {\n        return STATE_TRANSLATED_KEYWORD;\n    }\n    return STATE_TEXT;\n}\n\nfunction getEncodingFromType(type) {\n    if (type === TYPE_TEXT || type === TYPE_ZTXT) {\n        return 'latin1';\n    }\n    return 'utf-8';\n}\n\nfunction constructTag(valueChars, type, langChars, keywordChars) {\n    const value = getValue(valueChars);\n    return {\n        name: getName(type, langChars, keywordChars),\n        value,\n        description: type === TYPE_ITXT ? getDescription(valueChars) : value\n    };\n}\n\nfunction getName(type, langChars, keywordChars) {\n    const name = getStringValueFromArray(keywordChars);\n    if (type === TYPE_TEXT || langChars.length === 0) {\n        return name;\n    }\n    const lang = getStringValueFromArray(langChars);\n    return `${name} (${lang})`;\n}\n\nfunction getValue(valueChars) {\n    if (valueChars instanceof DataView) {\n        return getStringFromDataView(valueChars, 0, valueChars.byteLength);\n    }\n    return valueChars;\n}\n\nfunction getDescription(valueChars) {\n    return TagDecoder.decode('UTF-8', valueChars);\n}\n\nfunction isExifGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type exif' && value.substring(1, 5) === 'exif';\n}\n\nfunction isIptcGroupTag(name, value) {\n    return name.toLowerCase() === 'raw profile type iptc' && value.substring(1, 5) === 'iptc';\n}\n\nfunction decodeRawData(value) {\n    const parts = value.match(/\\n(exif|iptc)\\n\\s*\\d+\\n([\\s\\S]*)$/);\n    return hexToDataView(parts[2].replace(/\\n/g, ''));\n}\n\nfunction hexToDataView(hex) {\n    const dataView = new DataView(new ArrayBuffer(hex.length / 2));\n    for (let i = 0; i < hex.length; i += 2) {\n        dataView.setUint8(i / 2, parseInt(hex.substring(i, i + 2), 16));\n    }\n    return dataView;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\nimport {PNG_CHUNK_LENGTH_OFFSET, PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_DATA_OFFSET, PNG_CHUNK_TYPE_SIZE, TYPE_PHYS, TYPE_TIME} from './image-header-png.js';\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView, chunkOffsets) {\n    const tags = {};\n\n    for (let i = 0; i < chunkOffsets.length; i++) {\n        const chunkLength = Types.getLongAt(dataView, chunkOffsets[i] + PNG_CHUNK_LENGTH_OFFSET);\n        const chunkType = getStringFromDataView(dataView, chunkOffsets[i] + PNG_CHUNK_TYPE_OFFSET, PNG_CHUNK_TYPE_SIZE);\n\n        if (chunkType === TYPE_PHYS) {\n            tags['Pixels Per Unit X'] = getPixelsPerUnitX(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixels Per Unit Y'] = getPixelsPerUnitY(dataView, chunkOffsets[i], chunkLength);\n            tags['Pixel Units'] = getPixelUnits(dataView, chunkOffsets[i], chunkLength);\n        } else if (chunkType === TYPE_TIME) {\n            tags['Modify Date'] = getModifyDate(dataView, chunkOffsets[i], chunkLength);\n        }\n    }\n\n    return tags;\n}\n\nfunction getPixelsPerUnitX(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 0;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelsPerUnitY(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 4;\n    const TAG_SIZE = 4;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getLongAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: '' + value\n    };\n}\n\nfunction getPixelUnits(dataView, chunkOffset, chunkLength) {\n    const TAG_OFFSET = 8;\n    const TAG_SIZE = 1;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, TAG_OFFSET, TAG_SIZE)) {\n        return undefined;\n    }\n\n    const value = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + TAG_OFFSET);\n\n    return {\n        value,\n        description: value === 1 ? 'meters' : 'Unknown'\n    };\n}\n\nfunction getModifyDate(dataView, chunkOffset, chunkLength) {\n    const TIME_TAG_SIZE = 7;\n\n    if (!tagFitsInBuffer(dataView, chunkOffset, chunkLength, 0, TIME_TAG_SIZE)) {\n        return undefined;\n    }\n\n    const year = Types.getShortAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET);\n    const month = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 2);\n    const day = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 3);\n    const hours = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 4);\n    const minutes = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 5);\n    const seconds = Types.getByteAt(dataView, chunkOffset + PNG_CHUNK_DATA_OFFSET + 6);\n\n    return {\n        value: [year, month, day, hours, minutes, seconds],\n        description: `${pad(year, 4)}-${pad(month, 2)}-${pad(day, 2)} ${pad(hours, 2)}:${pad(minutes, 2)}:${pad(seconds, 2)}`\n    };\n}\n\nfunction tagFitsInBuffer(dataView, chunkOffset, chunkLength, tagOffset, tagSize) {\n    return tagOffset + tagSize <= chunkLength && chunkOffset + PNG_CHUNK_DATA_OFFSET + tagOffset + tagSize <= dataView.byteLength;\n}\n\nfunction pad(number, size) {\n    return `${'0'.repeat(size - ('' + number).length)}${number}`;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport Types from './types.js';\n\nexport default {\n    read\n};\n\nconst IMAGE_WIDTH_OFFSET = 4;\nconst IMAGE_HEIGHT_OFFSET = 7;\n\n// https://developers.google.com/speed/webp/docs/riff_container#extended_file_format\nfunction read(dataView, chunkOffset) {\n    const tags = {};\n\n    const flags = Types.getByteAt(dataView, chunkOffset);\n\n    tags['Alpha'] = getAlpha(flags);\n    tags['Animation'] = getAnimation(flags);\n    tags['ImageWidth'] = getThreeByteValue(dataView, chunkOffset + IMAGE_WIDTH_OFFSET);\n    tags['ImageHeight'] = getThreeByteValue(dataView, chunkOffset + IMAGE_HEIGHT_OFFSET);\n\n    return tags;\n}\n\nfunction getAlpha(flags) {\n    const value = flags & 0x10;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getAnimation(flags) {\n    const value = flags & 0x02;\n    return {\n        value: value ? 1 : 0,\n        description: value ? 'Yes' : 'No'\n    };\n}\n\nfunction getThreeByteValue(dataView, offset) {\n    // Values are stored little-endian.\n    const value = Types.getByteAt(dataView, offset)\n        + 256 * Types.getByteAt(dataView, offset + 1)\n        + 256 * 256 * Types.getByteAt(dataView, offset + 2)\n        + 1; // Value is 1-based, i.e. a value of 7 means 8px.\n\n    return {\n        value,\n        description: value + 'px'\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n// https://www.w3.org/Graphics/GIF/spec-gif87.txt\n// https://www.w3.org/Graphics/GIF/spec-gif89a.txt\n\nimport {getStringFromDataView} from './utils.js';\n\nexport default {\n    read\n};\n\nfunction read(dataView) {\n    return {\n        'GIF Version': getGifVersion(dataView),\n        'Image Width': getImageWidth(dataView),\n        'Image Height': getImageHeight(dataView),\n        'Global Color Map': getGlobalColorMap(dataView),\n        'Bits Per Pixel': getBitDepth(dataView),\n        'Color Resolution Depth': getColorResolution(dataView)\n    };\n}\n\nfunction getGifVersion(dataView) {\n    const OFFSET = 3;\n    const SIZE = 3;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = getStringFromDataView(dataView, OFFSET, SIZE);\n    return {\n        value,\n        description: value\n    };\n}\n\nfunction getImageWidth(dataView) {\n    const OFFSET = 6;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getImageHeight(dataView) {\n    const OFFSET = 8;\n    const SIZE = 2;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const value = dataView.getUint16(OFFSET, true);\n    return {\n        value,\n        description: `${value}px`\n    };\n}\n\nfunction getGlobalColorMap(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b10000000) >>> 7;\n    return {\n        value,\n        description: value === 1 ? 'Yes' : 'No'\n    };\n}\n\nfunction getColorResolution(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = ((byteValue & 0b01110000) >>> 4) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n\nfunction getBitDepth(dataView) {\n    const OFFSET = 10;\n    const SIZE = 1;\n\n    if (OFFSET + SIZE > dataView.byteLength) {\n        return undefined;\n    }\n\n    const byteValue = dataView.getUint8(OFFSET);\n    const value = (byteValue & 0b00000111) + 1; // Zero-based.\n    return {\n        value,\n        description: `${value} ${value === 1 ? 'bit' : 'bits'}`\n    };\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\nimport {deferInit, getBase64Image} from './utils.js';\n\n// https://exiftool.org/TagNames/EXIF.html#Compression\nconst COMPRESSION_JPEG = [6, 7, 99];\n\nexport default {\n    get,\n};\n\nfunction get(dataView, thumbnailTags, tiffHeaderOffset) {\n    if (hasJpegThumbnail(thumbnailTags)) {\n        thumbnailTags.type = 'image/jpeg';\n        const offset = tiffHeaderOffset + thumbnailTags.JPEGInterchangeFormat.value;\n        thumbnailTags.image = dataView.buffer.slice(offset, offset + thumbnailTags.JPEGInterchangeFormatLength.value);\n        deferInit(thumbnailTags, 'base64', function () {\n            return getBase64Image(this.image);\n        });\n    }\n\n    // There is a small possibility of thumbnails in TIFF format but they are\n    // not stored as a self-contained image file and would be much more\n    // difficult to extract.\n    // https://exiftool.org/forum/index.php?topic=3273.msg14778#msg14778\n\n    return thumbnailTags;\n}\n\nfunction hasJpegThumbnail(tags) {\n    return tags && ((tags.Compression === undefined) || (COMPRESSION_JPEG.includes(tags.Compression.value)))\n        && tags.JPEGInterchangeFormat && tags.JPEGInterchangeFormat.value\n        && tags.JPEGInterchangeFormatLength && tags.JPEGInterchangeFormatLength.value;\n}\n","/* This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/. */\n\n/**\n * Thrown when no Exif metadata was found for the given image.\n *\n * @param {string} message The error message.\n */\nfunction MetadataMissingError(message) {\n    this.name = 'MetadataMissingError';\n    this.message = message || 'No Exif data';\n    this.stack = (new Error()).stack;\n}\n\nMetadataMissingError.prototype = new Error;\n\nexport default {\n    MetadataMissingError,\n};\n","/**\n * ExifReader\n * http://github.com/mattiasw/exifreader\n * Copyright (C) 2011-2023  Mattias Wallander <mattias@wallander.eu>\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* global Buffer, __non_webpack_require__ */\n\nimport {objectAssign, dataUriToBuffer} from './utils.js';\nimport DataViewWrapper from './dataview.js';\nimport Constants from './constants.js';\nimport {getStringValueFromArray} from './utils.js';\nimport {getCalculatedGpsValue} from './tag-names-utils.js';\nimport ImageHeader from './image-header.js';\nimport Tags from './tags.js';\nimport MpfTags from './mpf-tags.js';\nimport FileTags from './file-tags.js';\nimport JfifTags from './jfif-tags.js';\nimport IptcTags from './iptc-tags.js';\nimport XmpTags from './xmp-tags.js';\nimport PhotoshopTags from './photoshop-tags.js';\nimport IccTags from './icc-tags.js';\nimport PngFileTags from './png-file-tags.js';\nimport PngTextTags from './png-text-tags.js';\nimport PngTags from './png-tags.js';\nimport Vp8xTags from './vp8x-tags.js';\nimport GifFileTags from './gif-file-tags.js';\nimport Thumbnail from './thumbnail.js';\nimport exifErrors from './errors.js';\n\nexport default {\n    load,\n    loadView,\n    errors: exifErrors,\n};\n\nexport const errors = exifErrors;\n\nexport function load(data, options = {}) {\n    if (isFilePathOrURL(data)) {\n        options.async = true;\n        return loadFile(data, options).then((fileContents) => loadFromData(fileContents, options));\n    }\n    if (isBrowserFileObject(data)) {\n        options.async = true;\n        return loadFileObject(data).then((fileContents) => loadFromData(fileContents, options));\n    }\n    return loadFromData(data, options);\n}\n\nfunction isFilePathOrURL(data) {\n    return typeof data === 'string';\n}\n\nfunction loadFile(filename, options) {\n    if (/^\\w+:\\/\\//.test(filename)) {\n        if (typeof fetch !== 'undefined') {\n            return fetchRemoteFile(filename, options);\n        }\n\n        return nodeGetRemoteFile(filename, options);\n    }\n\n    if (isDataUri(filename)) {\n        return Promise.resolve(dataUriToBuffer(filename));\n    }\n\n    return loadLocalFile(filename, options);\n}\n\nfunction fetchRemoteFile(url, {length} = {}) {\n    const options = {method: 'GET'};\n    if (Number.isInteger(length) && length >= 0) {\n        options.headers = {\n            range: `bytes=0-${length - 1}`,\n        };\n    }\n    return fetch(url, options).then((response) => response.arrayBuffer());\n}\n\nfunction nodeGetRemoteFile(url, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const options = {};\n        if (Number.isInteger(length) && length >= 0) {\n            options.headers = {\n                range: `bytes=0-${length - 1}`,\n            };\n        }\n\n        const get = requireNodeGet(url);\n        get(url, options, (response) => {\n            if ((response.statusCode >= 200) && (response.statusCode <= 299)) {\n                const data = [];\n                response.on('data', (chunk) => data.push(Buffer.from(chunk)));\n                response.on('error', (error) => reject(error));\n                response.on('end', () => resolve(Buffer.concat(data)));\n            } else {\n                reject(`Could not fetch file: ${response.statusCode} ${response.statusMessage}`);\n                response.resume();\n            }\n        }).on('error', (error) => reject(error));\n    });\n}\n\nfunction requireNodeGet(url) {\n    if (/^https:\\/\\//.test(url)) {\n        return __non_webpack_require__('https').get;\n    }\n    return __non_webpack_require__('http').get;\n}\n\nfunction isDataUri(filename) {\n    return /^data:[^;,]*(;base64)?,/.test(filename);\n}\n\nfunction loadLocalFile(filename, {length} = {}) {\n    return new Promise((resolve, reject) => {\n        const fs = requireNodeFs();\n        fs.open(filename, (error, fd) => {\n            if (error) {\n                reject(error);\n            } else {\n                fs.stat(filename, (error, stat) => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        const size = Math.min(stat.size, length !== undefined ? length : stat.size);\n                        const buffer = Buffer.alloc(size);\n                        const options = {\n                            buffer,\n                            length: size\n                        };\n                        fs.read(fd, options, (error) => {\n                            if (error) {\n                                reject(error);\n                            } else {\n                                fs.close(fd, (error) => {\n                                    if (error) {\n                                        console.warn(`Could not close file ${filename}:`, error); // eslint-disable-line no-console\n                                    }\n                                    resolve(buffer);\n                                });\n                            }\n                        });\n                    }\n                });\n            }\n        });\n    });\n}\n\nfunction requireNodeFs() {\n    try {\n        return __non_webpack_require__('fs');\n    } catch (error) {\n        return undefined;\n    }\n}\n\nfunction isBrowserFileObject(data) {\n    return (typeof window !== 'undefined') && (typeof File !== 'undefined') && (data instanceof File);\n}\n\nfunction loadFileObject(file) {\n    return new Promise((resolve, reject) => {\n        const reader = new FileReader();\n        reader.onload = (readerEvent) => resolve(readerEvent.target.result);\n        reader.onerror = () => reject(reader.error);\n        reader.readAsArrayBuffer(file);\n    });\n}\n\nfunction loadFromData(data, options) {\n    if (isNodeBuffer(data)) {\n        // File data read in Node can share the underlying buffer with other\n        // data. Therefore it's safest to get a new one to avoid weird bugs.\n        data = (new Uint8Array(data)).buffer;\n    }\n    return loadView(getDataView(data), options);\n}\n\nfunction isNodeBuffer(data) {\n    try {\n        return Buffer.isBuffer(data);\n    } catch (error) {\n        return false;\n    }\n}\n\nfunction getDataView(data) {\n    try {\n        return new DataView(data);\n    } catch (error) {\n        return new DataViewWrapper(data);\n    }\n}\n\nexport function loadView(\n    dataView,\n    {expanded = false, async = false, includeUnknown = false} = {expanded: false, async: false, includeUnknown: false}\n) {\n    let foundMetaData = false;\n    let tags = {};\n    const tagsPromises = [];\n\n    const {\n        fileType,\n        fileDataOffset,\n        jfifDataOffset,\n        tiffHeaderOffset,\n        iptcDataOffset,\n        xmpChunks,\n        iccChunks,\n        mpfDataOffset,\n        pngHeaderOffset,\n        pngTextChunks,\n        pngChunkOffsets,\n        vp8xChunkOffset,\n        gifHeaderOffset\n    } = ImageHeader.parseAppMarkers(dataView, async);\n\n    if (Constants.USE_JPEG && Constants.USE_FILE && hasFileData(fileDataOffset)) {\n        foundMetaData = true;\n        const readTags = FileTags.read(dataView, fileDataOffset);\n        if (expanded) {\n            tags.file = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_JFIF && hasJfifData(jfifDataOffset)) {\n        foundMetaData = true;\n        const readTags = JfifTags.read(dataView, jfifDataOffset);\n        if (expanded) {\n            tags.jfif = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_EXIF && hasExifData(tiffHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = Tags.read(dataView, tiffHeaderOffset, includeUnknown);\n        if (readTags.Thumbnail) {\n            tags.Thumbnail = readTags.Thumbnail;\n            delete readTags.Thumbnail;\n        }\n\n        if (expanded) {\n            tags.exif = readTags;\n            addGpsGroup(tags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_IPTC && readTags['IPTC-NAA'] && !hasIptcData(iptcDataOffset)) {\n            const readIptcTags = IptcTags.read(readTags['IPTC-NAA'].value, 0, includeUnknown);\n            if (expanded) {\n                tags.iptc = readIptcTags;\n            } else {\n                tags = objectAssign({}, tags, readIptcTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_XMP && readTags['ApplicationNotes'] && !hasXmpData(xmpChunks)) {\n            const readXmpTags = XmpTags.read(getStringValueFromArray(readTags['ApplicationNotes'].value));\n            if (expanded) {\n                tags.xmp = readXmpTags;\n            } else {\n                delete readXmpTags._raw;\n                tags = objectAssign({}, tags, readXmpTags);\n            }\n        }\n\n        if (Constants.USE_PHOTOSHOP && readTags['ImageSourceData']) {\n            const readPhotoshopTags = PhotoshopTags.read(readTags['PhotoshopSettings'].value, includeUnknown);\n            if (expanded) {\n                tags.photoshop = readPhotoshopTags;\n            } else {\n                tags = objectAssign({}, tags, readPhotoshopTags);\n            }\n        }\n\n        if (Constants.USE_TIFF && Constants.USE_ICC && readTags['ICC_Profile'] && !hasIccData(iccChunks)) {\n            const readIccTags = IccTags.read(\n                readTags['ICC_Profile'].value,\n                [{\n                    offset: 0,\n                    length: readTags['ICC_Profile'].value.length,\n                    chunkNumber: 1,\n                    chunksTotal: 1\n                }]\n            );\n            if (expanded) {\n                tags.icc = readIccTags;\n            } else {\n                tags = objectAssign({}, tags, readIccTags);\n            }\n        }\n    }\n\n    if (Constants.USE_JPEG && Constants.USE_IPTC && hasIptcData(iptcDataOffset)) {\n        foundMetaData = true;\n        const readTags = IptcTags.read(dataView, iptcDataOffset, includeUnknown);\n        if (expanded) {\n            tags.iptc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_XMP && hasXmpData(xmpChunks)) {\n        foundMetaData = true;\n        const readTags = XmpTags.read(dataView, xmpChunks);\n        if (expanded) {\n            tags.xmp = readTags;\n        } else {\n            delete readTags._raw;\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if ((Constants.USE_JPEG || Constants.USE_WEBP) && Constants.USE_ICC && hasIccData(iccChunks)) {\n        foundMetaData = true;\n        const readTags = IccTags.read(dataView, iccChunks, async);\n        if (readTags instanceof Promise) {\n            tagsPromises.push(readTags.then(addIccTags));\n        } else {\n            addIccTags(readTags);\n        }\n    }\n\n    if (Constants.USE_MPF && hasMpfData(mpfDataOffset)) {\n        foundMetaData = true;\n        const readMpfTags = MpfTags.read(dataView, mpfDataOffset, includeUnknown);\n        if (expanded) {\n            tags.mpf = readMpfTags;\n        } else {\n            tags = objectAssign({}, tags, readMpfTags);\n        }\n    }\n\n    if (Constants.USE_PNG && Constants.USE_PNG_FILE && hasPngFileData(pngHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = PngFileTags.read(dataView, pngHeaderOffset);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngFile = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngTextData(pngTextChunks)) {\n        foundMetaData = true;\n        const {readTags, readTagsPromise} = PngTextTags.read(dataView, pngTextChunks, async, includeUnknown);\n        addPngTextTags(readTags);\n        if (readTagsPromise) {\n            tagsPromises.push(readTagsPromise.then((tagList) => tagList.forEach(addPngTextTags)));\n        }\n    }\n\n    if (Constants.USE_PNG && hasPngData(pngChunkOffsets)) {\n        foundMetaData = true;\n        const readTags = PngTags.read(dataView, pngChunkOffsets);\n        if (expanded) {\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_WEBP && hasVp8xData(vp8xChunkOffset)) {\n        foundMetaData = true;\n        const readTags = Vp8xTags.read(dataView, vp8xChunkOffset);\n        if (expanded) {\n            tags.riff = !tags.riff ? readTags : objectAssign({}, tags.riff, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    if (Constants.USE_GIF && hasGifFileData(gifHeaderOffset)) {\n        foundMetaData = true;\n        const readTags = GifFileTags.read(dataView, gifHeaderOffset);\n        if (expanded) {\n            tags.gif = !tags.gif ? readTags : objectAssign({}, tags.gif, readTags);\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    const thumbnail = (Constants.USE_JPEG || Constants.USE_WEBP)\n        && Constants.USE_EXIF\n        && Constants.USE_THUMBNAIL\n        && Thumbnail.get(dataView, tags.Thumbnail, tiffHeaderOffset);\n    if (thumbnail) {\n        foundMetaData = true;\n        tags.Thumbnail = thumbnail;\n    } else {\n        delete tags.Thumbnail;\n    }\n\n    if (fileType) {\n        if (expanded) {\n            if (!tags.file) {\n                tags.file = {};\n            }\n            tags.file.FileType = fileType;\n        } else {\n            tags.FileType = fileType;\n        }\n        foundMetaData = true;\n    }\n\n    if (!foundMetaData) {\n        throw new exifErrors.MetadataMissingError();\n    }\n\n    if (async) {\n        return Promise.all(tagsPromises).then(() => tags);\n    }\n    return tags;\n\n    function addIccTags(readTags) {\n        if (expanded) {\n            tags.icc = readTags;\n        } else {\n            tags = objectAssign({}, tags, readTags);\n        }\n    }\n\n    function addPngTextTags(readTags) {\n        if (expanded) {\n            for (const group of ['exif', 'iptc']) {\n                const groupKey = `__${group}`;\n                if (readTags[groupKey]) {\n                    tags[group] = !tags[group] ? readTags[groupKey] : objectAssign({}, tags.exif, readTags[groupKey]);\n                    delete readTags[groupKey];\n                }\n            }\n            tags.png = !tags.png ? readTags : objectAssign({}, tags.png, readTags);\n            tags.pngText = !tags.pngText ? readTags : objectAssign({}, tags.png, readTags);\n        } else {\n            tags = objectAssign(\n                {},\n                tags,\n                readTags.__exif ? readTags.__exif : {},\n                readTags.__iptc ? readTags.__iptc : {},\n                readTags\n            );\n            delete tags.__exif;\n            delete tags.__iptc;\n        }\n    }\n}\n\nfunction hasFileData(fileDataOffset) {\n    return fileDataOffset !== undefined;\n}\n\nfunction hasJfifData(jfifDataOffset) {\n    return jfifDataOffset !== undefined;\n}\n\nfunction hasExifData(tiffHeaderOffset) {\n    return tiffHeaderOffset !== undefined;\n}\n\nfunction addGpsGroup(tags) {\n    if (tags.exif) {\n        if (tags.exif.GPSLatitude && tags.exif.GPSLatitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Latitude = getCalculatedGpsValue(tags.exif.GPSLatitude.value);\n                if (tags.exif.GPSLatitudeRef.value.join('') === 'S') {\n                    tags.gps.Latitude = -tags.gps.Latitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSLongitude && tags.exif.GPSLongitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Longitude = getCalculatedGpsValue(tags.exif.GPSLongitude.value);\n                if (tags.exif.GPSLongitudeRef.value.join('') === 'W') {\n                    tags.gps.Longitude = -tags.gps.Longitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n\n        if (tags.exif.GPSAltitude && tags.exif.GPSAltitudeRef) {\n            try {\n                tags.gps = tags.gps || {};\n                tags.gps.Altitude = tags.exif.GPSAltitude.value[0] / tags.exif.GPSAltitude.value[1];\n                if (tags.exif.GPSAltitudeRef.value === 1) {\n                    tags.gps.Altitude = -tags.gps.Altitude;\n                }\n            } catch (error) {\n                // Ignore.\n            }\n        }\n    }\n}\n\nfunction hasIptcData(iptcDataOffset) {\n    return iptcDataOffset !== undefined;\n}\n\nfunction hasXmpData(xmpChunks) {\n    return Array.isArray(xmpChunks) && xmpChunks.length > 0;\n}\n\nfunction hasIccData(iccDataOffsets) {\n    return Array.isArray(iccDataOffsets) && iccDataOffsets.length > 0;\n}\n\nfunction hasMpfData(mpfDataOffset) {\n    return mpfDataOffset !== undefined;\n}\n\nfunction hasPngFileData(pngFileDataOffset) {\n    return pngFileDataOffset !== undefined;\n}\n\nfunction hasPngTextData(pngTextChunks) {\n    return pngTextChunks !== undefined;\n}\n\nfunction hasPngData(pngChunkOffsets) {\n    return pngChunkOffsets !== undefined;\n}\n\nfunction hasVp8xData(vp8xChunkOffset) {\n    return vp8xChunkOffset !== undefined;\n}\n\nfunction hasGifFileData(gifHeaderOffset) {\n    return gifHeaderOffset !== undefined;\n}\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport Card from \"../components/Card\"\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\nimport { Form, Button } from '@themesberg/react-bootstrap';\nimport Grid from '../components/Grid'\nimport ExifReader from 'exifreader';\n\nconst Profile1 = \"images/2021-01-30.jpg\";\nconst IndexPage = () => {\n\n\n    const handleFileUpload = async (e) => {\n        const files = Array.from(e.target.files)\n        const file = files[0]\n        const tags = await ExifReader.load(file);\n\n        console.log(tags)\n    }\n    return <Layout>\n        <Grid classes=\"col-12 col-xl-4\">\n            <Form>\n                <Form.Control type=\"file\" onChange={handleFileUpload} />\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Name</Form.Label>\n                    <Form.Control type=\"Text\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Address</Form.Label>\n                    <Form.Control type=\"Text\" />\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\">\n                    <Button> Create </Button>\n                </Form.Group>\n            </Form>\n        </Grid>\n    </Layout>\n}\n\n/**\n * Head export to define metadata for the page\n *\n * See: https://www.gatsbyjs.com/docs/reference/built-in-components/gatsby-head/\n */\nexport const Head = () => <Seo title=\"Home\" />\n\nexport default IndexPage\n"],"names":["CardImg","_ref","ref","bsPrefix","className","variant","_ref$as","as","Component","props","prefix","displayName","defaultProps","DivStyledAsH5","divWithClassName","DivStyledAsH6","CardBody","createWithBsPrefix","CardTitle","CardSubtitle","CardLink","CardText","CardHeader","CardFooter","CardImgOverlay","Card","bg","text","border","body","children","cardContext","useMemo","cardHeaderBsPrefix","CardContext","Provider","value","Img","Title","Subtitle","Body","Link","Text","Header","Footer","ImgOverlay","propTypes","type","tooltip","Feedback","_ref$type","_ref$tooltip","FormCheckLabel","htmlFor","controlId","useContext","FormContext","FormCheck","id","bsSwitchPrefix","_ref$inline","inline","_ref$disabled","disabled","_ref$isValid","isValid","_ref$isInvalid","isInvalid","_ref$feedbackTooltip","feedbackTooltip","feedback","style","_ref$title","title","label","innerFormContext","hasLabel","input","FormCheckInput","Input","Label","FormControl","classes","_classes","_classes2","size","htmlSize","plaintext","readOnly","Object","assign","FormGroup","context","FormLabel","column","srOnly","columnClass","Col","FormRange","FormSelect","FormText","muted","Switch","FormImpl","validated","Group","Control","Check","Range","Select","undefined","p","cover","avatar","subtitle","React","backgroundImage","src","alt","Button","FontAwesomeIcon","icon","faUserPlus","constructor","buffer","length","readUInt8","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readInt32LE","readInt32BE","bufferTypeIsUnsupported","Error","this","byteLength","getUint8","offset","getUint16","littleEndian","getUint32","getInt32","getDataView","data","byteOffset","DataView","error","getStringFromDataView","dataView","chars","i","push","getStringValueFromArray","getNullTerminatedStringFromDataView","char","getUnicodeStringFromDataView","pop","getPascalStringFromDataView","charArray","map","charCode","String","fromCharCode","join","objectAssign","arguments","property","deferInit","object","key","initializer","initialized","defineProperty","get","configurable","enumerable","apply","writable","getBase64Image","image","btoa","Array","prototype","reduce","call","Uint8Array","byte","Buffer","from","toString","strRepeat","string","num","COMPRESSION_METHOD_NONE","decompress","compressionMethod","encoding","returnType","DecompressionStream","decompressionStream","decompressedStream","Blob","stream","pipeThrough","Response","arrayBuffer","then","TextDecoder","decode","Promise","reject","getStringValue","getEncodedString","slice","getCalculatedGpsValue","LITTLE_ENDIAN","BIG_ENDIAN","getByteOrder","tiffHeaderOffset","isTiffFile","TIFF_ID","TIFF_ID_OFFSET","hasTiffMarker","findTiffOffsets","hasAppMarkers","isJpegFile","MIN_JPEG_DATA_BUFFER_LENGTH","JPEG_ID","findJpegOffsets","fieldLength","sof0DataOffset","sof2DataOffset","jfifDataOffset","iptcDataOffset","xmpChunks","iccChunks","mpfDataOffset","appMarkerPosition","JPEG_ID_SIZE","APP_ID_OFFSET","isSOF0Marker","APP_MARKER_SIZE","isSOF2Marker","isApp0JfifMarker","JFIF_DATA_OFFSET","isApp1ExifMarker","TIFF_HEADER_OFFSET","isApp1XmpMarker","getXmpChunkDetails","isApp1ExtendedXmpMarker","getExtendedXmpChunkDetails","isApp13PhotoshopMarker","IPTC_DATA_OFFSET","isApp2ICCMarker","iccDataOffset","APP2_ICC_DATA_OFFSET","iccDataLength","iccChunkNumber","ICC_CHUNK_NUMBER_OFFSET","iccChunksTotal","ICC_TOTAL_CHUNKS_OFFSET","chunkNumber","chunksTotal","isApp2MPFMarker","MPF_DATA_OFFSET","isAppMarker","isFillByte","fileDataOffset","XMP_DATA_OFFSET","XMP_EXTENDED_DATA_OFFSET","APP2_ICC_IDENTIFIER","APP2_MPF_IDENTIFIER","SOF0_MARKER","SOF2_MARKER","DHT_MARKER","DQT_MARKER","DRI_MARKER","SOS_MARKER","APP0_MARKER","APP1_MARKER","APP2_MARKER","APP13_MARKER","APP15_MARKER","COMMENT_MARKER","FILL_BYTE","APP0_JFIF_IDENTIFIER","APP1_EXIF_IDENTIFIER","APP1_XMP_IDENTIFIER","APP1_XMP_EXTENDED_IDENTIFIER","APP13_IPTC_IDENTIFIER","markerIdLength","isXmpIdentifier","isExtendedXmpIdentifier","dataOffset","appMarker","isPngFile","PNG_ID","findPngOffsets","async","offsets","PNG_CHUNK_LENGTH_SIZE","PNG_CHUNK_TYPE_SIZE","isPngImageHeaderChunk","pngHeaderOffset","PNG_CHUNK_DATA_OFFSET","isPngXmpChunk","getPngXmpDataOffset","PNG_CHUNK_LENGTH_OFFSET","isPngTextChunk","chunkType","PNG_CHUNK_TYPE_OFFSET","pngTextChunks","isPngExifChunk","isPngIccpChunk","chunkDataLength","iccHeaderOffset","profileName","compressedProfileOffset","parseIccHeader","isPngChunk","pngChunkOffsets","PNG_XMP_PREFIX","TYPE_TEXT","TYPE_ITXT","TYPE_ZTXT","TYPE_PHYS","TYPE_TIME","TYPE_EXIF","TYPE_ICCP","SUPPORTED_PNG_CHUNK_TYPES","includes","numberOfNullSeparators","parseItemLocationBox","version","contentOffset","boxLength","sizes","item","dataReferenceIndex","extentCount","extent","itemCount","itemId","constructionMethod","offsetSize","lengthSize","baseOffsetSize","indexSize","items","getItemLocationBoxOffsetsAndSizes","extentOffset","extentLength","baseOffset","getIndexSize","extentIndex","getItemCount","getItems","extents","getItemId","getVariableSizedValue","j","getExtentIndex","console","warn","get64BitValue","ITEM_INFO_TYPE_EXIF","ITEM_INFO_TYPE_MIME","ITEM_INFO_TYPE_URI","parseBox","BOX_LENGTH_SIZE","BOX_TYPE_SIZE","BOX_EXTENDED_SIZE","BOX_EXTENDED_SIZE_LOW_OFFSET","extendsToEndOfFile","hasExtendedSize","BOX_EXTENDED_SIZE_OFFSET","hasEmptyHighBits","getBoxLength","majorBrand","parseFileTypeBox","startOffset","subBoxes","parseSubBoxes","parseItemPropertiesBox","properties","parseItemPropertyContainerBox","icc","parseIcc","parseColorInformationBox","FLAGS_SIZE","parseMetadataBox","entryCount","itemInfos","getItemInformationBoxOffsetsAndSizes","parseItemInformationBox","entry","itemProtectionIndex","itemName","itemType","contentType","contentEncoding","itemUri","parseItemInformationEntryBox","findOffsets","metaBox","box","findMetaBox","exifItemId","find","itemInfo","findIinfExifItemId","ilocItem","findIlocItem","exifOffset","getTiffHeaderOffset","findExifOffset","xmpItemId","findIinfXmpItemId","ilocItemExtent","findXmpChunks","findIccChunks","colorType","ACCEPTED_ITEM_INFO_TYPES","currentOffset","indexOf","isHeicFile","HEIC_MAJOR_BRANDS","headerBox","findHeicOffsets","isAvifFile","findAvifOffsets","isWebpFile","RIFF_ID","WEBP_MARKER","EXIF_IDENTIFIER","vp8xChunkOffset","chunkId","chunkSize","isGifFile","GIF_SIGNATURES","GIF_SIGNATURE_SIZE","gifHeaderOffset","isXMLFile","XML_MARKER_OFFSET","XML_MARKER","parseAppMarkers","addFileType","fileType","fileTypeDescription","description","ApertureValue","Math","pow","sqrt","toFixed","ColorSpace","ComponentsConfiguration","character","Contrast","CustomRendered","ExposureMode","ExposureProgram","ExposureTime","decimal","Number","isInteger","round","FNumber","FocalLength","FocalPlaneResolutionUnit","LightSource","MeteringMode","ResolutionUnit","Saturation","SceneCaptureType","Sharpness","ShutterSpeedValue","denominator","WhiteBalance","XResolution","YResolution","name","values","formats","isArray","sample","numerator","test","status","mode","tagNames0thExifIfds","x","y","focalLengths","parseFloat","maxAperture","IFD_TYPE_0TH","IFD_TYPE_1ST","IFD_TYPE_EXIF","IFD_TYPE_GPS","IFD_TYPE_INTEROPERABILITY","IFD_TYPE_MPF","typeSizes","tagTypes","getAsciiValue","getByteAt","getAsciiAt","getShortAt","byteOrder","getLongAt","getRationalAt","getUndefinedAt","getSlongAt","getSrationalAt","getIfdPointerAt","getTypeSize","typeName","getTagValueAt","get0thIfdOffset","readIfd","ifdType","includeUnknown","FIELD_COUNT_SIZE","tags","numberOfFields","getNumberOfFields","fieldIndex","tag","readTag","nextIfdOffset","TAG_TYPE_OFFSET","TAG_COUNT_OFFSET","TAG_VALUE_OFFSET","tagCode","tagType","tagCount","tagValue","tagValueFitsInOffsetSlot","getTagValue","tagValueOffset","tagValueFitsInDataView","splitNullSeparatedAsciiString","asciiValue","decodeURIComponent","escape","decodeAsciiValue","tagName","tagDescription","getDescriptionFromTagValue","count","forceByteType","valueIndex","EXIF_IFD_POINTER_KEY","GPS_INFO_IFD_POINTER_KEY","INTEROPERABILITY_IFD_POINTER_KEY","read","read0thIfd","readExifIfd","readGpsIfd","readInteroperabilityIfd","images","ceil","ENTRY_SIZE","attributes","getImageNumberValue","getImageFlags","getImageFormat","getImageType","imageSize","imageOffset","getImageOffset","dependentImage1EntryNumber","dependentImage2EntryNumber","addMpfImages","entries","flags","flagsDescription","imageFormat","imageIndex","mpEntry","isFirstIndividualImage","getLength","numberOfColorComponents","OFFSET","getNumberOfColorComponents","getDataPrecision","getImageHeight","getImageWidth","getSubsampling","components","componentOffset","getComponentIds","getSamplingType","ids","compontent","types","thumbnailWidth","getThumbnailWidth","thumbnailHeight","getThumbnailHeight","getVersion","getResolutionUnit","getXResolution","getYResolution","thumbnail","thumbnailLength","getThumbnail","majorVersion","minorVersion","getResolutionUnitDescription","getCreationDate","getCreationTime","getEncodingName","parts","split","stringValue","character0","charAt","character1","parseInt","bits","duration","substr","intValue","formatVersions","objectDataPreviewFileFormat","n","date","time","parsedTime","Decoder","TAG_HEADER_SIZE","RESOURCE_BLOCK_HEADER_SIZE","BYTES_8BIM_SIZE","parseTags","naaBlock","newDataOffset","resourceBlock","getResourceBlock","isNaaResourceBlock","getBlockPadding","getNaaResourceBlock","endOfBlockOffset","tagSize","TAG_LEAD_BYTE","leadByteIsMissing","getTagName","getTagDescription","tagIsRepeatable","tagContainsEncoding","tagIsName","hasDynamicName","hasDescriptionProperty","tagValueIsText","fraction","calculateGPSValue","substring","parseNumber","numbers","number","charCodeAt","isFraction","func","degreesString","minutesString","degrees","minutes","isNaN","DOMParser","onErrorStopParsing","onError","chunks","readTags","standardXmp","extendedXmp","completeChunks","combineChunks","extractCompleteChunks","hasStandardTags","hasExtendedTags","_raw","totalLength","chunk","combinedChunks","set","chunkDataView","doc","raw","domParser","xmlString","parseFromString","xmlSource","replace","documentElement","nodeName","textContent","getDocument","parseXMPObject","convertToObject","getRDF","node","childNodes","isTopNode","elements","getChildNodes","nodes","nodeValue","getTextValue","forEach","isElement","nodeElement","getAttributes","getElementFromNode","getElementsFromNodes","element","xmpObject","parseNodeAttributesAsTags","parseNodeChildrenAsTags","isTagAttribute","getLocalName","getDescription","isNamespaceDefinition","arrayDescription","getDescriptionOfArray","descriptions","getClearTextKey","getDescriptionOfObject","parseNodeAsTag","isDuplicateTag","parseNodeAsSimpleValue","parseNodeAsDuplicateTag","trim","isEmptyResourceTag","hasNestedSimpleRdfDescription","parseNodeAsSimpleRdfDescription","hasNestedStructureRdfDescription","parseNodeAsStructureRdfDescription","isCompactStructure","parseNodeAsCompactStructure","getArrayChild","parseNodeAttributes","parseArrayValue","parseNodeAsArray","parseNodeChildrenAsAttributes","getURIValue","parseRdfValue","keys","PathRecordTypes","paths","TYPE_SIZE","PATH_RECORD_TYPES","path","JSON","stringify","parseBezierKnot","getFixedPointNumber","parsePathPoint","vertical","binaryPoint","sign","integer","radix","parseFloatRadix","bytes","signature","SIGNATURE_SIZE","tagId","TAG_ID_SIZE","tagNameSize","resourceSize","RESOURCE_LENGTH_SIZE","SIGNATURE","valueDataView","stringSize","iccTags","iccProfile","toCompany","toLowerCase","year","month","day","hours","seconds","Date","UTC","parseDate","toISOString","sliceToString","iccData","compressedDataView","catch","readCompressedIcc","totalIccProfileLength","sum","iccBinaryData","getBuffer","iccDataChunk","chunkData","readIcc","PROFILE_HEADER_LENGTH","ICC_TAG_COUNT_OFFSET","ICC_SIGNATURE","TAG_TYPE_DESC","TAG_TYPE_MULTI_LOCALIZED_UNICODE_TYPE","TAG_TYPE_TEXT","TAG_TYPE_SIGNATURE","TAG_TABLE_SINGLE_TAG_DATA","hasTagsData","tagHeaderOffset","iccProfileKeys","profileEntry","iccDoesNotHaveTagCount","tagSignature","tagOffset","tagValueSize","addTag","numRecords","recordSize","val","recordNum","languageCode","countryCode","textLength","textOffset","valObj","valIndex","getBitDepth","getColorType","getCompression","getFilter","getInterlace","tagsPromises","nameAndValue","getNameAndValue","isExifGroupTag","__exif","decodeRawData","EXIF_OFFSET","isIptcGroupTag","__iptc","readTagsPromise","all","STATE_KEYWORD","STATE_COMPRESSION","STATE_LANG","STATE_TRANSLATED_KEYWORD","STATE_TEXT","COMPRESSION_SECTION_ITXT_EXTRA_BYTE","COMPRESSION_FLAG_COMPRESSED","keywordChars","langChars","translatedKeywordChars","valueChars","parsingState","getCompressionMethod","moveToNextState","decompressedValueChars","getEncodingFromType","_decompressedValueChars","constructTag","getValue","getName","hex","ArrayBuffer","setUint8","hexToDataView","match","chunkOffsets","chunkLength","getPixelsPerUnitX","getPixelsPerUnitY","getPixelUnits","getModifyDate","chunkOffset","tagFitsInBuffer","pad","repeat","getAlpha","getAnimation","getThreeByteValue","IMAGE_WIDTH_OFFSET","IMAGE_HEIGHT_OFFSET","getGifVersion","getGlobalColorMap","getColorResolution","COMPRESSION_JPEG","thumbnailTags","Compression","JPEGInterchangeFormat","JPEGInterchangeFormatLength","MetadataMissingError","message","stack","load","options","isFilePathOrURL","filename","fetch","url","method","headers","range","response","fetchRemoteFile","resolve","requireNodeGet","statusCode","on","concat","statusMessage","resume","nodeGetRemoteFile","isDataUri","dataUri","atob","decodedData","dataUriToBuffer","fs","requireNodeFs","open","fd","stat","min","alloc","close","loadLocalFile","loadFile","fileContents","loadFromData","window","File","isBrowserFileObject","file","reader","FileReader","onload","readerEvent","target","result","onerror","readAsArrayBuffer","loadView","errors","isBuffer","isNodeBuffer","expanded","foundMetaData","hasFileData","hasJfifData","jfif","hasExifData","Thumbnail","exif","GPSLatitude","GPSLatitudeRef","gps","Latitude","GPSLongitude","GPSLongitudeRef","Longitude","GPSAltitude","GPSAltitudeRef","Altitude","addGpsGroup","hasIptcData","readIptcTags","iptc","hasXmpData","readXmpTags","xmp","readPhotoshopTags","photoshop","hasIccData","readIccTags","addIccTags","hasMpfData","readMpfTags","mpf","png","pngFile","hasPngTextData","addPngTextTags","tagList","hasPngData","hasVp8xData","riff","hasGifFileData","gif","FileType","group","groupKey","pngText","iccDataOffsets","Head","Seo","IndexPage","Layout","Grid","Form","onChange","e","files","ExifReader","log"],"sourceRoot":""}