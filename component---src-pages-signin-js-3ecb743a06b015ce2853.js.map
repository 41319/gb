{"version":3,"file":"component---src-pages-signin-js-3ecb743a06b015ce2853.js","mappings":"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","sources":["webpack://gatsby-starter-default/./node_modules/@themesberg/react-bootstrap/lib/esm/InputGroup.js","webpack://gatsby-starter-default/./src/hooks/userAuth.js","webpack://gatsby-starter-default/./src/pages/signin.js","webpack://gatsby-starter-default/./src/assets/img/illustrations/signin.svg"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport classNames from 'classnames';\nimport React from 'react';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport FormCheckInput from './FormCheckInput';\nvar InputGroupText = createWithBsPrefix('input-group-text', {\n  Component: 'span'\n});\n\nvar InputGroupCheckbox = function InputGroupCheckbox(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"checkbox\"\n  }, props)));\n};\n\nvar InputGroupRadio = function InputGroupRadio(props) {\n  return /*#__PURE__*/React.createElement(InputGroupText, null, /*#__PURE__*/React.createElement(FormCheckInput, _extends({\n    type: \"radio\"\n  }, props)));\n};\n\n/**\n *\n * @property {InputGroupText} Text\n * @property {InputGroupRadio} Radio\n * @property {InputGroupCheckbox} Checkbox\n */\nvar InputGroup = /*#__PURE__*/React.forwardRef(function (_ref, ref) {\n  var bsPrefix = _ref.bsPrefix,\n      size = _ref.size,\n      className = _ref.className,\n      _ref$as = _ref.as,\n      Component = _ref$as === void 0 ? 'div' : _ref$as,\n      props = _objectWithoutPropertiesLoose(_ref, [\"bsPrefix\", \"size\", \"className\", \"as\"]);\n\n  bsPrefix = useBootstrapPrefix(bsPrefix, 'input-group');\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref\n  }, props, {\n    className: classNames(className, bsPrefix, size && bsPrefix + \"-\" + size)\n  }));\n});\nInputGroup.displayName = 'InputGroup';\n\nvar InputGroupWithExtras = _extends({}, InputGroup, {\n  Text: InputGroupText,\n  Radio: InputGroupRadio,\n  Checkbox: InputGroupCheckbox\n});\n\nexport default InputGroupWithExtras;","import { useContext } from 'react'\nimport AuthContext from '../contexts/AppContext'\n\nconst useAuth = () => useContext(AuthContext)\n\nexport default useAuth","\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faAngleLeft, faEnvelope, faUnlockAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { faFacebookF, faGithub, faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { Col, Row, Form, Card, Button, FormCheck, Container, InputGroup } from '@themesberg/react-bootstrap';\nimport { Link, navigate } from 'gatsby';\nimport useAuth from \"../hooks/userAuth\";\nimport BgImage from \"../assets/img/illustrations/signin.svg\";\n\n\nexport default () => {\n\n  const { login } = useAuth()\n  const [message, setMessage] = useState(\"\")\n  const [payload, setPayload] = useState({\n    username: \"\",\n    password: \"\"\n  })\n\n  const handleTextField = (e, payloadKey) => {\n    setPayload({\n      ...payload,\n      [payloadKey]: e.target.value\n    })\n  }\n  const handleBtn = async () => {\n    try {\n      const res = await login(payload.username, payload.password).then(e => navigate('/'))\n    } catch(e) {\n      setMessage(e.message)\n    }\n  }\n\n  return (\n    <main>\n      <section className=\"d-flex align-items-center my-5 mt-lg-6 mb-lg-5\">\n        <Container>\n          <p className=\"text-center\">\n            <Card.Link as={Link} to=\"/\" className=\"text-gray-700\">\n              <FontAwesomeIcon icon={faAngleLeft} className=\"me-2\" /> Back to homepage\n            </Card.Link>\n          </p>\n          <Row className=\"justify-content-center form-bg-image\" style={{ backgroundImage: `url(${BgImage})` }}>\n            <Col xs={12} className=\"d-flex align-items-center justify-content-center\">\n              <div className=\"bg-white shadow-soft border rounded border-light p-4 p-lg-5 w-100 fmxw-500\">\n                <div className=\"text-center text-md-center mb-4 mt-md-0\">\n                  <h3 className=\"mb-0\">Sign in to our platform</h3>\n                </div>\n                <Form className=\"mt-4\">\n                  <Form.Group id=\"email\" className=\"mb-4\">\n                    <Form.Label>Your Email</Form.Label>\n                    <InputGroup>\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control value={payload.username} onChange={(e) => handleTextField(e, 'username')} autoFocus required type=\"email\" placeholder=\"example@company.com\" />\n                    </InputGroup>\n                  </Form.Group>\n                  <Form.Group>\n                    <Form.Group id=\"password\" className=\"mb-4\">\n                      <Form.Label>Your Password</Form.Label>\n                      <InputGroup>\n                        <InputGroup.Text>\n                          <FontAwesomeIcon icon={faUnlockAlt} />\n                        </InputGroup.Text>\n                        <Form.Control value={payload.password} onChange={(e) => handleTextField(e, 'password')} required type=\"password\" placeholder=\"Password\" />\n                      </InputGroup>\n                    </Form.Group>\n                    <div className=\"d-flex justify-content-between align-items-center mb-4\">\n                      <Form.Check type=\"checkbox\">\n                        <FormCheck.Input id=\"defaultCheck5\" className=\"me-2\" />\n                        <FormCheck.Label htmlFor=\"defaultCheck5\" className=\"mb-0\">Remember me</FormCheck.Label>\n                      </Form.Check>\n                      <Card.Link as={Link} to=\"/resetPassword\" className=\"small text-end\">Lost password?</Card.Link>\n                    </div>\n                  </Form.Group>\n                  <Button variant=\"primary\" className=\"w-100\" onClick={handleBtn}>\n                    Sign in\n                  </Button>\n                  {\n                    message\n                  }\n                </Form>\n                <div className=\"d-flex justify-content-center align-items-center mt-4\">\n                  <span className=\"fw-normal\">\n                    Not registered?\n                    <Card.Link as={Link} to=\"/register\" className=\"fw-bold\">\n                      {` Create account `}\n                    </Card.Link>\n                  </span>\n                </div>\n              </div>\n            </Col>\n          </Row>\n        </Container>\n      </section>\n    </main>\n  );\n};\n","export default __webpack_public_path__ + \"static/signin-454f944b6a4061b0ac2932fc2ba2de17.svg\";"],"names":["InputGroupText","Component","InputGroup","_ref","ref","bsPrefix","size","className","_ref$as","as","props","displayName","InputGroupWithExtras","Text","Radio","type","Checkbox","useAuth","useContext","AuthContext","login","message","setMessage","useState","payload","setPayload","username","password","handleTextField","e","payloadKey","target","value","React","Container","Card","Link","to","FontAwesomeIcon","icon","faAngleLeft","Row","style","backgroundImage","BgImage","Col","xs","Form","Group","id","Label","faEnvelope","Control","onChange","autoFocus","required","placeholder","faUnlockAlt","Check","FormCheck","Input","htmlFor","Button","variant","onClick","async","then","navigate"],"sourceRoot":""}