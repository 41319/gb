{"version":3,"file":"component---src-pages-reset-tsx-d3b20626bcf3193caa06.js","mappings":"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","sources":["webpack://inweb/./src/page/Login.tsx","webpack://inweb/./src/pages/reset.tsx"],"sourcesContent":["import * as React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { Link, navigate, graphql } from \"gatsby\";\nimport { WrappedParse as Parse } from \"../vendor/ParseApp\";\nimport Card from \"react-bootstrap/Card\";\nimport { useTranslation } from \"gatsby-plugin-react-i18next\";\nexport default function App({ type = \"signup\" }) {\n  const { t } = useTranslation();\n  const [message, setMessage] = React.useState(\"\");\n  const [model, setModel] = React.useState({});\n\n  const setModelValue = (name, value) => {\n    setModel({\n      ...model,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Container className=\"\">\n      <Row>\n        <Col xs=\"0\" md=\"3\"></Col>\n        <Col xs=\"12\" md=\"6\">\n          <Card className=\"color-brand-1\">\n            <Card.Header> {t(type)}</Card.Header>\n\n            <Card.Body>\n              <Form>\n                <Row>\n                  <Col xs=\"12\">\n                    <Form.Group\n                      className=\"mb-3\"\n                      controlId=\"exampleForm.ControlInput1\"\n                    >\n                      <Form.Label>Email Address</Form.Label>\n                      <Form.Control\n                        type=\"text\"\n                        placeholder=\"\"\n                        onChange={(v) => setModelValue(\"email\", v.target.value)}\n                      />\n                    </Form.Group>\n                  </Col>\n                  {type !== \"reset\" && (\n                    <Col xs=\"12\">\n                      <Form.Group\n                        className=\"mb-3\"\n                        controlId=\"exampleForm.ControlInput1\"\n                      >\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                          type=\"password\"\n                          placeholder=\"\"\n                          onChange={(v) =>\n                            setModelValue(\"password\", v.target.value)\n                          }\n                        />\n                      </Form.Group>\n                    </Col>\n                  )}\n                </Row>\n                {type === \"signup\" && (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      onClick={async () => {\n                        try {\n                          Parse.Cloud.run(\"createUser\", model)\n                            .then((e) => {\n                              setMessage(t(\"verifyEmailClause\"));\n                            })\n                            .catch((e: Exception) => {\n                              setMessage(e?.message);\n                            });\n                        } catch (e: Exception) {\n                          setMessage(e?.message);\n                        }\n                      }}\n                    >\n                      Sign Up\n                    </Button>\n                    <div>\n                      <br />\n                      {message}\n                    </div>\n                  </>\n                )}{\" \"}\n                {type === \"login\" && (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      onClick={async () => {\n                        try {\n                          await Parse.User.logIn(model.email, model.password);\n                          const profileItem = await Parse.Cloud.run(\n                            \"getMyProfile\"\n                          );\n                          if (profileItem) {\n                            navigate(\"/\");\n                          } else {\n                            navigate(\"/account\");\n                          }\n                        } catch (e: Exception) {\n                          setMessage(e?.message);\n                        }\n                      }}\n                    >\n                      Login\n                    </Button>{\" \"}\n                    <Link to=\"/reset\">Reset Password</Link>\n                    <div>{message}</div>\n                  </>\n                )}\n                {type === \"reset\" && (\n                  <>\n                    <Button\n                      variant=\"primary\"\n                      onClick={async () => {\n                        try {\n                          await Parse.User.requestPasswordReset(model.email);\n                        } catch (e: Exception) {\n                          setMessage(e?.message);\n                        }\n                      }}\n                    >\n                      Reset Password\n                    </Button>\n                    <div>{message}</div>\n                  </>\n                )}\n              </Form>\n            </Card.Body>\n          </Card>\n        </Col>\n        <Col xs=\"0\" md=\"3\"></Col>\n      </Row>\n    </Container>\n  );\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n","import * as React from \"react\";\nimport Layout from \"../components/layout/Layout\";\nimport Login from \"../page/Login\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport { WrappedParse as Parse } from \"../vendor/ParseApp\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { Exception } from \"sass\";\nimport { graphql } from \"gatsby\";\n\nexport default function App() {\n  const [message, setMessage] = React.useState(\"\");\n  const [model, setModel] = React.useState({\n    type: 0,\n  });\n\n  const setModelValue = (name, value) => {\n    setModel({\n      ...model,\n      [name]: value,\n    });\n  };\n\n  return (\n    <Layout>\n      <section className=\"section\">\n        <Login type=\"reset\" />\n      </section>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n  }\n`;\n"],"names":["App","type","t","useTranslation","React","message","setMessage","model","setModel","setModelValue","name","value","Container","className","Row","Col","xs","md","Card","Form","controlId","placeholder","onChange","v","target","Button","variant","onClick","Parse","then","e","catch","email","password","navigate","_context2","Link","to","_context3","Layout","Login"],"sourceRoot":""}