{"version":3,"file":"component---src-pages-cart-tsx-6b3a54c88ac5c73dd149.js","mappings":"iJAMaA,EAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,SAAUC,EAAjB,EAAiBA,SAAjB,MAAiC,CACvDC,KAAMC,EAAAA,GACNC,QAAS,CACLC,KAAM,CACFN,GAAAA,EACAC,SAAAA,EACAC,SAAAA,IANL,C,uHC4EP,UArEkB,SAAC,GAAa,IAAXK,EAAW,EAAXA,KAEbC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAACC,GAAD,aAAWA,SAAX,QAAC,EAAUA,EAAOC,YAAlB,aAAWC,EAAaC,KAAzB,GAAgCC,EAAAA,IAC7D,EAA0BC,EAAAA,SAAe,IAAzC,WACcC,EAAAA,EAAAA,kBAANC,EAQR,OACEF,EAAAA,cAAAA,UAAAA,CAASG,UAAU,yBACjBH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,aACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,qBACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,gCACbH,EAAAA,cAAAA,KAAAA,KAAAA,SAAWP,EAAUW,OAArB,MAEFJ,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,yBACbH,EAAAA,cAAAA,KAAAA,KAGEP,EAAUY,KAAI,SAAAhB,GAAQ,MAjBVN,EAAO,MAkBXuB,GAlBIvB,EAkBqBM,EAAKN,GAhBhD,WADgBO,SAAH,UAAGA,EAAMiB,gBAAT,iBAAGC,EAAgBC,aAAnB,aAAGC,EAAuBC,QAAO,qBAAGC,KAAgB7B,KAAOA,CAAxD,KACD,UAAf,aAAO8B,EAAYD,MAmBT,OACEZ,EAAAA,cAAAA,KAAAA,CAAIc,IAAKzB,EAAKN,IACZiB,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,gBAEbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,mBACbH,EAAAA,cAAAA,MAAAA,CAAKe,IAAKT,SAAF,UAAEA,EAASU,MAAM,UAAjB,aAAEC,EAAmBC,IAAKC,IAAI,GAAGC,MAAM,QAEjDpB,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,iBACbH,EAAAA,cAAAA,MAAAA,CAAKG,UAAU,eACbH,EAAAA,cAAAA,KAAAA,KAAAA,sBACAA,EAAAA,cAAAA,OAAAA,KAAAA,MAAUX,EAAKL,SAAf,OAIFgB,EAAAA,cAAAA,IAAAA,KAAIX,EAAKgC,cAEXrB,EAAAA,cAAAA,MAAAA,CAAOG,UAAU,WACbH,EAAAA,cAACsB,EAAAA,EAAD,CACEC,gBAAiBlC,EAAKL,SACtBwC,UAAW,SAACxC,GACVO,GAAST,EAAAA,EAAAA,GAAW,CAClBC,GAAIM,EAAKN,GACTC,SAAAA,IAEH,MA5Bb,QAxBd,EAuEO,IAAMyC,EAAe,kBAAMzB,EAAAA,cAAAA,QAAAA,KAAAA,YAA3B,C,qCC1DP,IAxBkB,SAAC,GAA6C,EAA3C0B,SAA4C,IAAlCF,EAAiC,EAAjCA,UAAWD,EAAsB,EAAtBA,gBACxC,GAAgCI,EAAAA,EAAAA,UAASJ,GAAlCvC,EAAP,KAAiB4C,EAAjB,KACMC,EAAa,SAACC,GAClB,IAAMC,EAAQ/C,EAAW8C,EACrBC,GAAS,IACXH,EAAYG,GACZP,GAAaA,EAAUO,GAE1B,EACD,OACE,uBAAK5B,UAAS,0BACZ,2BACE,qBAAGA,UAAU,8BACX,qBAAGA,UAAU,qBAAqB6B,QAAS,kBAAMH,GAAY,EAAlB,KAE7C,+BAAU7C,GACV,qBAAGmB,UAAU,8BACX,qBAAGA,UAAU,oBAAoB6B,QAAS,kBAAMH,EAAW,EAAjB,MAKnD,C","sources":["webpack://inweb/./src/helpers/action.ts","webpack://inweb/./src/pages/cart.tsx","webpack://inweb/./src/components/counter/index.js"],"sourcesContent":["import {\n    UPDATE_CART,\n    SHOW_LOADER,\n    HIDE_LOADER,\n  } from \"../state/actions/actions\";\n\nexport const updateCart = ({ id, quantity, comments }) => ({\n    type: UPDATE_CART,\n    payload: {\n        item: {\n            id,\n            quantity,\n            comments\n        }\n    }\n})","import * as React from \"react\";\nimport type { HeadFC } from \"gatsby\";\nimport Counter from '../components/counter'\nimport {\n  Trans,\n  useTranslation,\n  I18nextContext,\n} from \"gatsby-plugin-react-i18next\";\nimport { graphql } from \"gatsby\";\nimport Badge from \"react-bootstrap/Badge\";\nimport { shallowEqual, useSelector, useDispatch } from \"react-redux\";\nimport { updateCart } from '../helpers/action'\n\nconst IndexPage = ({ data }) => {\n\n  const dispatch = useDispatch()\n  const cartItems = useSelector((state) => state?.cart?.items, shallowEqual);\n  const [items, setItems] = React.useState([]);\n  const { t } = useTranslation();\n\n  const getProductInfo = (id) => {\n    const product = data?.products?.edges?.filter(({ node }) => node.id === id)\n    return product[0]?.node;\n  }\n\n  \n  return (\n    <section className=\"pt-25 pb-40 grey-bg-2\">\n      <div className=\"container\">\n        <div className=\"postbox__comments\">\n          <div className=\"postbox__comment-title mb-30\">\n            <h3>Cart ({cartItems.length})</h3>\n          </div>\n          <div className=\"latest-comments mb-30\">\n            <ul>\n              {\n              \n              cartItems.map(item => {\n                const product = getProductInfo(item.id)\n              \n              \n              return (\n                <li key={item.id}>\n                  <div className=\"comments-box\">\n\n                    <div className=\"comments-avatar\">\n                      <img src={product?.media[0]?.url} alt=\"\" width=\"78\" />\n                    </div>\n                    <div className=\"comments-text\">\n                      <div className=\"avatar-name\">\n                        <h5>Siarhei Dzenisenka</h5>\n                        <span> - {item.quantity}x </span>\n\n\n                      </div>\n                      <p>{item.description}</p>\n                    </div>\n                    <div   className=\"f-right\">\n                        <Counter \n                          initialQuantity={item.quantity}\n                          onChanged={(quantity) => {\n                            dispatch(updateCart({\n                              id: item.id,\n                              quantity\n                            }))\n                          }}\n                        />\n                        </div>\n                  </div>\n                </li>\n              )})\n            \n            }\n            </ul>\n\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default IndexPage;\n\nexport const Head: HeadFC = () => <title>Home Page</title>;\n\nexport const query = graphql`\n  query ($language: String!) {\n    locales: allLocale(filter: { language: { eq: $language } }) {\n      edges {\n        node {\n          ns\n          data\n          language\n        }\n      }\n    }\n\n    products: allProduct {\n      edges {\n        node {\n          id\n          media {\n            type\n            url\n          }\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\n\nconst Component = ({ children, onChanged, initialQuantity }) => {\n  const [quantity, setQuantity] = useState(initialQuantity);\n  const adjustCart = (offset) => {\n    const count = quantity + offset;\n    if (count > -1) {\n      setQuantity(count);\n      onChanged && onChanged(count);\n    }\n  };\n  return (\n    <div className={`card  product__content`}>\n      <div>\n        <a className=\"btn btn-primary btn-social\">\n          <i className=\"fal fa-minus fa-lg\" onClick={() => adjustCart(-1)}></i>\n        </a>\n        <span>{`${quantity}`}</span>\n        <a className=\"btn btn-primary btn-social\">\n          <i className=\"fal fa-plus fa-lg\" onClick={() => adjustCart(1)}></i>\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Component;\n"],"names":["updateCart","id","quantity","comments","type","UPDATE_CART","payload","item","data","dispatch","useDispatch","cartItems","useSelector","state","cart","_state$cart","items","shallowEqual","React","useTranslation","t","className","length","map","product","products","_data$products","edges","_data$products$edges","filter","node","_product$","key","src","media","_product$media$","url","alt","width","description","Counter","initialQuantity","onChanged","Head","children","useState","setQuantity","adjustCart","offset","count","onClick"],"sourceRoot":""}